FORMAT: 1A
# RMS(one) API
This section provides a listing of the supported RMS(one)Â® application programming interface (API). Remember to prefix the base unique resource identifier (URI) to your API call.  

# Group Authentication
This section groups token resources.

## tokens [/services/v1/tokenService/tokens]
A token is passed into every RMS(one) API call to authenticate a user. The token expire after 24 hours.


+ Token Model (application/json)
    
    ```js
    { 
        "token": {
          "IsImpersonated": "boolean",
          "IsTemporaryLogin":"boolean",
          "ResolvedRole":"string: tenant role",
          "Signature":"string",
          "TenantId": "integer",
          "TokenIssueTime":"string, datetime: Unix format",
          "TokenTTL":"long: minutes",
          "UserGroup":"string: tenant groups",
          "UserId": "integer",
          "UserLogin":"string",
          "UserName":"string",
          "UserRole":"string: user role",
          "VersionInfo":"string: version info in the format X.Y"
        },
        "AuthStatus": {
            "Code": "number",
            "Detail": "string: null. This parameter is not used presently.",
            "Message": "string"
        }
    }
    ```

### POST tokens [POST]
Creates a token object. Pass the user's credentials using basic authentication and get a token. The token expire after 24 hours.

+ Request
    + Headers
    
            Authorization: Basic "Base64/UTF8 encoded string in the format: companyName\username:password"
    
+ Response 201
    
    [Token][]

# Group Domain Data
This section groups domain resources.

## domain [/services/v1/domainService/domains/{code}]
Creates domains and returns domain lists.

+ domain Model (application/json)
    
    ```js
        {
            "Id": "string: unique ID",
            "Code": "string: domain code",
            "Description": "string",
            "Name": "string",
            "Path": "string",
            "Owner": "number: unique ID of the user who created this domain",
            "ParentResourceId": "number: unique ID of the parent resource",
            "AsOf": "string: date and time of the last update in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
            "Created": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
            "NamespaceCount": "number: number of namespaces in this domain"
        }
    ```

### GET domain [GET]
Returns the specified domain.

+ Response 200
    
    [domain][]


## domains [/services/v1/domainService/domains/{?asOf, code, created, description, id, limit, name, namespaceCount, offset, owner, parentSourceId, path, resourceId}]

### GET domains [GET]

+ Parameters
   + asOf (string, optional) ... Date and time of the last update in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + code (string, optional) ... Domain data.
   + created ( string, optional) ... Date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + description (string, optional) ... Domain descriptions.
   + id (string, optional) ... Unique identifier.
   + limit (number, optional) ... Number of records to return per page.
   + name (string, optional) ... Domain names.
   + namespaceCount (integer, optional) ... Number of namespaces in this domain.
   + offset (number, optional) ... Returns results starting with this record number (0-based).   
   + owner (string, optional) ... ID of the user who created this domain.
   + parentSourceId (integer, optional) ... Parent resource ID.
   + path (string, optional) ... Domain pathname.
   + resourceId (integer, optional) ... Unique ID of this domain.

+ Response 200
    
    ```js
        {
            "Count": "number: number of domains",
            "Domains": [
                {
                    "Code": "string: domain code",
                    "Description": "string",
                    "Name": "string",
                    "AsOf": "string: date and time of the last update in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "Created": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "Id": "string: unique ID",
                    "Owner": "string: unique ID of the user who created this domain",
                    "ParentResourceId": "integer: unique ID of the parent resource",
                    "Path": "string: domain pathname",
                    "ResourceId": "integer: unique ID of this domain", 
                    "NamespaceCount": "integer: number of namespaces in this domain"
                },
                {
                    "Id": "string: unique ID",
                    "Code": "string: domain code",
                    "Description": "string",
                    "Name": "string",
                    "Path": "string",
                    "Owner": "number: unique ID of the user who created this domain.",
                    "ParentResourceId": "number: unique ID of the parent resource.",
                    "AsOf": "string: date and time of the last update in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "Created": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "NamespaceCount": "number: number of namespaces in this domain."
                },
                {
                    "Id": "string: unique ID",
                    "Code": "string: domain code",
                    "Description": "string",
                    "Name": "string",
                    "Path": "string",
                    "Owner": "number: unique ID of the user who created this domain.",
                    "ParentResourceId": "number: unique ID of the parent resource.",
                    "AsOf": "string: date and time of the last update in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "Created": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "NamespaceCount": "number: number of namespaces in this domain."
                }
            ]
        }
    ```



## namespace [/services/v1/domainService/domains/{code}/namespaces/{code}]

+ namespace Model (application/json)
    
    ```js
        {
            "Id": "string: unique ID",
            "Code": "string: namespace code",
            "Description": "string",
            "Name": "string",
            "Path": "string",
            "EntityCount": "number: number of entities in this namespace",
            "Owner": "number: unique ID of the user who created this namespace",
            "ResourceId": "number: unique ID of the resource",
            "ParentResourceId": "number: unique ID of the parent resource",
            "AsOfDate": "string: date and time of the ast update in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
            "Created": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time"
        }
    ```

### GET namespace [GET]
Returns a specified namespace.

+ Response 200
    
    [namespace][]


## namespaces [/services/v1/domainService/domains/{code}/namespaces{?asOfDate, code, created, description, entityCount, id, limit, name, namespaceCount, offset, owner, parentSourceId, path}]

### GET namespaces [GET]
Returns a list of namespaces.

+ Parameters
   + asOfDate (string: datetime, optional) ... Date and time of the last update in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + code (string: domain code, optional)... Domain data.
   + created ( string: datetime, optional) ... Date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + description (string, optional) ... Domain descriptions.
   + entityCount (integer) ... Number of entities in this namespace.
   + id (string, optional) ... Unique identifier.
   + limit (number, optional) ... Number of records to return per page.
   + name (string, optional) ... Domain names.
   + namespaceCount ( integer, optional) ... Number of namespaces in this domain. 
   + offset (number, optional) ... Returns results starting with this record number (0-based).   
   + owner (integer, optional) ... ID of the user who created this domain.
   + parentSourceId (integer, optional) ... Parent resource ID.
   + path (string, optional) ... Domain pathnames.

+ Response 200
    
    ```js
        {
            "Count": "number: number of namespaces in domain",
            "Namespaces": [
                {
                    "Id": "string: unique ID",
                    "Code": "string: namespace code",
                    "Description": "string",
                    "Name": "string",
                    "Path": "string",
                    "EntityCount": "number: number of entities in this namespace",
                    "Owner": "number: unique ID of the user who created this namespace",
                    "ResourceId": "number: unique ID of the resource",
                    "ParentResourceId": "number: unique ID of the parent resource",
                    "AsOfDate": "string: date and time of the last update in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "Created": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time"
                },
                {
                    "Id": "string: unique ID",
                    "Code": "string: namespace code",
                    "Description": "string",
                    "Name": "string",
                    "Path": "string",
                    "EntityCount": "number: number of entities in this namespace",
                    "Owner": "number: unique ID of the user who created this namespace",
                    "ResourceId": "number: unique ID of the resource",
                    "ParentResourceId": "number: unique ID of parent resource",
                    "AsOfDate": "string: date and time of the last update in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "Created": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time"
                },
                {
                    "Id": "string: unique ID",
                    "Code": "string: namespace code",
                    "Description": "string",
                    "Name": "string",
                    "Path": "string",
                    "EntityCount": "number: number of entities in this namespace",
                    "Owner": "number: unique ID of the user who created this namespace",
                    "ResourceId": "number: unique ID of the resource",
                    "ParentResourceId": "number: unique ID of parent resource",
                    "AsOfDate": "string: date and time of the last update in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "Created": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time"
                }
            ]
        }
    ```

## entity [/services/v1/domainService/domains/{code}/namespaces/{code}/entities/{code}]
Entities are similar to tables in a SQL database. Each entity can only have one attribute (column) as a primary key. 

+ entity Model (application/json)
    
    ```js
        {
            "Code": "string: entity code",
            "Description": "string",
            "Name": "string: user-friendly name",
            "AsOfDate": "string: date and time of latest entity in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
            "Created": "string: date and time of entity creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
            "Id": "string: unique ID",
            "Owner": "number: unique ID of the user who created this entity",
            "ParentResourceId": "number: unique ID of parent resource",
            "Path": "string",
            "ResourceId": "number: unique ID of resource.",
            "AttributeCount": "number: the number of attributes in this entity",
            "Attributes": [
                {
                    "Code": "string: identifier",
                    "Description": "string",
                    "Name": "string: user-friendly name",
                    "ColumnId": "number: unique ID",
                    "Constraint": {
                        "AllowsNull": "string: boolean",
                        "IsLocked": "string: boolean",
                        "IsPrimaryKey": "string: boolean",
                        "IsUnique": "string: boolean"
                    },
                    "Reference": "string: reference to other entity",
                    "Type": "number: data type - 0=String, 1=Reference = 1, 2=Integer =2, 3=Float, 4=Boolean, 5=Long, 6=DateTime, 7=Url, 8=Identity"
                },
                {
                    "Code": "string: identifier",
                    "Description": "string",
                    "Name": "string: user-friendly name",
                    "ColumnId": "number: unique ID",
                    "Constraint": {
                        "AllowsNull": "string: boolean",
                        "IsLocked": "string: boolean",
                        "IsPrimaryKey": "string: boolean",
                        "IsUnique": "string: boolean"
                    },
                    "Reference": "string: reference to other entity",
                    "Type": "number: data type - 0=String, 1=Reference = 1, 2=Integer =2, 3=Float, 4=Boolean, 5=Long, 6=DateTime, 7=Url, 8=Identity"
                },
                {
                    "Code": "string: identifier",
                    "Description": "string",
                    "Name": "string: user-friendly name",
                    "ColumnId": "number: unique ID",
                    "Constraint": {
                        "AllowsNull": "string: boolean",
                        "IsLocked": "string: boolean",
                        "IsPrimaryKey": "string: boolean",
                        "IsUnique": "string: boolean"
                    },
                    "Reference": "string: reference to other entity",
                    "Type": "number: data type - 0=String, 1=Reference = 1, 2=Integer =2, 3=Float, 4=Boolean, 5=Long, 6=DateTime, 7=Url, 8=Identity"
                }
            ],
            "IsDeleted": "string: boolean",
            "IsExtensible": "string: boolean",
            "IsViewable": "string: boolean",
            "Type": "number: entity type - 0=Table, 1=Datapack, 2=Tree"
        }
    ```

### GET entity [GET]
Returns a specified entitiy.

+ Response 200
    
    [entity][]


## entities [/services/v1/domainService/domains/{code}/namespaces/{code}/entities/{?asOfDate, attributes, attributeCount, code, count, created, description, id, limit, name, namespaceCount, offset, owner, parentSourceId, path}]


### GET entities [GET]
Returns a list of entities.

+ Parameters
   + asOfDate (string: datetime, optional) ... Date and time of the last update in the format YYYYMMDDThh:mm:ss:sssZ for UTC time..
   + attributeCount (integer, optional) ... Number of attributes in this entity.
   + attributes (string, optional) ... Attribute information.
   + count (integer, optional) ... Number of entities in the namespace.
   + code (string: domain code, optional)... Domain data.
   + created ( string: datetime, optional) ... Date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + description (string, optional) ... Domain descriptions.
   + id (string, optional) ... Unique identifier.
   + limit (number, optional) ... Number of records to return per page.
   + name (string, optional) ... Domain names.
   + namespaceCount ( integer, optional) ... Number of namespaces in this domain.
   + offset (number, optional) ... Returns results starting with this record number (0-based). 
   + owner (integer, optional) ... UniqueID of the user who created this domain.
   + parentSourceId (integer, optional) ... Unique parent resource ID.
   + path (string, optional) ... Domain pathnames.

+ Response 200
    
    ```js
        {
            "Count": "number: number of entities in namespace",
            "EntityMetaInfos": [
                {
                    "Code": "string: entity code",
                    "Description": "string",
                    "Name": "string: user-friendly name",
                    "AsOfDate": "string: date and tine of latest entite in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "Created": "string: date and time of creatin in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "Id": "string: unique ID",
                    "Owner": "number: unique ID of the user who created this entity",
                    "ParentResourceId": "number: unique ID of the parent resource",
                    "Path": "string",
                    "ResourceId": "number: unique ID of the resource",
                    "AttributeCount": "number: number of attributes in this entity",
                    "Attributes": [
                        {
                            "Code": "string: identifier",
                            "Description": "string",
                            "Name": "string: user-friendly name",
                            "ColumnId": "number: unique ID",
                            "Constraint": {
                                "AllowsNull": "string: boolean",
                                "IsLocked": "string: boolean",
                                "IsPrimaryKey": "string: boolean",
                                "IsUnique": "string: boolean"
                            },
                            "Reference": "string: reference to other entity",
                            "Type": "number: data type - 0=String, 1=Reference = 1, 2=Integer =2, 3=Float, 4=Boolean, 5=Long, 6=DateTime, 7=Url, 8=Identity"
                        },
                        {
                            "Code": "string: identifier",
                            "Description": "string",
                            "Name": "string: user-friendly name",
                            "ColumnId": "number: unique ID",
                            "Constraint": {
                                "AllowsNull": "string: boolean",
                                "IsLocked": "string: boolean",
                                "IsPrimaryKey": "string: boolean",
                                "IsUnique": "string: boolean"
                            },
                            "Reference": "string: reference to other entity",
                            "Type": "number: data type - 0=String, 1=Reference = 1, 2=Integer =2, 3=Float, 4=Boolean, 5=Long, 6=DateTime, 7=Url, 8=Identity"
                        },
                        {
                            "Code": "string: identifier",
                            "Description": "string",
                            "Name": "string: user-friendly name",
                            "ColumnId": "number: unique ID",
                            "Constraint": {
                                "AllowsNull": "string: boolean",
                                "IsLocked": "string: boolean",
                                "IsPrimaryKey": "string: boolean",
                                "IsUnique": "string: boolean"
                            },
                            "Reference": "string: reference to other entity",
                            "Type": "number: data type - 0=String, 1=Reference = 1, 2=Integer =2, 3=Float, 4=Boolean, 5=Long, 6=DateTime, 7=Url, 8=Identity"
                        }
                    ],
                    "IsDeleted": "string: boolean",
                    "IsExtensible": "string: boolean",
                    "IsViewable": "string: boolean",
                    "Type": "number: entity type - 0=Table, 1=Datapack, 2=Tree"
                },
                {
                    "Code": "string: entity code",
                    "Description": "string",
                    "Name": "string: user-friendly name",
                    "AsOfDate": "string: date and time of latest entity in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "Created": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "Id": "string: unique ID",
                    "Owner": "number: unique ID of the user who created this entity",
                    "ParentResourceId": "number: unique ID of parent resource",
                    "Path": "string",
                    "ResourceId": "number: unique ID of resource",
                    "AttributeCount": "number: number of attributes in this entity",
                    "Attributes": [
                        {
                            "Code": "string: identifier",
                            "Description": "string",
                            "Name": "string: user-friendly name",
                            "ColumnId": "number: unique ID",
                            "Constraint": {
                                "AllowsNull": "string: boolean",
                                "IsLocked": "string: boolean",
                                "IsPrimaryKey": "string: boolean",
                                "IsUnique": "string: boolean"
                            },
                            "Reference": "string: reference to other entity",
                            "Type": "number: data type - 0=String, 1=Reference = 1, 2=Integer =2, 3=Float, 4=Boolean, 5=Long, 6=DateTime, 7=Url, 8=Identity"
                        },
                        {
                            "Code": "string: identifier",
                            "Description": "string",
                            "Name": "string: user-friendly name",
                            "ColumnId": "number: unique ID",
                            "Constraint": {
                                "AllowsNull": "string: boolean",
                                "IsLocked": "string: boolean",
                                "IsPrimaryKey": "string: boolean",
                                "IsUnique": "string: boolean"
                            },
                            "Reference": "string: reference to other entity",
                            "Type": "number: data type - 0=String, 1=Reference = 1, 2=Integer =2, 3=Float, 4=Boolean, 5=Long, 6=DateTime, 7=Url, 8=Identity"
                        },
                        {
                            "Code": "string: identifier",
                            "Description": "string",
                            "Name": "string: user-friendly name",
                            "ColumnId": "number: unique ID",
                            "Constraint": {
                                "AllowsNull": "string: boolean",
                                "IsLocked": "string: boolean",
                                "IsPrimaryKey": "string: boolean",
                                "IsUnique": "string: boolean"
                            },
                            "Reference": "string: reference to other entity",
                            "Type": "number: data type - 0=String, 1=Reference = 1, 2=Integer =2, 3=Float, 4=Boolean, 5=Long, 6=DateTime, 7=Url, 8=Identity"
                        }
                    ],
                    "IsDeleted": "string: boolean",
                    "IsExtensible": "string: boolean",
                    "IsViewable": "string: boolean",
                    "Type": "number: entity type - 0=Table, 1=Datapack, 2=Tree"
                },
                {
                    "Code": "string: entity code",
                    "Description": "string",
                    "Name": "string: user-friendly name",
                    "AsOfDate": "string: date and time of latest entity  in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "Created": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "Id": "string: unique ID",
                    "Owner": "number: unique ID of the user who created this entity",
                    "ParentResourceId": "number: unique ID of parent resource",
                    "Path": "string",
                    "ResourceId": "number: unique ID of resource",
                    "AttributeCount": "number: number of attributes in this entity",
                    "Attributes": [
                        {
                            "Code": "string: identifier",
                            "Description": "string",
                            "Name": "string: user-friendly name",
                            "ColumnId": "number: unique ID",
                            "Constraint": {
                                "AllowsNull": "string: boolean",
                                "IsLocked": "string: boolean",
                                "IsPrimaryKey": "string: boolean",
                                "IsUnique": "string: boolean"
                            },
                            "Reference": "string: reference to other entity",
                            "Type": "number: data type - 0=String, 1=Reference = 1, 2=Integer =2, 3=Float, 4=Boolean, 5=Long, 6=DateTime, 7=Url, 8=Identity"
                        },
                        {
                            "Code": "string: identifier",
                            "Description": "string",
                            "Name": "string: user-friendly name",,
                            "ColumnId": "number: unique ID",
                            "Constraint": {
                                "AllowsNull": "string: boolean",
                                "IsLocked": "string: boolean",
                                "IsPrimaryKey": "string: boolean",
                                "IsUnique": "string: boolean"
                            },
                            "Reference": "string: reference to other entity",
                            "Type": "number: data type - 0=String, 1=Reference = 1, 2=Integer =2, 3=Float, 4=Boolean, 5=Long, 6=DateTime, 7=Url, 8=Identity"
                        },
                        {
                            "Code": "string: identifier",
                            "Description": "string",
                            "Name": "string: user-friendly name",
                            "ColumnId": "number: unique ID",
                            "Constraint": {
                                "AllowsNull": "string: boolean",
                                "IsLocked": "string: boolean",
                                "IsPrimaryKey": "string: boolean",
                                "IsUnique": "string: boolean"
                            },
                            "Reference": "string: reference to other entity",
                            "Type": "number: data type - 0=String, 1=Reference = 1, 2=Integer =2, 3=Float, 4=Boolean, 5=Long, 6=DateTime, 7=Url, 8=Identity"
                        }
                    ],
                    "IsDeleted": "string: boolean",
                    "IsExtensible": "string: boolean",
                    "IsViewable": "string: boolean",
                    "Type": "number: entity type - 0=Table, 1=Datapack, 2=Tree"
                }
            ]
        }
    ```

## value [/services/v1/domainService/domains/{code}/namespaces/{code}/entities/{code}/values/{primaryKeyCode}]
Values are similar to rows in a SQL table.

+ value Model (application/json)
    
    ```js
        {
            "Count": "number: number of existing values",
            "DomainCode": "string: domain",
            "EntityCode": "string: entity",
            "EntityValueInfos": [
                {
                    "AsOf": "string: date and time of the last update in the format: 0001-01-01T00:00:00.0000000",
                    "Id": "string: unique ID",
                    "Owner": "number: user ID of person who created this value",
                    "Tuples": [
                        {
                            "Key": "string: column name",
                            "Value": "string: column value"
                        },
                        {
                            "Key": "string: column name",
                            "Value": "string: column value"
                        },
                        {
                            "Key": "string: column name",
                            "Value": "string: column value"
                        }
                    ]
                }
            ],
            "NamespaceCode": "string: namespace",
            "ParentPath": "string: path"
        }
    ```

### GET value [GET]

+ Response 200
    
    [value][]


### PUT value [PUT]

+ Request
    
    [value][]

+ Response 200
    
    [value][]

## values [/services/v1/domainService/domains/{code}/namespaces/{code}/entities/{code}/values{?asOf, count, domainCode, entityCode, entityValueInfos, id, key, limit, offset, owner, tuples, value}]

### GET values [GET]
Returns a list of values.

+ Parameters
   + asOf (string: datetime, optional) ... Date and time of the last update in the format 0001-01-01T00:00:00.0000000/.
   + count (integer, optional) ... Number of values in entity.
   + domainCode (string, optional) ... Unique identifier.
   + entityCode (string, optional)... Entity code.
   + entityValueInfos (string, optional) ... Value information.
   + id (string, optional) ... Unique identifier.
   + key (string, optional) ... Column name.
   + limit (number, optional) ... Number of records to return per page.
   + offset (number, optional) ... Returns results starting with this record number (0-based).   
   + owner (integer, optional) ... ID of the user who created this domain.
   + tuples ( strong, optional) ... Column information.
   + value (string, optional) ... Column value.

+ Response 200
    
    ```js
        {
            "Count": "number: number of values in entity",
            "DomainCode": "string: domain",
            "EntityCode": "string: entity",
            "EntityValueInfos": [
                {
                    "AsOf": "string: dateTime - 0001-01-01T00:00:00.0000000",
                    "Id": "string: unique ID",
                    "Owner": "number: unique ID of the user who created this value",
                    "Tuples": [
                        {
                            "Key": "string: column name",
                            "Value": "string: column value"
                        },
                        {
                            "Key": "string: column name",
                            "Value": "string: column value"
                        },
                        {
                            "Key": "string: column name",
                            "Value": "string: column value"
                        }
                    ]
                },
                {
                    "AsOf": "string: dateTime - 0001-01-01T00:00:00.0000000",
                    "Id": "string: unique ID",
                    "Owner": "number: unique ID of the user who created this value",
                    "Tuples": [
                        {
                            "Key": "string: column name",
                            "Value": "string: column value"
                        },
                        {
                            "Key": "string: column name",
                            "Value": "string: column value"
                        },
                        {
                            "Key": "string: column name",
                            "Value": "string: column value"
                        }
                    ]
                },
                {
                    "AsOf": "string: dateTime - 0001-01-01T00:00:00.0000000",
                    "Id": "string: unique ID",
                    "Owner": "number: unique ID of the user who created this value",
                    "Tuples": [
                        {
                            "Key": "string: column name",
                            "Value": "string: column value"
                        },
                        {
                            "Key": "string: column name",
                            "Value": "string: column value"
                        },
                        {
                            "Key": "string: column name",
                            "Value": "string: column value"
                        }
                    ]
                }
            ],
            "NamespaceCode": "string: namespace",
            "ParentPath": "string: path"
        }
    ```


### POST values [POST]

+ Request
    
    ```js
        [
            {
                "Tuples": [
                    {
                        "Key": "string: column name",
                        "Value": "string: column value"
                    },
                    {
                        "Key": "string: column name",
                        "Value": "string: column value"
                    },
                    {
                        "Key": "string: column name",
                        "Value": "string: column value"
                    }
                ]
            }
        ]
    ```

+ Response 201
    
    [value][]
   

# Group Activities

This section groups Activities resources. An Activity object is used in asynchronous operations on the platform, such as queuing an analysis, importing or exporting a file, and submitting a complex query.


## activity [/services/v1/JobManagerService/activities/{id}]
Activity types include import, geocoding, hazard retrieval, accumulation analyses, and peril model analyses.



+ activity Model (application/json)
    
    ```js
        { 
            "completed": "string: The datetime in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
            "id:"integer: Activity ID",
            "owner": "number: user ID of the person who submitted the job",
            "priority": "string: activity priority. Values are: Lowest, BelowNormal, Normal, AboveNormal, and Highest.",
            "scheduled": "string: date and time of scheduled activity in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
            "started": "string: start date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
            "status": "string: domain data code for Scheduled, Queued, Running, Completed, Failed, Canceled, Initializing, and Canceling",
            "submitted": "string: submittal date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
            "type": "string: domain data code for the type of job. Job types are: FileImport, EdmImport, RiskAnalysis, ExposureExport, RiskAnalysisExport, and Query.",
            "uri": "string: uniform resource identifier"
        }
    ```

### GET activity [GET]
Returns the specified activity.

+ Response 200
    
    [activity][]

## activities [/services/v1/JobManagerService/activities/{?completed, limit, offset, owner, priority, scheduled, started, status, submitted, type}]

### GET activities [GET]
Returns a list of activities. Supports standard filters, for example number of records to return per page and sorting.

+ Parameters
   + completed (string, optional)... Date and time in the format, YYYYMMDDThh:mm:ss:sssZ for UTC time, when job was completed.    
   + limit (number, optional) ... Number of records to return per page.
   + offset (number, optional) ... Returns results starting with this record number (0-based).   
   + owner (number, optional) ... Job owner ID.
   + priority (string, optional) ... Activity priority. Values are: Lowest, BelowNormal, Normal, AboveNormal, and Highest.
   + scheduled (string, optional)... Date and time in the format, YYYYMMDDThh:mm:ss:sssZ for UTC time, when job was scheduled.
   + started (string, optional)... Date and time in the format, YYYYMMDDThh:mm:ss:sssZ for UTC time, when job was started.
   + status (string, optional) ... Job status.
   + submitted (string, optional)... Date and time in the format, YYYYMMDDThh:mm:ss:sssZ for UTC time, when job was submitted.
   + type (string, optional) ... Job type.


+ Response 200

    ```js
        {
            "activities": [
                { 
                    "completed": "string: date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "id:"integer: activity ID",
                    "owner": "number: user ID of the person who submitted the job",
                    "priority": "string: activity priority. Values are: Lowest, BelowNormal, Normal, AboveNormal, and Highest.",
                    "scheduled": "string: date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "started": "string: date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "status": "string: domain data code for Scheduled, Queued, Running, Completed, Failed, Canceled, Initializing, and Canceling",
                    "submitted": "string: date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "type": "string: domain data code for the type of job. Job types are: FileImport, EdmImport, RiskAnalysis, ExposureExport, RiskAnalysisExport, and Query.",
                    "uri": "string: uniform resource identifier"
                },
                { 
                    "completed": "string: date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "id:"integer: activity ID",
                    "owner": "number: user ID of the person who submitted the job",
                    "priority": "string: activity priority. Values are: Lowest, BelowNormal, Normal, AboveNormal, and Highest.",
                    "scheduled": "string: date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "started": "string: date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "status": "string: domain data code for Scheduled, Queued, Running, Completed, Failed, Canceled, Initializing, and Canceling",
                    "submitted": "string: date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "type": "string: domain data code for the type of job. Job types are: FileImport, EdmImport, RiskAnalysis, ExposureExport, RiskAnalysisExport, and Query.",
                    "uri": "string: uniform resource identifier"
                },
                { 
                    "completed": "string: date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "id:"integer: activity ID",
                    "owner": "number: user ID of the person who submitted the job",
                    "priority": "string: activity priority. Values are: Lowest, BelowNormal, Normal, AboveNormal, and Highest.",
                    "scheduled": "string: date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "started": "string: date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "status": "string: domain data code for Scheduled, Queued, Running, Completed, Failed, Canceled, Initializing, and Canceling",
                    "submitted": "string: date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "type": "string: domain data code for the type of job. Job types are: FileImport, EdmImport, RiskAnalysis, ExposureExport, RiskAnalysisExport, and Query.",
                    "uri": "string: uniform resource identifier"
                },
            ]
        }
    ```


# Group Exposures
This section groups Exposure resources. The exposure entity in the RMS Insurance Domain Model (IDM), when impacted by an event, can produce a financial loss for the parties associated with it.
RMS(one) includes the following two main types of exposures:

  * Risk Items â Entities that can be damaged or injured, or can create economic losses, including locations, persons, multi-building campuses, and accounts.
  * Contracts â Financial instruments, including catastrophe treaties, insurance policies, and programs of insurance policies. A portfolio is an example of an exposure that is a collection of contracts.

Collections of these exposures are called schedules.

The following exposure types are associated with domain data values:

  * Account
  * Portfolio
  * ContractExposure
  * Program
  * RiskItemExposure
  * CedantExposure
  * CEScheduleExposure
  * ExposureFilterRange

## portfolio [/services/v1/ExposureService/Portfolios/{id}]

A portfolio is a collection of contracts that are underwritten by the tenant or by a subsidiary of the tenant.

* Collections of contracts â Portfolios are collections of insurance contracts.
* Exposed party â Portfolios in RMS(one) are centered around the concept of an exposed party, along with its subsidiaries. Every portfolio has this information associated with it. The exposed party of a portfolio bears the financial risks associated with the member contracts and is likely to be the tenant or a subsidiary of the tenant.
* Filters â A portfolio can have a creation filter associated with it.
* Versions â Portfolios are versioned and have snapshot dates.
* EDM Upload â The Exposure Data Module (EDM) upload from a version 11.0 or 13.0 EDM to RMS(one) creates the following portfolios in RMS(one) with contracts newly created from RiskLink policies:
      * A Company's Insurance Data â The RiskLink portfolio creates a corresponding portfolio in RMS(one). 
      * Cedant Exposure Data â The RiskLink portfolio creates a cedant exposure set. 
      * Reference â The RiskLink portfolio creates a reference portfolio in the Reference view of the Data Library. A reference portfolio provides a baseline that tenants can use to evaluate other portfolios. 

+ portfolio Model (application/json)
    
    ```js
        { 
            "Count": "integer: total number of existing portfolios"
            "portfolios": [
                {
                    "AsOf: "string: date and time of latest portfolio version in the format, YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "Description": "string: portfolio description",
                    "Id": "long: portfolio object ID",
                    "Name": "string: portfolio name",
                    "Owner": "integer: user ID of the creator",
                    "SourceId": "string: ID of the external system to which the portfolio is linked",
                    "URI": "string: uniform resource identifier",
                    "Version": "number: portfolio version",
                    "AclTag": "string: Additional access control list",
                    "BuildingTotalInsuredValue": "double: total insured value of the building",
                    "BusinessInteruptionTotalInsuredValue": "double: total insured value for business interruption",
                    "ContentsTotalInsuredValue": "double: total insured value of the contents",
                    "ContractCount": "number: contract count",
                    "Created": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "CreationFilter": "string: creation filter string that you must specify to form the portfolio. All contracts satisfying the filter will be included.",
                    "ExposedParty": "integer: domain data code for the existing exposed party ID. Must match the exposed party for the account. The exposed party of a portfolio is the party who bears the financial risks associated with the member contracts and is likely to be the tenant or a subsidiary of the tenant.",
                    "ExposedPartyName": "string: name of the exposed party",
                    "ExposureImportSet": "integer: ID of the import set to which the portfolio belonged if the portfolio is imported. Otherwise set to null.",
                    "ImportDataSource": "string: import data source",
                    "IncludeMain": "boolean: paired with whatIfTagName. A value of false indicates that only contracts satisfying the whatIfTagName will be included in the portfolio. A value of true indicates that contracts satisfying the whatIfTagName will be included in the portfolio, and the main versions of other contracts not having that tag will be included in the portfolio.",
                    "IsDynamic": "boolean: determines whether the creation filter is dynamic (true) or static (false). Portfolios can have creation filters associated with them. Filters are static (unchanging) or dynamic (portfolio membership is updated automatically).",
                    "ReportingSegments": "string: null",
                    "IsReference": "boolean: determines whether the portfolio is shown in the data library in a different location. A reference portfolio provides a baseline that tenants can use to evaluate other portfolios.",
                    "RiskItemCount": "number: risk item count",
                    "TotalInsuredValue": "double: total insured value",
                    "WhatIfTagName": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk."
                },
            ]
        }

    ```

### GET portfolio [GET]
Returns the specified portfolio. Supports standard filters, for example number of records to return per page and sorting.

+ Response 200
    
    [portfolio][]

### PUT portfolio [PUT]
Updates the specified portfolio.

+ Request

    ```js
        {
            "Description": "string",
            "Name": "string",
            "SourceId": "string: ID of the external system to which the portfolio is linked",
            "CreationFilter": "string:  statement to define contract membership",
            "ExposedParty": "integer: domain data code for the existing exposed party ID. Must match the exposed party for the account. The exposed party of a portfolio is the party who bears the financial risks associated with the member contracts and is likely to be the tenant or a subsidiary of the tenant.",
            "IncludeMain": "boolean: paired with whatIfTagName. A value of false indicates that only contracts satisfying the whatIfTagName will be included in the portfolio. A value of true indicates that contracts satisfying the whatIfTagName will be included in the portfolio, and the main versions of other contracts not having that tag will be included in the portfolio.",
            "IsDynamic": "boolean: determines whether the creation filter is dynamic (true) or static (false). Portfolios can have creation filters associated with them. Filters are static (unchanging) or dynamic (portfolio membership is updated automatically).",
            "IsReference": "boolean: determines whether the postfolio is shown in the data library in a different location. A reference portfolio provides a baseline that tenants can use to evaluate other portfolios.",
            "ReportingSegments": "string: null",
            "WhatIfTagName": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk."
        }

    ```

+ Response 200
    
    [portfolio][]

### DELETE portfolio [DELETE]
Deletes the selected portfolio instance.

+ Response 204

        

## portfolios [/v1/ExposureService/Portfolios/{?aclTag, asOf, buildingTotalInsuredValue, businessInterruptionTotalInsuredValue, contentsTotalInsuredValue, contractCount, created, creationFilter, description, id, exposedParty, exposedPartyName, exposureImportSet, importDataSource, includeMain, isDynamic, isReference, limit, name, offset, owner, reportingSegments, riskItemCount, sourceId, totalInsuredValue, uri, version, whatIfTagName}]

### GET portfolios [GET]
Returns a list of portfolios. Supports standard filters, for example number of records to return per page and sorting.

+ Parameters
   + aclTag (string, optional) ... Additional access control list (ACL).
   + asOf (string: datetime, optional)  ... Date and time of latest portfolio version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.  
   + buildingTotalInsuredValue (double, optional) ... Total insured value of the building.
   + businessInterruptionTotalInsuredValue (double, optional) ... Total insured value of business interruptions.
   + contentsTotalInsuredValue (double, optional) ... Total value of insured contents.
   + contractCount (long, optional) ... Contract count.   
   + created (string: datetime, optional) ... Date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.   
   + creationFilter (string, optional) ... Filtering specifics for portfolio.
   + description (string, optional) ... Description of portfolio.
   + id (long, optional) ... Portfolio's unique identifier.
   + exposedParty (integer) ... Domain data for the existing exposed party ID.
   + exposedPartyName (string, optional) ... Name of the exposed party.
   + exposureImportSet (integer, optional) ... Exposure import set. 
   + importDataSource (string, optional) ... Import data source.
   + includeMain (boolean, optional) ... Set this only when whatIfTagName is selected. It determines whether only contracts that meet the criteria of whatIfTagName are included, or whether additional main contracts are included. 
   + isDynamic (boolean, optional) ... Specifies whether the creation filter is dynamic.
   + isReference (boolean, optional) ... Specifies whether a portfolio can be used as a reference to evaluate other portfolios.
   + limit (number, optional) ... Number of records to return per page.
   + name (string) ... Portfolio name.
   + offset (number, optional) ... Returns results starting with this record number (0-based).   
   + owner (integer, optional) ... Unique identifier for portfolio creator.  
   + reportingSegments (string, optional) ... This parameter is not used at present. Therefore it is set to null.
   + riskItemCount (long, optional) ... Risk item count.
   + sourceId (string, optional) ... The ID of the external system to which the portfolio is linked.
   + totalInsuredValue (double, optional) ... Total insured value. 
   + uri (string, optional) ... Uniform Resource Identifier.
   + version (number, optional) ... Portfolio version.
   + whatIfTagName (string) ... Contracts meeting the criteria of this tag will be included in the portfolio.

+ Response 200

    ```js
        { 
            "Count": "integer: total number of existing portfolios"
            "portfolios": [
                {
                    "AsOf: "string: date and time of latest portfolio version in the format, YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "Description": "string: portfolio description",
                    "Id": "long: portfolio object ID",
                    "Name": "string: portfolio name",
                    "Owner": "integer: user ID of the creator",
                    "SourceId": "string: ID of the external system to which the portfolio is linked",
                    "URI": "string: uniform resource identifier",
                    "Version": "number: portfolio version",
                    "AclTag": "string: additional access control list",
                    "BuildingTotalInsuredValue": "double: total insured value of the building",
                    "BusinessInteruptionTotalInsuredValue": "double: total insured value for business interruption",
                    "ContentsTotalInsuredValue": "double: total insured value of the contents",
                    "ContractCount": "number: contract count",
                    "Created": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "CreationFilter": "string: creation filter string that you must specify to form the portfolio. All contracts satisfying the filter will be included.",
                    "ExposedParty": "integer: domain data code for the existing exposed party ID. Must match the exposed party for the account. The exposed party of a portfolio is the party who bears the financial risks associated with the member contracts and is likely to be the tenant or a subsidiary of the tenant.",
                    "ExposedPartyName": "string: exposed party name",
                    "ExposureImportSet": "integer: ID of the import set to which the portfolio belonged if the portfolio is imported. Otherwise set to null.",
                    "ImportDataSource": "string: import data source",
                    "IncludeMain": "boolean: paired with whatIfTagName. A value of false indicates that only contracts satisfying the whatIfTagName will be included in the portfolio. A value of true indicates that contracts satisfying the whatIfTagName will be included in the portfolio, and the main versions of other contracts not having that tag will be included in the portfolio.",
                    "IsDynamic": "boolean: determines whether the creation filter is dynamic (true) or static (false). Portfolios can have creation filters associated with them. Filters are static (unchanging) or dynamic (portfolio membership is updated automatically).",
                    "ReportingSegments": "string: null",
                    "IsReference": "boolean: determines whether the portfolio is shown in the data library in a different location. A reference portfolio provides a baseline that tenants can use to evaluate other portfolios.",
                    "RiskItemCount": "number: risk item count",
                    "TotalInsuredValue": "double: total insured value",
                    "WhatIfTagName": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk."
                },
                {
                    "Id": "number: portfolio object ID",
                    "URI": "string: uniform resource identifier",
                    "Name": "string",
                    "Description": "string",
                    "SourceId": "string: ID of the external system to which the portfolio is linked",
                    "Version": "number: portfolio version",
                    "AclTag": "string: ACL tag",
                    "BuildingTotalInsuredValue": "double: total insured value of the building",
                    "BusinessInteruptionTotalInsuredValue": "double: total insured value for business interruption",
                    "ContentsTotalInsuredValue": "double: total insured value of the contents",
                    "ContractCount": "number: contract count",
                    "AsOfDate": "string: date and time of the latest portfolio version. The datetime is in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "Owner": "number: user ID of the creator",
                    "Created": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "CreationFilterRql": "string: filter creation string that you must specify to form the portfolio. All contracts satisfying the filter will be included.",
                    "ExposedParty": "number: domain data code for the existing exposed party ID. Must match the exposed party for the account. The exposed party of a portfolio is the party who bears the financial risks associated with the member contracts and is likely to be the tenant or a subsidiary of the tenant.",
                    "ExposedPartyName": "string: name of the exposed party",
                    "ExposureImportSet": "number: ID of the import set to which the portfolio belonged if the portfolio is imported. Otherwise set to null.",
                    "ImportDataSource": "string: import data source",
                    "IsDynamic": "boolean: determines whether the creation filter is dynamic (true) or static (false). Portfolios can have creation filters associated with them. Filters are static (unchanging) or dynamic (portfolio membership is updated automatically).",
                    "IsReference": "boolean: determines whether the portfolio is shown in the data library in a different location. A reference portfolio provides a baseline that tenants can use to evaluate other portfolios.",
                    "WhatIfTagName": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                    "IncludeMain": "boolean: paired with whatIfTagName. A value of false indicates that only contracts satisfying the whatIfTagName will be included in the portfolio. A value of true indicates that contracts satisfying the whatIfTagName will be included in the portfolio, and the main versions of other contracts not having that tag will be included in the portfolio.",
                    "RiskItemCount": "number: risk item count",
                    "TotalInsuredValue": "double: total insured value",
                    "ReportingSegments": "string: null"
                },
                {
                    "Id": "number: portfolio object ID",
                    "URI": "string: uniform resource identifier",
                    "Name": "string",
                    "Description": "string",
                    "SourceId": "string: ID of the external system to which the portfolio is linked",
                    "Version": "number: portfolio version",
                    "AclTag": "string: ACL tag",
                    "BuildingTotalInsuredValue": "double: total insured value of the building",
                    "BusinessInteruptionTotalInsuredValue": "double: total insured value for business interruption",
                    "ContentsTotalInsuredValue": "double: total insured value of the contents",
                    "ContractCount": "number: contract count",
                    "AsOfDate": "string: date and time of the latest portfolio version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "Owner": "number: user ID of the creator",
                    "Created": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "CreationFilterRql": "string: filter creation string that you must specify to form the portfolio. All contracts satisfying the filter will be included.",
                    "ExposedParty": "number: domain data code for the existing exposed party ID. Must match the exposed party for the account. The exposed party of a portfolio is the party who bears the financial risks associated with the member contracts and is likely to be the tenant or a subsidiary of the tenant.",
                    "ExposedPartyName": "string: name of the exposed party",
                    "ExposureImportSet": "number: ID of the import set to which the portfolio belonged if the portfolio is imported. Otherwise set to null.",
                    "ImportDataSource": "string: import data source",
                    "IsDynamic": "boolean: determines whether the creation filter is dynamic (true) or static (false). Portfolios can have creation filters associated with them. Filters are static (unchanging) or dynamic (portfolio membership is updated automatically).",
                    "IsReference": "boolean: determines whether the portfolio is shown in the data library in a different location. A reference portfolio provides a baseline that tenants can use to evaluate other portfolios.",
                    "WhatIfTagName": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                    "IncludeMain": "boolean: paired with whatIfTagName. A value of false indicates that only contracts satisfying the whatIfTagName will be included in the portfolio. A value of true indicates that contracts satisfying the whatIfTagName will be included in the portfolio, and the main versions of other contracts not having that tag will be included in the portfolio.",
                    "RiskItemCount": "number: risk item count",
                    "TotalInsuredValue": "double: total insured value",
                    "ReportingSegments": "string: null"
                }
            ]
        }

    ```

## portfolios [/v1/ExposureService/Portfolios]

### POST portfolios [POST]
Creates a portfolio.

+ Request

    ```js
        { 
        
            "Description": "string",
            "Name": "string",
            "SourceId": "string: ID of the external system to which the portfolio is linked",
            "CreationFilter": "string: creation filter string that you must specify to form the portfolio. All contracts satisfying the filter will be included.",
            "ExposedParty": "integer: domain data code for the existing exposed party ID. Must match the exposed party for the account. The exposed party of a portfolio is the party who bears the financial risks associated with the member contracts and is likely to be the tenant or a subsidiary of the tenant.",
            "IncludeMain": "boolean: paired with whatIfTagName. A value of false indicates that only contracts satisfying the whatIfTagName will be included in the portfolio. A value of true indicates that contracts satisfying the whatIfTagName will be included in the portfolio, and the main versions of other contracts not having that tag will be included in the portfolio.",
            "IsDynamic": "boolean: determines whether the creation filter is dynamic (true) or static (false). Portfolios can have creation filters associated with them. Filters are static (unchanging) or dynamic (portfolio membership is updated automatically).",
            "IsReference": "boolean: determines whether the portfolio is shown in the data library in a different location. A reference portfolio provides a baseline that tenants can use to evaluate other portfolios.",
            "ReportingSegments": "string: null",
            "WhatIfTagName": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk."
        
        }

    ```

+ Response 201
    
    [portfolio][]

## cedantExposure [/services/v1/ExposureService/cedantExposures/{id}]

A cedant exposure is a collection of contracts that cede risk to a reinsurer. A primary insurer's book of business received by a reinsurer as a submission is an example of cedant exposure. RMS(one) organizes cedant exposures into cedant projects.
Cedant exposures are similar to portfolios but differ in two major ways:

* The exposed party of a cedant exposure is a cedant or counter-party of the tenant. The cedant or counter-party of the tenant underwrites the contracts in the cedant exposure.
* The portfolio-creation filter of a cedant exposure is static.

+ cedantExposure Model (application/json)
    
    ```js
        { 
            "cedantExposure": {
                    "AsOf": "string: The date and time of the latest portfolio version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",                    "Id": "number: the portfolio object ID",
                    "Description": "string: portfolio description",
                    "Id": "long: portfolio's unique identifier",
                    "Name": "string: portfolio name",
                    "Owner": "integer: user ID of the creator",
                    "SourceId": "string: the ID of the external system to which the portfolio is linked.",
                    "URI": "string: object resource unique resource identifier (URI)",
                    "Version": "number: portfolio version",
                    "AclTag": "string: Additional access control list",
                    "BuildingTotalInsuredValue": "double: total insured value of the building",
                    "BusinessInteruptionTotalInsuredValue": "double: total insured value for business interruption",
                    "ContentsTotalInsuredValue": "double: total insured value of the contents",
                    "ContractCount": "long: contract count",
                    "Created": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "CreationFilter": "string: Creation filter string that you must specify to form the portfolio. All contracts satisfying the filter will be included.",
                    "ExposedParty": "integer: Domain Data code for the existing exposed party ID. Must match the exposed party for the account. The exposed party of a portfolio is the party who bears the financial risks associated with the member contracts and is likely to be the tenant or a subsidiary of the tenant.",
                    "ExposedPartyName": "string: Name of the exposed party",
                    "ExposureImportSet": "integer: If the portfolio is imported, this is the ID of the import set to which the portfolio belonged. Otherwise set to null.",
                    "ImportDataSource": "string: Import data source",
                    "IncludeMain": "boolean: paired with whatIfTagName. A value of false indicates that only contracts satisfying the whatIfTagName will be included in the portfolio. A value of true indicates that contracts satisfying the whatIfTagName will be included in the portfolio, and the main versions of other contracts not having that tag will be included in the portfolio.",
                    "IsReference": "boolean: shown in the data library in a different location. A reference portfolio provides a baseline that tenants can use to evaluate other portfolios.",
                    "ReportingSegments": "string: null",
                    "RiskItemCount": "long: risk item count",
                    "TotalInsuredValue": "double: total insured value",
                    "WhatIfTagName": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                }
            }
        }

    ```
    
### GET cedantExposure [GET]
Returns the specified cedantExposure instance.

+ Response 200
    
    [cedantExposure][]

### PUT cedantExposure [PUT]
Updates the specified cedantExposure instance.

+ Request

    ```js
        { 
            "Description": "string",
            "ExposureTypeId": "integer: exposure type ID"
            "Name": "string: cedant exposure name",
            "SourceId": "string: the ID of the external system to which the cedant exposure is linked",
            "CreationFilter": "string: Creation filter string that you must specify to form the portfolio. All contracts satisfying the filter will be included.",
            "ExposedParty": "integer: Domain Data code for the existing exposed party ID. Must match the exposed party for the account. The exposed party of a cedant exposure is the party who bears the financial risks associated with the member contracts and is likely to be the tenant or a subsidiary of the tenant.",
            "IncludeMain": "boolean: paired with whatIfTagName. A value of false indicates that only contracts satisfying the whatIfTagName will be included in the cedant exposure. A value of true indicates that contracts satisfying the whatIfTagName will be included in the cedant exposure, and the main versions of other contracts not having that tag will be included in the cedant exposure.",
            "IsReference": "boolean: specifies whether a portfolio can be used as a reference to evaluate other portfolios.",
            "ReportingSegments": "string: null",
            "WhatIfTagName": "string: all contracts satisfying this will be included in the cedant exposure. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk."
        
        }

    ```

+ Response 200
    
    [cedantExposure][]

### DELETE cedantExposure [DELETE]
Deletes the selected cedantExposure instance.

+ Response 204


## cedantExposures [/services/v1/ExposureService/cedantExposures/{?aclTag, asOf, buildingTotalInsuredValue, businessInterruptionTotalInsuredValue, contentsTotalInsuredValue, contractCount, created, creationFilter, description, exposedParty, exposedPartyName, exposureImportSet, exposureTypeId, id, importDataSource, includeMain, isReference, limit, name, offset, owner, reportingSegments, riskItemCount, sourceId, totalInsuredValue, uri, version, whatIfTagName}]

### GET cedantExposures [GET]
Returns a list of cedantExposures. Supports standard filters, for example number of records to return per page and sorting.

+ Parameters
   + aclTag (string, optional) ... Additional access control list (ACL).
   + asOf (string, optional) ... Date and time of the latest portfolio version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + buildingTotalInsuredValue (double, optional) ... Total insured value of the building.
   + businessInterruptionTotalInsuredValue (double, optional) ... Total insured value of business interruptions.
   + contentsTotalInsuredValue (double, optional) ... Total value of insured contents.
   + contractCount (long, optional) ... Contract count.  
   + created (string, optional) ... Date and time of creation in the format, YYYYMMDDThh:mm:ss:sssZ for UTC time.   
   + creationFilter (string, optional) ... Creation filter string that you must specify to form the portfolio. All contracts satisfying the filter will be included.   
   + description (string, optional) ... Description of portfolio.
   + exposedParty (number: domain data) ... Domain data for the existing exposed party ID.
   + exposedPartyName (string, optional) ... Name of the exposed party.
   + exposureImportSet (integer, optional) ... Exposure import set.
   + id (long, optional) ... Portfolio's unique identifier.
   + importDataSource (string, optional) ... Import data source.   
   + includeMain (boolean, optional) ... For contracts that do not meet the criteria set in whatifTagName, only the main version will be included in the portfolio. 
   + isReference (boolean, optional) ... Specifies whether a portfolio can be used as a reference to evaluate other portfolios.
   + limit (number, optional) ... Number of records to return per page.
   + name (string) ... Portfolio name.
   + offset (number, optional) ... Returns results starting with this record number (0-based). 
   + owner (integer, optional) ... Unique identifier for portfolio creator.
   + reportingSegments (string, optional) ... This parameter is not used at present. Therefore it is set to null.  
   + riskItemCount (long, optional) ... Risk item count.
   + sourceId (string, optional) ... The ID of the external system to which the portfolio is linked.
   + totalInsuredValue (double, optional) ... Total insured value. 
   + uri (string, optional) ... Uniform Resource Identifier.
   + version (number, optional) ... Portfolio version.
   + whatIfTagName (string) ... Contracts meeting the criteria of this tag will be included in the portfolio.

+ Response 200

    ```js
        { 
            "cedantExposures": [
                {
                    "AsOf": "string: the date and time of the latest portfolio version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",                    "Id": "number: the portfolio object ID",
                    "Description": "string: portfolio description",
                    "Id": "long: portfolio's unique identifier",
                    "Name": "string: portfolio name",
                    "Owner": "integer: user ID of the creator",
                    "SourceId": "string: the ID of the external system to which the portfolio is linked.",
                    "URI": "string: object resource unique resource identifier (URI)",
                    "Version": "number: portfolio version",
                    "AclTag": "string: Additional access control list",
                    "BuildingTotalInsuredValue": "double: total insured value of the building",
                    "BusinessInteruptionTotalInsuredValue": "double: total insured value for business interruption",
                    "ContentsTotalInsuredValue": "double: total insured value of the contents",
                    "ContractCount": "long: contract count",
                    "Created": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "CreationFilter": "string: Creation filter string that you must specify to form the portfolio. All contracts satisfying the filter will be included.",
                    "ExposedParty": "integer: Domain Data code for the existing exposed party ID. Must match the exposed party for the account. The exposed party of a portfolio is the party who bears the financial risks associated with the member contracts and is likely to be the tenant or a subsidiary of the tenant.",
                    "ExposedPartyName": "string: Name of the exposed party",
                    "ExposureImportSet": "integer: If the portfolio is imported, this is the ID of the import set to which the portfolio belonged. Otherwise set to null.",
                    "ImportDataSource": "string: Import data source",
                    "IncludeMain": "boolean: paired with whatIfTagName. A value of false indicates that only contracts satisfying the whatIfTagName will be included in the portfolio. A value of true indicates that contracts satisfying the whatIfTagName will be included in the portfolio, and the main versions of other contracts not having that tag will be included in the portfolio.",
                    "IsReference": "boolean: shown in the data library in a different location. A reference portfolio provides a baseline that tenants can use to evaluate other portfolios.",
                    "ReportingSegments": "string: null",
                    "RiskItemCount": "long: risk item count",
                    "TotalInsuredValue": "double: total insured value",
                    "WhatIfTagName": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                },
                {
                   "Id": "number: the portfolio object ID",
                    "URI": "string: unique resource identifier",
                    "Name": "string",
                    "Description": "string",
                    "SourceId": "string: the ID of the external system to which the portfolio is linked.",
                    "Version": "number: portfolio version",
                    "AclTag": "string: ACL tag",
                    "CreateDate": string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "BuildingTotalInsuredValue": "double: total insured value of the building",
                    "BusinessInteruptionTotalInsuredValue": "double: total insured value for business interruption",
                    "ContentsTotalInsuredValue": "double: total insured value of the contents",
                    "ContractCount": "number: contract count",
                    "AsOfDate": "string: date and time of the latest portfolio version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "Owner": "number: user ID of the creator",
                    "Created": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "CreationFilterRql": "string: Filter creation string that you must specify to form the portfolio. All contracts satisfying the filter will be included.",
                    "ExposureTypeId": integer: unique identifier for the exposure type",
                    "ExposedParty": "number: Domain Data code for the existing exposed party ID. Must match the exposed party for the account. The exposed party of a portfolio is the party who bears the financial risks associated with the member contracts and is likely to be the tenant or a subsidiary of the tenant.",
                    "ExposedPartyName": "string: Name of the exposed party",
                    "ExposureImportSet": "number: If the portfolio is imported, this is the ID of the import set to which the portfolio belonged. Otherwise set to null.",
                    "ImportDataSource": "string: Import data source",
                    "IsReference": "boolean: shown in the data library in a different location. A reference portfolio provides a baseline that tenants can use to evaluate other portfolios.",
                    "WhatIfTagName": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                    "IncludeMain": "boolean: paired with whatIfTagName. A value of false indicates that only contracts satisfying the whatIfTagName will be included in the portfolio. A value of true indicates that contracts satisfying the whatIfTagName will be included in the portfolio, and the main versions of other contracts not having that tag will be included in the portfolio.",
                    "RiskItemCount": "number: risk item count",
                    "TotalInsuredValue": "double: total insured value",
                    "ReportingSegments": "string: null"
                },
                {
                    "Id": "number: the portfolio object ID",
                    "URI": "string: unique resource identifier",
                    "Name": "string",
                    "Description": "string",
                    "SourceId": "string: the ID of the external system to which the portfolio is linked.",
                    "Version": "number: portfolio version",
                    "AclTag": "string: ACL tag",
                    "BuildingTotalInsuredValue": "double: total insured value of the building",
                    "BusinessInteruptionTotalInsuredValue": "double: total insured value for business interruption",
                    "ContentsTotalInsuredValue": "double: total insured value of the contents",
                    "ContractCount": "number: contract count",
                    "AsOfDate": "string: date and time of the latest portfolio version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "Owner": "number: user ID of the creator",
                    "Created": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "CreationFilterRql": "string: Filter creation string that you must specify to form the portfolio. All contracts satisfying the filter will be included.",
                    "ExposureTypeId": integer: unique identifier for the exposure type",
                    "ExposedParty": "number: Domain Data code for the existing exposed party ID. Must match the exposed party for the account. The exposed party of a portfolio is the party who bears the financial risks associated with the member contracts and is likely to be the tenant or a subsidiary of the tenant.",
                    "ExposedPartyName": "string: Name of the exposed party",
                    "ExposureImportSet": "number: If the portfolio is imported, this is the ID of the import set to which the portfolio belonged. Otherwise set to null.",
                    "ImportDataSource": "string: Import data source",
                    "IsReference": "boolean: shown in the data library in a different location. A reference portfolio provides a baseline that tenants can use to evaluate other portfolios.",
                    "WhatIfTagName": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                    "IncludeMain": "boolean: paired with whatIfTagName. A value of false indicates that only contracts satisfying the whatIfTagName will be included in the portfolio. A value of true indicates that contracts satisfying the whatIfTagName will be included in the portfolio, and the main versions of other contracts not having that tag will be included in the portfolio.",
                    "RiskItemCount": "number: risk item count",
                    "TotalInsuredValue": "double: total insured value",
                    "ReportingSegments": "string: null"
                }
            ]
        "Count": "number: total number of cedantExposures that exist"
        }
        
    ```

## cedantExposures [/services/v1/ExposureService/cedantExposures]    
    
### POST cedantExposures [POST]
Creates a cedantExposure.

+ Request

    ```js
        { 
                "Name": "string: cedant exposure name",
                "Description": "string: cedant exposure description",
                "SourceId": "string: the ID of the external system to which the Cedant exposure is linked",
                "CreationFilter": "string: Creation filter string that you must specify to form the cedant exposure. All contracts satisfying the filter will be included.",
                "ExposedParty": "number: Domain Data code for the existing exposed party ID. Must match the exposed party for the account. The exposed party of a portfolio is the party who bears the financial risks associated with the member contracts and is likely to be the tenant or a subsidiary of the tenant.",
                "WhatIfTagName": "string: all contracts satisfying this will be included in the Cedant exposure. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                "IncludeMain": "boolean: paired with whatIfTagName. A value of false indicates that only contracts satisfying the whatIfTagName will be included in the Cedant exposure. A value of true indicates that contracts satisfying the whatIfTagName will be included in the Cedant exposure, and the main versions of other contracts not having that tag will be included in the Cedant exposure.",
                "ReportingSegments: "string: null"

        }

    ```

+ Response 201
    
    [cedantExposure][]



## program [/services/v1/ExposureService/programs/{id}]

A program is a collection of insurance or reinsurance contracts, most likely with the same contract subject exposure.
A program is a set of contracts that provide a set of covers to a common insured party. These covers can be defined by single or multiple cover contracts.
Programs are typically put together by a retail or reinsurance broker on behalf of the insured party. The program is shopped around to various insurance or reinsurance companies. Any firm may bid or quote and bind a share of any cover. For example, in the Lloyds syndicate environment, one company may operate through multiple syndicates and may have multiple shares in the same program cover through different legal entities or parties. Similarly, the insured or the broker may want to see what percentage of the total program has been bound at any point in time across multiple insuring parties.

+ program Model (application/json)
    
    ```js
        { 
            "program": {
                    "AsOf": "string: date and time of the latest contract version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "Description": "string: description of the program",
                    "id": "number: the program object ID",
                    "Name": "string: name of the program",
                    "Owner": "integer: unique ID of the program owner.",
                    "sourceId": "string: the ID of the external system to which the program is linked",
                    "uri": "string: unique resource identifier",
                    "version": "number: indicates which version",
                    "aclTag": "string: ACL tag",
                    "isReinsurance": "boolean: indicates whether it is a reinsurance instance",
                    }
            }
        }

    ```

### GET program [GET]
Returns the specified program.

+ Response 200
    
    [program][]


### PUT program [PUT]
Updates the specified program.

+ Request

    ```js
        { 
            "programInput": {
                "name": "string: program name",
                "uri": "string: unique resource URI",
                "aclTag": "string: ACL tag",
                "isReinsurance": "boolean: indicates whether it is a reinsurance instance",
                
            }
        }

    ```

+ Response 200
    
    [program][]

## programs [/services/v1/ExposureService/programs/{?aclTag, asOf, description, id, isReinsurance, limit, name, offset, owner, sourceId, uri, version}]

### GET programs [GET]
Returns a list of programs. Supports standard filters, for example number of records to return per page and sorting.

+ Parameters
   + aclTag (string, optional)... Additional access control list.
   + asOf (string, optional) ... Date and time of the latest contract version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + description (string, optional) ... Program description.
   + id (long, optional) ... Program ID.
   + isReinsurance (boolean, optional) ...Indicates whether it is a reinsurance instance
   + limit (number, optional) ... Number of records to return per page.
   + name (string, optional) ... Program name.
   + offset (number, optional) ... Returns results starting with this record number (0-based).
   + owner (integer, optional) ... Unique ID of the program owner.
   + sourceId (string, optional) ... ID of the external system to which the program is linked.
   + uri (string, optional) ... Program's unique resource identifier.
   + version (number, optional) ... Program's version number. 

+ Response 200

    ```js
        { 
            "Count": "number: total number of programs that exist"
            "programs": {
                    "AsOf": "string: date and time of the latest contract version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "Description": "string: description of the program",
                    "id": "number: the program object ID",
                    "Name": "string: name of the program",
                    "Owner": "integer: unique ID of the program owner.",
                    "sourceId": "string: ID of the external system to which the program is linked",
                    "uri": "string: program resource URI",
                    "version": "number: prgram version number",
                    "aclTag": "string: ACL tag",
                    "isReinsurance": "boolean: indicates whether it is a reinsurance instance",
                    
                },
                {
                    "AsOf": "string: date and time of the latest contract version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "Description": "string: description of the program",
                    "id": "number: the program object ID",
                    "Name": "string: name of the program",
                    "Owner": "integer: unique ID of the program owner.",
                    "sourceId": "string: the ID of the external system to which the program is linked",
                    "uri": "string: unique resource identifier",
                    "version": "number: indicates which version",
                    "aclTag": "string: ACL tag",
                    "isReinsurance": "boolean: indicates whether it is a reinsurance instance",
                },
                {
                    "AsOf": "string: date and time of the latest contract version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "Description": "string: description of the program",
                    "id": "number: the program object ID",
                    "Name": "string: name of the program",
                    "Owner": "integer: unique ID of the program owner.",
                    "sourceId": "string: the ID of the external system to which the program is linked",
                    "uri": "string: unique resource identifier",
                    "version": "number: indicates which version",
                    "aclTag": "string: ACL tag",
                    "isReinsurance": "boolean: indicates whether it is a reinsurance instance",
                }
            ]
        }

    ```

## programs [/services/v1/ExposureService/programs]


### POST programs [POST]

Creates a program.

+ Request

    ```js
        { 
            "programInput": {
                "name": "string: program name,
                "uri": "string: unique resource URI",
                "aclTag": "string: ACL tag",
                "isReinsurance": "boolean: indicates whether it is a reinsurance instance",
                
            }
        }

    ```

+ Response 201
    
    [program][]

## versions [/services/v1/ExposureService/versions]

### GET versions
Returns the supported versions list.

+ Response 200

    ```js
        { 
            "SupportedVersionList": [
                "Services/Vn": "string: version list",
                
            ]
        }

    ```

# Group Contracts and Products
This section groups Product and Contract resources.

### Contract
A contract represents a financial instrument that transfers risk from the insured to the insurer. Contract types include:

* Insurance contracts or policies  
* Step policies  
* Per-risk treaties  
* Facultative cessions  
* Industry Loss Warranties (ILWs) 

A contract includes:

1. Declarations â General attributes of the contract and descriptive information, including:
   * Inception and expiration dates
   * Insured and insuring party
   * Line of business
   * Attachment basis and attachment level (for treaties)
   * Program
   * Product
   * Currency
   * Premium
2. Contract Definition Language (CDL) string â Contains terms and conditions, and limits and deductibles. CDL is a domain-specific language for expressing the financial terms and conditions of insurance and reinsurance contracts. CDL enables insurance professionals to express contracts concisely, accurately, and reliably. RMS(one) compiles CDL contracts into an efficient, executable form that uses contract terms and conditions as input and computes payouts. A valid CDL string is either a contract or a product. A CDL contract consists of the key word "contract" followed by "declarations," âcovers,â and "terms" (âsublimitsâ and âdeductiblesâ). A CDL product consists of the key word "product" followed by the product name, "declarations," "covers," and "terms" ("sublimits" and "deductibles").
3. Contract Subject â Defines the exposures, coverages, and perils that the contract indemnifies.




## contract [/services/v1/ExposureService/Contracts/{id}]

### GET contract [GET]
Returns the specified contract.

+ Response 200
    
    ```js
        { 
            "contract": {
                "Id": "number: object ID",
                "Uri": "string: unique resource identifier",
                "Name": "string: the name of the contract. The contract cannot start with a number and cannot be blank or null.",
                "Description": "string: description of the contract",
                "Number": "string: contract number",
                "RevisionLabel": "string: contract revision label",
                "AclTag": "string: ACL tag",
                "CloneTypeId": "number: clone type ID",
                "ClonedExposureId": "number: cloned exposure ID",
                "UserDefinedTypeId": "number: user defined type ID",
                "AttachmentBasisID": "number: attachment basis ID",
                "AttachmentLevelID": "number: attachment level ID",
                "ClaimAdjustmentDeductibleID": "number: claim adjustment deductible ID",
                "ClaimAdjustmentDeductibleName": "string: claim adjustment deductible name",
                "ClaimAdjustmentSublimitID": "number: claim adjustment sublimit ID",
                "ClaimAdjustmentSublimitName": "string: claim adjustment sublimit name",
                "PositionStructureID": "number: position structure ID",
                "ProductId": "number: product ID",
                "UpdateUserID": "number: update user ID",
                "PrimaryAccordOccupancyId": "number: primary accord occupancy ID",
                "PrimaryAccordOccupancyName": "string: primary accord occupancy name",
                "Premium": "number: premium amount",
                "ReinstatementsPremium": "number: reinstatements premium amount",
                "ReinstatementsPremiumRank": "number: reinstatements premium rank",
                "ContractCount": "number: contract count",
                "RiskItemCount": "number: risk item count",
                "NumberOfRiskItems": "number: number of risk items",
                "NumberOfUnits": "number: number of units",
                "AsOfDateTime": "string: date and time of the latest contract version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                "ProductAsOfDateTime": "string: date and time of the latest product in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                "ClonedExposureAsOfDateTime": "string: date and time of the cloned exposure in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                "CreateDateTime": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                "ExpirationDateTime": "string: expiration date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                "InceptionDateTime": "string: inception date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                "LastImportDateTime": "string: last import date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                "UpdateDateTime": "string: update date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                "RenewalDateTime": "string: renewal date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                "RenewalProbabilityPercent": "number: renewal probability (percentage)",
                "SignedShares": "number: number of signed shares",
                "ExposedParty": "number: user ID of the exposed party",
                "ImportSet": "string: the import set ID",
                "Subschedules": "string: list of subschedules",
                "SyndicateParty": "string: syndicate party",
                "TerminationBasisID": "number: termination basis ID",
                "Jurisdiction": "string: jurisdiction",
                "whatIfTagList": "string: all contracts satisfying this list will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                "Owner": "number: user ID of the creator",
                "ContentsTotalInsuredValue": "number: total insured value of the contents",
                "BuildingTotalInsuredValue": "number: total insured value of the building",
                "BusinessInteruptionTotalInsuredValue": "double: total insured value for business interruption",
                "TotalInsuredValue": "number: total insured value",
                "ContractTypeIsInsurance": "boolean: indicates whether the contract type is an insurance policy or reinsurance contract and further indicates the type of insurance or reinsurance",
                "IsCedantContract": "boolean: indicates whether it is a cedant contract",
                "IsProRataTemporis": "boolean: indicates whether it is pro rata temporis",
                "IsRenewal": "boolean: indicates whether it is a renewal",
                "CurrencyCode": "string: 3-digit currency code (for example, USD)",
                "PremiumCurrencyCode": "string: 3-digit currency code (for example, USD)",
                "ExpectedShares": "number: expected shares",
                "FallBackNotionalLimit": "number: fallback notional limit",
                "FreeReinstatement": "string: indicates free reinstatement",
                "PaidReinstatement": "number: paid reinstatement",
                "WrittenShares": "number: written shares",
                "AccountingOrganizationParty": {
                    "id": "number: ID of accounting organization party",
                    "name": "string: name of accounting organization party",
                    "uri": "string: unique resource identifier"
                },
                "AgentParty": {
                    "id": "number: ID of agent party",
                    "name": "string: name of agent party",
                    "uri": "string: unique resource identifier"
                },
                "BranchParty": {
                    "id": "number: ID of branch party",
                    "name": "string: name of branch party",
                    "uri": "string: unique resource identifier"
                },
                "BrokerParty": {
                    "id": "number: ID of broker party",
                    "name": "string: name of broker party",
                    "uri": "string: unique resource identifier"
                },
                "CostCenterParty": {
                    "id": "number: ID of cost center party",
                    "name": "string: name of cost center party",
                    "uri": "string: unique resource identifier"
                },
                "GroupParty": {
                    "id": "number: ID of group party",
                    "name": "string: name of group party",
                    "uri": "string: unique resource identifier"
                },
                "HubParty": {
                    "id": "number: ID of hub party",
                    "name": "string: name of hub party",
                    "uri": "string: unique resource identifier"
                },
                "InsuredParty": {
                    "id": "number: ID of the insured party",
                    "name": "string: name of insured party",
                    "uri": "string: unique resource identifier"
                },
                "InsurerParty": {
                    "id": "number: ID of the insurer party",
                    "name": "string: name of insurer party",
                    "uri": "string: unique resource identifier"
                },
                "LegalEntityParty": {
                    "id": "number: ID of the legal entity party",
                    "name": "string: name of legal entity party",
                    "uri": "string: unique resource identifier"
                },
                "OfficeParty": {
                    "id": "number: ID of the office party",
                    "name": "string: name of office party",
                    "uri": "string: unique resource identifier"
                },
                "ProducerParty": {
                    "id": "number: ID of the producer party",
                    "name": "string: name of producer party",
                    "uri": "string: unique resource identifier"
                },
                "ContractStatus": {
                    "Code": "string: status code",
                    "id": "number: contract ID",
                    "name": "string: name of contract status",
                    "uri": "string: unique resource identifier"
                },
                "ContractSubjects": { 
                    [
                        "AccountId": "number: account ID",
                        "AccountName": "string: account name",
                        "CededContractIds": "number: ceded contract IDs",
                        "InuringContractFilterEql": "string: inuring contract filter",
                        "InuringContractFilterId": "number: inuring contract filter ID",
                        "InuringContractFilterName": "string: inuring contract filter name",
                        "IsInuringContractFac": "boolean: indicates whether this is an inuring contract",
                        "IsInuringContractPerRisk": "boolean: indicates whether this is an inuring contract per risk",
                        "LossScaling": "number: loss scaling",
                        "Name": "string: contract subject name",
                        "SubjectExposureId": "number: subject exposure ID",
                        "SubjectExposureName": "string: subject exposure name",
                        "SubjectExposureType": "number: subject exposure type",
                        "SubjectFilterEql": "string: subject filter",
                        "SubjectFilterId": "number: subject filter ID",
                        "SubjectFilterName": "string: subject filter name",
                        "UILabel": "string: user interface (UI) label"
                    ],
                    [
                        "AccountId": "number: account ID",
                        "AccountName": "string: account name",
                        "CededContractIds": "number: ceded contract IDs",
                        "InuringContractFilterEql": "string: inuring contract filter",
                        "InuringContractFilterId": "number: inuring contract filter ID",
                        "InuringContractFilterName": "string: inuring contract filter name",
                        "IsInuringContractFac": "boolean: indicates whether this is an inuring contract",
                        "IsInuringContractPerRisk": "boolean: indicates whether this is an inuring contract per risk",
                        "LossScaling": "number: loss scaling",
                        "Name": "string: contract subject name",
                        "SubjectExposureId": "number: subject exposure ID",
                        "SubjectExposureName": "string: subject exposure name",
                        "SubjectExposureType": "number: subject exposure type",
                        "SubjectFilterEql": "string: subject filter",
                        "SubjectFilterId": "number: subject filter ID",
                        "SubjectFilterName": "string: subject filter name",
                        "UILabel": "string: user interface (UI) label"
                    ],
                    [
                        "AccountId": "number: account ID",
                        "AccountName": "string: account name",
                        "CededContractIds": "number: ceded contract IDs",
                        "InuringContractFilterEql": "string: inuring contract filter",
                        "InuringContractFilterId": "number: inuring contract filter ID",
                        "InuringContractFilterName": "string: inuring contract filter name",
                        "IsInuringContractFac": "boolean: indicates whether this is an inuring contract",
                        "IsInuringContractPerRisk": "boolean: indicates whether this is an inuring contract per risk",
                        "LossScaling": "number: loss scaling",
                        "Name": "string: contract subject name",
                        "SubjectExposureId": "number: subject exposure ID",
                        "SubjectExposureName": "string: subject exposure name",
                        "SubjectExposureType": "number: subject exposure type",
                        "SubjectFilterEql": "string: subject filter",
                        "SubjectFilterId": "number: subject filter ID",
                        "SubjectFilterName": "string: subject filter name",
                        "UILabel": "string: user interface (UI) label"
                    ]
                },
                "ContractType": {
                    "ContractTypeCode": "string: contract type code",
                    "ContractTypeDescr": "string: contract type description",
                    "ContractTypeId": "number: ID of the contract type",
                    "ContractTypeName": "string: contract type name",
                    "ParentContractTypeID": "number: ID of the parent contract type",
                    "Uri": "string: unique resource identifier"
                },
                "LineOfBusiness": {
                    "LineOfBusinessId": "number: ID of the line of business",
                    "LineOfBusinessName": "string: line of business name",
                    "uri": "string: unique resource identifier"
                },
                "LineOfBusinessGroup": {
                    "LineOfBusinessGroupId": "number: ID of the line of business group",
                    "LineOfBusinessGroupName": "string: line of business group name",
                    "uri": "string: unique resource identifier"
                },
                "MarketChannel": {
                    "MarketChannelID": "number: ID of the market channel",
                    "MarketChannelName": "string: market channel name",
                    "uri": "string: unique resource identifier"
                },
                "Program": {
                    "AsOfDate": "string: date and time of the latest program version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
                    "Description": "string: program description",
                    "Id": "number: program ID",
                    "Name": "string: program name",
                    "Owner": "number: user ID of the creator",
                    "SourceId": "string: the ID of the external system to which the program is linked. Must be unique for import.",
                    "URI": "string: unique resource identifier",
                    "Version": "number: program version",
                    "AclTag": "string: ACL tag",
                    "isReinsurance": "boolean: indicates whether it is a reinsurance program",
                    "snapshotDate": "string: date and time of the latest snapshot in the format YYYYMMDDThh:mm:ss:sssZ for UTC time"
                },
                "Underwriter": {
                    "FirstName": "string: first name of the underwriter",
                    "LastName": "string: last name of the underwriter",
                    "Id": "number: underwriter ID",
                    "IsActive": "boolean: indicates whether the underwriter is active",
                    "UnderwriterCode": "string: underwriter code",
                    "UpdateDate": "string: udpate date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                },
                "UnderwriterAccountParty": {
                    "ID": "number: underwriter account ID",
                    "Name": "string: underwriter account name",
                    "uri": "string: unique resource identifier"
                },
                "UserDefContractType": {
                    "ID": "number: user defined contract ID",
                    "Name": "string: user defined contract name",
                    "uri": "string: unique resource identifier"
                },
                "CDLContract": {
                    "CDLString": "string: CDL information",
                    "uri": "string: /contracts/{id}/cdl"
                }
            }
        }
    ```

### DELETE contract [DELETE]
Deletes the selected contract instance.

+ Response 204



### PUT contract [PUT]
Updates the specified contract.


+ Request

    ```js
            {
                "ACLTag": "string: ACL tag",
                "CloneTypeId": 0,
                "CloneTypeId": "number: clone type ID",
                "ExposedParty": "number: user ID of the exposed party",
                "name": "string: the name of the contract. Cannot start with a number, cannot be blank or null.",
                "UserDefinedTypeId": "number: user defined type ID",
                "whatIfTagList": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                "AccountingOrganizationParty": "string: name, ID, and URI of accounting organization party.',
                "AgentParty": "string: information about the agent party.",
                "BranchParty": "string: information about the branch party.",
                "BrokerParty": "string: information about the broker party.",,
                },
                "ClaimAdjustmentDeductibleName": "string: claim adjustment deductible name",
                "ClaimAdjustmentSublimitName": "string: claim adjustment sublimit name",
                "ContractStatus": {
                        "Code": "string: status code",
                        "id": "number: contract ID",
                        "name": "string: name of contract status",
                        "uri": "string: unique resource identifier"
                },
                "ContractSubjects": { 
                    [
                        "AccountId": "number: account ID",
                        "AccountName": "string: account name",
                        "CededContractIds": "number: ceded contract IDs",
                        "InuringContractFilterEql": "string: inuring contract filter",
                        "InuringContractFilterId": "number: inuring contract filter ID",
                        "InuringContractFilterName": "string: inuring contract filter name",
                        "IsInuringContractFac": "boolean: is inuring contract",
                        "IsInuringContractPerRisk": "boolean: is inuring contract per risk",
                        "LossScaling": "number: loss scaling",
                        "Name": "string: name of contract subject",
                        "SubjectExposureId": "number: subject exposure ID",
                        "SubjectExposureName": "string: subject exposure name",
                        "SubjectExposureType": "number: subject exposure type",
                        "SubjectFilterEql": "string: subject filter",
                        "SubjectFilterId": "number: subject filter ID",
                        "SubjectFilterName": "string: subject filter name",
                        "UILabel": "string: UI label"
                    ],
                "ContractType": {
                    "ContractTypeCode": "string: contract type code",
                    "ContractTypeDescr": "string: contract type description",
                    "ContractTypeId": "number: ID of the contract type",
                    "ContractTypeName": "string: contract type name",
                    "ParentContractTypeID": "number: ID of the parent contract type",
                    "uri": "string: unique resource identifier"
                },
                "ContractTypeIsInsurance": "boolean: indicates whether the contract type is an insurance policy or reinsurance contract and further indicates the type of insurance or reinsurance.",
                "CostCenterParty": "string: information about the cost center party.",
                "CurrencyCode": "string: 3-digit currecy code (for example, USD)",
                "ExpectedShares": "number: expected shares",
                "ExposureType": "integer: exposure type",
                "FreeReinstatement": string: indicates free reinstatement",
                "HubParty": "string: name, ID, and URI of THE HUB party.", 
                "InceptionDateTime": "string: inception date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "InsuredParty": {
                                "ID": "ID of the insured party.",
                                "Name": "string: name of the insured party",
                                "URI": "string: unique resource identifier of the insured party.",
                },
                "InsurerParty": {
                                "ID": "ID of the insurer.",
                                "Name": "string: name of the insurer"",
                                "URI": "string: unique resource identifier of the insurer.",
                },
                "IsCedantContract": "boolean: specifies whether this instance is a cedant contract.",
                "IsProRataTemporis": "boolean: specifies whether this instance is apro rata temporis contract.",
                "LastImported": "string: Date and time this instance was last imported in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "LegalEntityParty": "string: information about the legal entity.",
                
                "LineOfBusiness": {
                                "LineOfBusinessId": "number: ID of the line of business",
                                "LineOfBusinessName": "string: line of business name",
                                "uri": "string:unique resource identifier"
                },
                "MarketChannel": {
                                "MarketChannelID": "number: ID of the market channel",
                                "MarketChannelName": "string: market channel name",
                                "uri": "string: unique resource identifier"
                },
                "OfficeParty": "string: information about the office.",
                "PaidReinstatement": "number: paid reinstatement",
                "Premium": "number: premium amount",
                "PrimaryAccordOccupancyId": "number: primary accord occupancy ID",
                "PrimaryAccordOccupancyName": "string: primary accord occupancy name",
                "ReinstatementsPremium": "number: reinstatements premium amount",
                "ProductAsOfDateTime": "string: date and time of the latest product in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "ProductId": "number: product ID",
                "Program": "string: information about the program.",
                "RenewalDateTime": "string: renewal date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",               
                "SignedShares": "number: number of signed shares",
                "SignedShares": 100,    
                "UnderwriterPartyName": "string: underwriter name.",
                "UnderwriterAccountParty": "string: underwriter account.",
                "UserDefContractType": {
                                "ID": "number: contract ID",
                                "Name": "string: contract name",
                                "URI": "string: unique resource identifier",
                },
                "WrittenShares": "number: written shares",
}

    ```

+ Response 200
    
   ```js
        { 
            "contract": {
                "id": "number: resource ID",
                "uri": "string: unique resource URI",
                "name": "string: the name of the contract. Cannot start with a number, cannot be blank or null.",
                "description": "string: contract description",
                "Number": "string: contract number",
                "RevisionLabel": "string: contract revision label",
                "aclTag": "string: ACL tag",
                "CloneTypeId": "number: clone type ID",
                "ClonedExposureId": "number: cloned exposure ID",
                "UserDefinedTypeId": "number: user defined type ID",
                "AttachmentBasisID": "number: attachment basis ID",
                "AttachmentLevelID": "number: attachment level ID",
                "ClaimAdjustmentDeductibleID": "number: claim adjustment deductible ID",
                "ClaimAdjustmentDeductibleName": "string: claim adjustment deductible name",
                "ClaimAdjustmentSublimitID": "number: claim adjustment sublimit ID",
                "ClaimAdjustmentSublimitName": "string: claim adjustment sublimit name",
                "PositionStructureID": "number: position structure ID",
                "ProductId": "number: product ID",
                "UpdateUserID": "number: update user ID",
                "PrimaryAccordOccupancyId": "number: primary accord occupancy ID",
                "PrimaryAccordOccupancyName": "string: primary accord occupancy name",
                "Premium": "number: premium amount",
                "ReinstatementsPremium": "number: reinstatements premium amount",
                "ReinstatementsPremiumRank": "number: reinstatements premium rank",
                "ContractCount": "number: contract count",
                "RiskItemCount": "number: risk item count",
                "NumberOfRiskItems": "number: number of risk items",
                "NumberOfUnits": "number: number of units",
                "AsOfDateTime": "string: date and time of the latest contract version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "ProductAsOfDateTime": "string: date and time of the latest product the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "ClonedExposureAsOfDateTime": "string: date and time of the cloned exposure in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "CreateDateTime": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "ExpirationDateTime": "string: expiration date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "InceptionDateTime": "string: inception date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "LastImportDateTime": "string: date and time of the last import in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "UpdateDateTime": "string: update date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "RenewalDateTime": "string: renewal date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "RenewalProbabilityPercent": "number: renewal probability (percentage)",
                "SignedShares": "number: number of signed shares",
                "ExposedParty": "number: user ID of the exposed party",
                "ImportSet": "string: the import set ID",
                "Subschedules": "string: list of subschedules",
                "SyndicateParty": "string: syndicate party",
                "TerminationBasisID": "number: termination basis ID",
                "Jurisdiction": "string: jurisdiction",
                "whatIfTagList": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                "Owner": "number: user ID of the creator",
                "ContentsTotalInsuredValue": "number: total insured value of the contents",
                "BuildingTotalInsuredValue": "number: total insured value of the building",
                "BusinessInteruptionTotalInsuredValue": "double: total insured value for business interruption",
                "TotalInsuredValue": "number: total insured value",
                "ContractTypeIsInsurance": "boolean: indicates whether the contract type is an insurance policy or reinsurance contract and further indicates the type of insurance or reinsurance.",
                "IsCedantContract": "boolean: indicates whether it is a cedant contract",
                "IsProRataTemporis": "boolean: indicates whether it is pro rata temporis",
                "IsRenewal": "boolean: indicates whether it is a renewal",
                "CurrencyCode": "string: 3-digit currency code (for example, USD)",
                "PremiumCurrencyCode": "string: 3-digit premium currency code (e.g. USD)",
                "ExpectedShares": "number: expected shares",
                "FallBackNotionalLimit": "number: fallback notional limit",
                "FreeReinstatement": "string: indicates free reinstatement",
                "PaidReinstatement": "number: paid reinstatement",
                "WrittenShares": "number: written shares",
                "AccountingOrganizationParty": {
                    "id": "number: ID of accounting organization party",
                    "name": "string: name of accounting organization party",
                    "uri": "string: unique resource identifier"
                },
                "AgentParty": {
                    "id": "number: ID of agent party",
                    "name": "string: name of agent party",
                    "uri": "string: unique resource identifier"
                },
                "BranchParty": {
                    "id": "number: ID of branch party",
                    "name": "string: name of branch party",
                    "uri": "string: unique resource identifier"
                },
                "BrokerParty": {
                    "id": "number: ID of broker party",
                    "name": "string: name of broker party",
                    "uri": "string: unique resource identifier"
                },
                "CostCenterParty": {
                    "id": "number: ID of cost center party",
                    "name": "string: name of cost center party",
                    "uri": "string: unique resource identifier"
                },
                "GroupParty": {
                    "id": "number: ID of group party",
                    "name": "string: name of group party",
                    "uri": "string: unique resource identifier"
                },
                "HubParty": {
                    "id": "number: ID of hub party",
                    "name": "string: name of hub party",
                    "uri": "string: unique resource identifier"
                },
                "InsuredParty": {
                    "id": "number: ID of the insured party",
                    "name": "string: name of insured party",
                    "uri": "string: unique resource identifier"
                },
                "InsurerParty": {
                    "id": "number: ID of the insurer party",
                    "name": "string: name of insurer party",
                    "uri": "string: unique resource identifier"
                },
                "LegalEntityParty": {
                    "id": "number: ID of the legal entity party",
                    "name": "string: name of legal entity party",
                    "uri": "string: unique resource identifier"
                },
                "OfficeParty": {
                    "id": "number: ID of the office party",
                    "name": "string: name of office party",
                    "uri": "string: unique resource identifier"
                },
                "ProducerParty": {
                    "id": "number: ID of the producer party",
                    "name": "string: name of producer party",
                    "uri": "string: unique resource identifier"
                },
                "ContractStatus": {
                    "Code": "string: status code",
                    "id": "number: contract ID",
                    "name": "string: name of contract status",
                    "uri": "string: unique resource identifier"
                },
                "ContractSubjects": { 
                    [
                        "AccountId": "number: account ID",
                        "AccountName": "string: account name",
                        "CededContractIds": "number: ceded contract IDs",
                        "InuringContractFilterEql": "string: inuring contract filter",
                        "InuringContractFilterId": "number: inuring contract filter ID",
                        "InuringContractFilterName": "string: inuring contract filter name",
                        "IsInuringContractFac": "boolean: is inuring contract",
                        "IsInuringContractPerRisk": "boolean: is inuring contract per risk",
                        "LossScaling": "number: loss scaling",
                        "Name": "string: name of contract subject",
                        "SubjectExposureId": "number: subject exposure ID",
                        "SubjectExposureName": "string: subject exposure name",
                        "SubjectExposureType": "number: subject exposure type",
                        "SubjectFilterEql": "string: subject filter",
                        "SubjectFilterId": "number: subject filter ID",
                        "SubjectFilterName": "string: subject filter name",
                        "UILabel": "string: UI label"
                    ],
                    [
                        "AccountId": "number: account ID",
                        "AccountName": "string: account name",
                        "CededContractIds": "number: ceded contract IDs",
                        "InuringContractFilterEql": "string: inuring contract filter",
                        "InuringContractFilterId": "number: inuring contract filter ID",
                        "InuringContractFilterName": "string: inuring contract filter name",
                        "IsInuringContractFac": "boolean: is inuring contract",
                        "IsInuringContractPerRisk": "boolean: is inuring contract per risk",
                        "LossScaling": "number: loss scaling",
                        "Name": "string: name of contract subject",
                        "SubjectExposureId": "number: subject exposure ID",
                        "SubjectExposureName": "string: subject exposure name",
                        "SubjectExposureType": "number: subject exposure type",
                        "SubjectFilterEql": "string: subject filter",
                        "SubjectFilterId": "number: subject filter ID",
                        "SubjectFilterName": "string: subject filter name",
                        "UILabel": "string: UI label"
                    ],
                    [
                        "AccountId": "number: account ID",
                        "AccountName": "string: account name",
                        "CededContractIds": "number: ceded contract IDs",
                        "InuringContractFilterEql": "string: inuring contract filter",
                        "InuringContractFilterId": "number: inuring contract filter ID",
                        "InuringContractFilterName": "string: inuring contract filter name",
                        "IsInuringContractFac": "boolean: is inuring contract",
                        "IsInuringContractPerRisk": "boolean: is inuring contract per risk",
                        "LossScaling": "number: loss scaling",
                        "Name": "string: name of contract subject",
                        "SubjectExposureId": "number: subject exposure ID",
                        "SubjectExposureName": "string: subject exposure name",
                        "SubjectExposureType": "number: subject exposure type",
                        "SubjectFilterEql": "string: subject filter",
                        "SubjectFilterId": "number: subject filter ID",
                        "SubjectFilterName": "string: subject filter name",
                        "UILabel": "string: UI label"
                    ]
                },
                "ContractType": {
                    "ContractTypeCode": "string: contract type code",
                    "ContractTypeDescr": "string: contract type description",
                    "ContractTypeId": "number: ID of the contract type",
                    "ContractTypeName": "string: contract type name",
                    "ParentContractTypeID": "number: ID of the parent contract type",
                    "uri": "string: unique resource identifier"
                },
                "LineOfBusiness": {
                    "LineOfBusinessId": "number: ID of the line of business",
                    "LineOfBusinessName": "string: line of business name",
                    "uri": "string: unique resource identifier"
                },
                "LineOfBusinessGroup": {
                    "LineOfBusinessGroupId": "number: ID of the line of business group",
                    "LineOfBusinessGroupName": "string: line of business group name",
                    "uri": "string: unique resource identifier"
                },
                "MarketChannel": {
                    "MarketChannelID": "number: ID of the market channel",
                    "MarketChannelName": "string: market channel name",
                    "uri": "string: unique resource identifier"
                },
                "Program": {
                    "AsOfDate": "string: date and time of the latest program version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "Description": "string: program description",
                    "Id": "number: program ID",
                    "Name": "string: program name",
                    "Owner": "number: user ID of the creator",
                    "SourceId": "string: the ID of the external system to which the program is linked. Must be unique for import.",
                    "URI": "string: unique resource identifier",
                    "Version": "number: program version",
                    "AclTag": "string: ACL tag",
                    "isReinsurance": "boolean: indicates whether it is a reinsurance program",
                    "snapshotDate": "string: date and time of the latest snapshot in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                },
                "Underwriter": {
                    "FirstName": "string: first name of the underwriter",
                    "LastName": "string: last name of the underwriter",
                    "Id": "number: underwriter ID",
                    "IsActive": "boolean: indicates whether the underwriter is active",
                    "UnderwriterCode": "string: underwriter code",
                    "UpdateDate": "string: udpate date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                },
                "UnderwriterAccountParty": {
                    "ID": "number: underwriter account ID",
                    "Name": "string: underwriter account name",
                    "uri": "string: unique resource identifier"
                },
                "UserDefContractType": {
                    "ID": "number: user defined contract ID",
                    "Name": "string: user defined contract name",
                    "uri": "string: unique resource identifier"
                },
                "CDLContract": {
                    "CDLString": "string: CDL information",
                    "uri": "string: /contracts/{id}/cdl"
                }
            }
        }
    ```


## contracts [/services/v1/ExposureService/Contracts/{?accountId, accountingOrganizationPartyName, aclTag, agentParty, asOfDateTime, branchParty, brokerParty, claimAdjustmentDeductibleName, claimAdjustmentSublimitName, clonedExposureAsOfDateTime, clonedExposureId, cloneTypeId, contractCount, contractStatus, contractType, contractTypeIsInsurance, contractSubjects, costCenterParty, createDateTime, createUserId, currencyCode, description, expectedShares, exposedParty, expirationDateTime, exposureNumber, exposureTypeId, freeReinstatement, hubParty, id, importSet, inceptionDate, insuredParty, insurerParty, isCedantContract, isProRataTemporis, legalEntityParty, limit, lineOfBusiness, marketChannel, name, number, officeParty, offset, owner, paidReinstatement, premium, primaryAccordOccupancyName, producerParty, productId, productName, productAsOfDateTime, program, reinstatementsPremium, renewalDate, revisionLabel, riskItemCount, signedShares, underwriterPartyName, underwritingAccountParty, userDefContractType, whatIfName, writtenShares}]
### GET Contracts [GET]
Returns a list of contracts. Supports standard filters, for example number of records to return per page and sorting. The contracts resource supports the following nested requests:


* GET Contracts by Portfolio
* GET Contracts by CedantExposure
* GET Contracts by Program

+ Parameters
   + accountId (integer, optional) ... Account ID.
   + accountingOrganizationPartyName (string: id|name|uri, optional) ... Name of the accounting organization.
   + aclTag (string, optional)... Additional access control list.
   + agentParty (string: id|name|uri, optional) ... Agent party.
   + asOfDateTime (string, optional) ... Date and time of latest contract version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + branchParty (string: id|name|uri, optional) ... Branch.
   + brokerParty (string: id|name|uri, optional) ... Broker.
   + claimAdjustmentDeductibleName (string, optional) ... Name of the claim adjustment deductible.
   + claimAdjustmentSublimitName (string, optional) ... Name of the claim adjustment sublimit.    
   + clonedExposureAsOfDateTime (string, optional) ... Date and time of the latest cloned exposure in the format YYYYMMDDThh:mm:ss:sssZfor UTC time
   + clonedExposureId (long, optional) ... Cloned exposure ID.
   + cloneTypeId (integer, optional) ... Clone type ID.
   + contractCount (number, optional) ... Number of contracts.
   + contractStatus (string: id|name|code, optional) ... Contract status.
   + contractType (String: Id|Name|Descr|parentID, optional ) ... Contract type. The contractType data type contains contract parameters such as contract name and ID and supported contract types.
   + contractTypeIsInsurance (boolean, optional) ... Indicates whether the contract is an insurance.
   + costCenterParty (string: id|name|uri, optional) ...  Cost Center.
   + createDate (string, optional) ... Date and time of contract creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + createUserId (string, optional) ... User ID.
   + currencyCode (string, optional) ... Currency code.
   + description (string, optional) ... Contract description.
   + expirationDate (string: datetime) ... Expiration date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + exposedParty (string: id|name|uri, optional) ... User ID of the exposed party.
   + expectedShares (double, optional) ... Expected shares.   
   + exposureTypeId (integer, optional) ... Exposure type ID.
   + exposureNumber (string, optional) ... User-defined exposure ID.
   + freeReinstatement (integer, optional) ... Free reinstatement.
   + hubParty (string: id|name|uri, optional) ... Hub.
   + id (integer, optional) ... Comma-separated list of contract IDs.
   + importSet (integer, optional) ... If the contract is imported, this is the ID of the import set to which the contract belonged. Otherwise set to null.
   + inceptionDate (string: datetime) ... Date and time of inception in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + insuredParty (string: id|name|uri) ... Insured.
   + insurerParty (string: id|name|uri) ... Insurer.
   + isCedantContract (boolean, optional) ... Indicates whether this instance is a cedant contract. 
   + isProRataTemporis (boolean, optional) ... Indicates whether this instance is pro rata temporis.
   + legalEntityParty (string: id|name|uri, optional) ... Legal entity.
   + limit (number, optional) ... Number of records to return per page.
   + lineOfBusiness (string: groupId|groupName|uri, optional) ... Line of business.
   + marketChannel (string: id|name|uri, optional) ... Market channel.
   + name (string) ... Comma-separated list of contract names. Cannot start with a number, cannot be blank or null.
   + number (string, optional) ... Contract number.
   + officeParty (string: id|name|uri, optional) ... Office.
   + offset (number, optional) ... Returns results starting with this record number (0-based).
   + owner (number, optional) ... Unique ID of the contract owner.
   + paidReinstatement (integer, optional) ... Paid reinstatement.  
   + premium (double, optional) ... Total premium.
   + primaryAccordOccupancyName (string, optional) ... Name of the primary accord occupancy.
   + productAsOfDateTime (string: datetime, optional) ... Returns contract versions older than this date, specified in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.    
   + producerParty ( string: id|name|uri, optional) ... Producer.
   + productId (number, optional) ... Product Id.
   + productName (string, optional) ... Product name.
   + program (string, optional) ... Program.
   + reinstatementsPremium (double, optional) ... Reinstatements premium.   
   + renewalDate (string:datetime, optional) ... Date and time of renewal in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + revisionLabel (string, optional) ... Contract revision label.
   + riskItemCount (long, optional) ... Risk item count.
   + signedShares (double, optional) ... Signe shares.
   + underwriterPartyName (string: id|name|uri, optional) ... Underwriter.
   + underwritingAccountParty (string: id|name|uri, optional) ... Underwriter account.
   + userDefContractType (string: id|name|uri, optional) ... User-defined contract ID.
   + whatIfName (string: id|name|description, optional) ... "What if" tag list.
   + writtenShares (double, optional) ... Number of written shares.

+ Response 200

    ```js
        { 
            "contracts": [
                {
                    "ACLTag": "string: ACL tag",
                    "AccountId": "integer: Account ID",
                    "AsOfDateTime: "string: Date and time of the latest contract version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.", 
                    "CloneTypeId": "integer: clone type ID",                    
                    "ClonedExposureAsOfDateTime": "string: Date and time of the latest cloned exposure in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "ClonedExposureId": "number: cloned exposure ID.",
                    "ContractCount": "number: Number of contracts.",
                    "CreateDateTime": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time..",
                    "Description": "string: Contract description.",
                    "ExposedParty": "number: user ID of the":  exposed party",
                    "ExposureTypeId": integer: unique identifier for the exposure type",
                    "id": "number: contract ID",
                    "ImportSet": "integer: If the contract is imported, this is the ID of the import set to which the contract belonged. Otherwise set to null.", 
                    "Name": "string: the name of the contract. Cannot start with a number, cannot be blank or null.",
                    "Number": string: contract name.",
                    "Owner": number: unique ID of the contract owner.",
                    "RevisionLabel": "string: contract revision label.",
                    "RiskItemCount": "long: risk item count.",
                    "SourceId": "string: the ID of the external system to which the contract is linked.",
                    "uri": "string: contract resource URI",
                    "UserDefinedTypeId": "number: user defined type ID",
                    "whatIfTagList": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                    "AccountingOrganizationParty": {
                        "id": "number: ID of accounting organization party",
                        "name": "string: name of accounting organization party",
                        "uri": "string: unique resource identifier"
                    },
                    "AgentParty": {
                        "id": "number: ID of agent party",
                        "name": "string: name of agent party",
                        "uri": "string: unique resource identifier"
                    },
                    "AttachmentBasisID": "number: attachment basis ID",
                    "AttachmentLevelID": "number: attachment level ID",
                    
                    "BranchParty": {
                        "id": "number: ID of branch party",
                        "name": "string: name of branch party",
                        "uri": "string: unique resource identifier"
                    },
                    "BrokerParty": {
                        "id": "number: ID of broker party",
                        "name": "string: name of broker party",
                        "uri": "string: unique resource identifier"
                    },
                    
                    "BuildingTotalInsuredValue": "long: total insured value of the building",
                    "BusinessInteruptionTotalInsuredValue":"double: total insured value for business interruption",
                    
                    "CDLContract": {
                        "CDLString": "string: CDL information",
                        "uri": "string: /contracts/{id}/cdl"
                        }
                        
                    "ClaimAdjustmentDeductibleID": "number: claim adjustment deductible ID",
                    "ClaimAdjustmentDeductibleName": "string: claim adjustment deductible name",
                    "ClaimAdjustmentSublimitID": "number: claim adjustment sublimit ID",
                    "ClaimAdjustmentSublimitName": "string: claim adjustment sublimit name",
                    "ContentsTotalInsuredValue": "number: total insured value of the contents",
                    
                    "ContractStatus": {
                        "Code": "string: status code",
                        "id": "number: contract ID",
                        "name": "string: name of contract status",
                        "uri": "string: unique resource identifier"
                    },
                    
                    "ContractSubjectExposures": "string: List of contract subject exposures. Exposures can be portfolios, cedant exposures, or treatiesin case of a re-insurance contract. An exposure can be an account schedule in case of an insurance contract.";  
                    
                    "ContractType": {
                        "ContractTypeCode": "string: contract type code",
                        "ContractTypeDescr": "string: contract type description",
                        "ContractTypeId": "number: ID of the contract type",
                        "ContractTypeName": "string: contract type name",
                        "ParentContractTypeID": "number: ID of the parent contract type",
                        "uri": "string: unique resource identifier"
                    },
                    
                    "ContractTypeIsInsurance": "boolean: indicates whether the contract type is an insurance policy or reinsurance contract and further indicates the type of insurance or reinsurance.",
                    "CurrencyCode": "string: 3-digit currency code (e.g. USD)",
                    "ExpectedShares": "number: expected shares",
                    "ExpirationDateTime": "string: expiration date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "FallBackNotionalLimit": "number: fallback notional limit",
                    "FreeReinstatement": "string: indicates free reinstatement",
                    "PaidReinstatement": "number: paid reinstatement",
                    
                    "GroupParty": {
                        "id": "number: ID of group party",
                        "name": "string: name of group party",
                        "uri": "string: ounique resource identifier"
                    },
                    "HubParty": {
                        "id": "number: ID of hub party",
                        "name": "string: name of hub party",
                        "uri": "string: unique resource identifier"
                    },
                    "InceptionDateTime": "string: inception date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    
                    "CostCenterParty": {
                        "id": "number: ID of cost center party",
                        "name": "string: name of cost center party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsuredParty": {
                        "id": "number: ID of the insured party",
                        "name": "string: name of insured party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsurerParty": {
                        "id": "number: ID of the insurer party",
                        "name": "string: name of insurer party",
                        "uri": "string: unique resource identifier"
                    },
                    
                    "IsCedantContract": "boolean: indicates whether it is a cedant contract",
                    "IsProRataTemporis": "boolean: indicates whether it is pro rata temporis",
                    "IsRenewal": "boolean: indicates whether it is a renewal", 
                    "Jurisdiction": "string: jurisdiction",                    
                    "LastImportDateTime": "string: date and time of the last import in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.", 
                    
                    "LegalEntityParty": {
                        "id": "number: ID of the legal entity party",
                        "name": "string: name of legal entity party",
                        "uri": "string: unique resource identifier"
                    },
                    "LineOfBusiness": {
                        "LineOfBusinessId": "number: ID of the line of business",
                        "LineOfBusinessName": "string: line of business name",
                        "uri": "string: unique resource identifier"
                    },
                    
                    "LineOfBusinessGroup": {
                        "LineOfBusinessGroupId": "number: ID of the line of business group",
                        "LineOfBusinessGroupName": "string: line of business group name",
                        "uri": "string: unique resource identifier"
                    },                
                     "MarketChannel": {
                        "MarketChannelID": "number: ID of the market channel",
                        "MarketChannelName": "string: market channel name",
                        "uri": "string: unique resource identifier"
                    },               
                
                    "NumberOfRiskItems": "number: number of risk items",
                    "NumberOfUnits": "number: number of units",                    
                    
                    "OfficeParty": {
                        "id": "number: ID of the office party",
                        "name": "string: name of office party",
                        "uri": "string: unique resource identifier"
                    },
                    
                    "PaidReinstatement": "number: paid reinstatement",
                    "PositionStructureID": "number: position structure ID",
                    "Premium": "number: premium amount",
                    "PremiumCurrencyCode": "string: 3-digit currency code (for example, USD)",
                    "PrimaryAccordOccupancyId": "number: primary accord occupancy ID",
                    "PrimaryAccordOccupancyName": "string: primary accord occupancy name",
                    
                    "ProducerParty": {
                        "id": "number: ID of the producer party",
                        "name": "string: name of producer party",
                        "uri": "string: unique resource identifier"
                    }
                        
                    "ProductAsOfDateTime": "string: date and time of the latest product in the format YYYYMMDDThh:mm:ss:sssZ for UYC time.",                
                    "ProductId": "number: product ID",
                    
                    "Program": {
                        "AsOf": "string: date and time of the latest program version in the format YYYYMMDDThh:mm:ss:sssZ for UYC time.",
                        "Description": "string: program description",
                        "Id": "number: program ID",
                        "Name": "string: program name",
                        "Owner": "number: user ID of the creator",
                        "SourceId": "string: the ID of the external system to which the program is linked. Must be unique for import.",
                        "URI": "string: unique resource identifier",
                        "Version": "number: program version",
                        "AclTag": "string: ACL tag",
                        "isReinsurance": "boolean: indicates whether it is a reinsurance program",
                    },
                    
                    "ReinstatementsPremiumRank": "number: reinstatements premium rank",
                    "RenewalDateTime": "string: renewal date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "RenewalProbabilityPercent": "number: renewal probability (percentage)",
                    "SignedShares": "number: number of signed shares",
                    "Subschedules": "string: list of subschedules",
                    
                    "SyndicateParty": {
                        "ID": "number: syndicate party ID",
                        "Name": "string: syndicate party name",
                        "URI": "string: syndicate party unique resource identifier",
                    }
                    
                    "TerminationBasisID": "number: termination basis ID", 
                    "TotalInsuredValue": "number: total insured value",                    
                    
                    "Underwriter": {
                        "FirstName": "string: first name of the underwriter",
                        "LastName": "string: last name of the underwriter",
                        "Id": "number: underwriter ID",
                        "UnderwriterCode": "string: underwriter code",
                    },
                    
                    "UnderwriterAccountParty": {
                        "ID": "number: underwriter account ID",
                        "Name": "string: underwriter account name",
                        "uri": "string: unique resource identifier"
                        
                    "UpdateDateTime": "string: update date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "UpdateUserID": "number: update user ID",                
                    },
                    "UserDefContractType": {
                        "ID": "number: user defined contract ID",
                        "Name": "string: user defined contract name",
                        "uri": "string: unique resource identifier"
                    }
                    "WrittenShares": "number: amount of written shares",
                },
                {
                    "ACLTag": "string: ACL tag",
                    "AccountId": "integer: Account ID",
                    "AsOfDateTime: "string: Date and time of the latest contract version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.", 
                    "CloneTypeId": "integer: clone type ID",                    
                    "ClonedExposureAsOfDateTime": "string: Date and time of the latest cloned exposure in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "ClonedExposureId": "number: cloned exposure ID.",
                    "ContractCount": "number: Number of contracts.",
                    "CreateDateTime": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "Description": "string: Contract description.",
                    "ExposedParty": "number: user ID of the":  exposed party",
                    "ExposureTypeId": integer: unique identifier for the exposure type",
                    "id": "number: object ID",
                    "ImportSet": "integer: If the contract is imported, this is the ID of the import set to which the contract belonged. Otherwise set to null.", 
                    "Name": "string: the name of the contract. Cannot start with a number, cannot be blank or null.",
                    "Number": string: contract name.",
                    "Owner": number: unique ID of the contract owner.",
                    "RevisionLabel": "string: contract revision label.",
                    "RiskItemCount": "long: risk item count.",
                    "SourceId": "string: the ID of the external system to which the contract is linked.",
                    "uri": "string: contract resource URI",
                    "UserDefinedTypeId": "number: user defined type ID",
                    "whatIfTagList": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                    "AccountingOrganizationParty": {
                        "id": "number: ID of accounting organization party",
                        "name": "string: name of accounting organization party",
                        "uri": "string: unique resource identifier"
                    },
                    "AgentParty": {
                        "id": "number: ID of agent party",
                        "name": "string: name of agent party",
                        "uri": "string: unique resource identifier"
                    },
                    "AttachmentBasisID": "number: attachment basis ID",
                    "AttachmentLevelID": "number: attachment level ID",
                    
                    "BranchParty": {
                        "id": "number: ID of branch party",
                        "name": "string: name of branch party",
                        "uri": "string: unique resource identifier"
                    },
                    "BrokerParty": {
                        "id": "number: ID of broker party",
                        "name": "string: name of broker party",
                        "uri": "string: unique resource identifier"
                    },
                    
                    "BuildingTotalInsuredValue": "long: total insured value of the building",
                    "BusinessInteruptionTotalInsuredValue":"double: total insured value for business interruption",
                    
                    "CDLContract": {
                        "CDLString": "string: CDL information",
                        "uri": "string: /contracts/{id}/cdl"
                        }
                        
                    "ClaimAdjustmentDeductibleID": "number: claim adjustment deductible ID",
                    "ClaimAdjustmentDeductibleName": "string: claim adjustment deductible name",
                    "ClaimAdjustmentSublimitID": "number: claim adjustment sublimit ID",
                    "ClaimAdjustmentSublimitName": "string: claim adjustment sublimit name",
                    "ContentsTotalInsuredValue": "number: total insured value of the contents",
                    
                    "ContractStatus": {
                        "Code": "string: status code",
                        "id": "number: contract ID",
                        "name": "string: name of contract status",
                        "uri": "string: unique resource identifier"
                    },
                    
                    "ContractSubjectExposures"
                    
                    "ContractType": {
                        "ContractTypeCode": "string: contract type code",
                        "ContractTypeDescr": "string: contract type description",
                        "ContractTypeId": "number: ID of the contract type",
                        "ContractTypeName": "string: contract type name",
                        "ParentContractTypeID": "number: ID of the parent contract type",
                        "uri": "string: unique resource identifier"
                    },
                    
                    "ContractTypeIsInsurance": "boolean: indicates whether the contract type is an insurance policy or reinsurance contract and further indicates the type of insurance or reinsurance.",
                    "CurrencyCode": "string: 3-digit currency code (e.g. USD)",
                    "ExpectedShares": "number: expected shares",
                    "ExpirationDateTime": "string: expiration date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "FallBackNotionalLimit": "number: fallback notional limit",
                    "FreeReinstatement": "string: indicates free reinstatement",
                    "PaidReinstatement": "number: paid reinstatement",
                    
                    "GroupParty": {
                        "id": "number: ID of group party",
                        "name": "string: name of group party",
                        "uri": "string: unique resource identifier"
                    },
                    "HubParty": {
                        "id": "number: ID of hub party",
                        "name": "string: name of hub party",
                        "uri": "string: unique resource identifier"
                    },
                    "InceptionDateTime": "string: inception date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    
                    "CostCenterParty": {
                        "id": "number: ID of cost center party",
                        "name": "string: name of cost center party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsuredParty": {
                        "id": "number: ID of the insured party",
                        "name": "string: name of insured party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsurerParty": {
                        "id": "number: ID of the insurer party",
                        "name": "string: name of insurer party",
                        "uri": "string: unique resource identifier"
                    },
                    
                    "IsCedantContract": "boolean: indicates whether it is a cedant contract",
                    "IsProRataTemporis": "boolean: indicates whether it is pro rata temporis",
                    "IsRenewal": "boolean: indicates whether it is a renewal", 
                    "Jurisdiction": "string: jurisdiction",                    
                    "LastImportDateTime": "string: date and time of the last import in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.", 
                    
                    "LegalEntityParty": {
                        "id": "number: ID of the legal entity party",
                        "name": "string: name of legal entity party",
                        "uri": "string: unique resource identifier"
                    },
                    "LineOfBusiness": {
                        "LineOfBusinessId": "number: ID of the line of business",
                        "LineOfBusinessName": "string: line of business name",
                        "uri": "string: unique resource identifier"
                    },
                    
                    "LineOfBusinessGroup": {
                        "LineOfBusinessGroupId": "number: ID of the line of business group",
                        "LineOfBusinessGroupName": "string: line of business group name",
                        "uri": "string: unique resource identifier"
                    },                
                     "MarketChannel": {
                        "MarketChannelID": "number: ID of the market channel",
                        "MarketChannelName": "string: market channel name",
                        "uri": "string: unique resource identifier"
                    },               
                
                    "NumberOfRiskItems": "number: number of risk items",
                    "NumberOfUnits": "number: number of units",                    
                    
                    "OfficeParty": {
                        "id": "number: ID of the office party",
                        "name": "string: name of office party",
                        "uri": "string: unique resource identifier"
                    },
                    
                    "PaidReinstatement": "number: paid reinstatement",
                    "PositionStructureID": "number: position structure ID",
                    "Premium": "number: premium amount",
                    "PremiumCurrencyCode": "string: 3-digit currency code (for example, USD)",
                    "PrimaryAccordOccupancyId": "number: primary accord occupancy ID",
                    "PrimaryAccordOccupancyName": "string: primary accord occupancy name",
                    
                    "ProducerParty": {
                        "id": "number: ID of the producer party",
                        "name": "string: name of producer party",
                        "uri": "string: unique resource identifier"
                    }
                        
                    "ProductAsOfDateTime": "string: date and time of the latest product in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",                
                    "ProductId": "number: product ID",
                    
                    "Program": {
                        "AsOf": "string: date and time of the latest program version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                        "Description": "string: program description",
                        "Id": "number: program ID",
                        "Name": "string: program name",
                        "Owner": "number: user ID of the creator",
                        "SourceId": "string: the ID of the external system to which the program is linked. Must be unique for import.",
                        "URI": "string: unique resource identifier",
                        "Version": "number: program version",
                        "AclTag": "string: ACL tag",
                        "isReinsurance": "boolean: indicates whether it is a reinsurance program",
                    },
                    
                    "ReinstatementsPremiumRank": "number: reinstatements premium rank",
                    "RenewalDateTime": "string: renewal date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "RenewalProbabilityPercent": "number: renewal probability (percentage)",
                    "SignedShares": "number: number of signed shares",
                    "Subschedules": "string: list of subschedules",
                    
                    "SyndicateParty": {
                        "ID": "number: syndicate party ID",
                        "Name": "string: syndicate party name",
                        "URI": "string: syndicate party unique resource identifier",
                    }
                    
                    "TerminationBasisID": "number: termination basis ID", 
                    "TotalInsuredValue": "number: total insured value",                    
                    
                    "Underwriter": {
                        "FirstName": "string: first name of the underwriter",
                        "LastName": "string: last name of the underwriter",
                        "Id": "number: underwriter ID",
                        "UnderwriterCode": "string: underwriter code",
                    },
                    
                    "UnderwriterAccountParty": {
                        "ID": "number: underwriter account ID",
                        "Name": "string: underwriter account name",
                        "uri": "string: unique resource identifier"
                        
                    "UpdateDateTime": "string: update date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "UpdateUserID": "number: update user ID",                
                    },
                    "UserDefContractType": {
                        "ID": "number: user defined contract ID",
                        "Name": "string: user defined contract name",
                        "uri": "string: unique resource identifier"
                    }
                    "WrittenShares": "number: amount of written shares",
                },
                {
                    "ACLTag": "string: ACL tag",
                    "AccountId": "integer: Account ID",
                    "AsOfDateTime: "string: Date and time of the latest contract version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.", 
                    "CloneTypeId": "integer: clone type ID",                    
                    "ClonedExposureAsOfDateTime": "string: Date and time of the latest cloned exposure in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "ClonedExposureId": "number: cloned exposure ID.",
                    "ContractCount": "number: Number of contracts.",
                    "CreateDateTime": "string: date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "Description": "string: Contract description.",
                    "ExposedParty": "number: user ID of the":  exposed party",
                    "ExposureTypeId": integer: unique identifier for the exposure type",
                    "id": "number: object ID",
                    "ImportSet": "integer: If the contract is imported, this is the ID of the import set to which the contract belonged. Otherwise set to null.", 
                    "Name": "string: the name of the contract. Cannot start with a number, cannot be blank or null.",
                    "Number": string: contract name.",
                    "Owner": number: unique ID of the contract owner.",
                    "RevisionLabel": "string: contract revision label.",
                    "RiskItemCount": "long: risk item count.",
                    "SourceId": "string: the ID of the external system to which the contract is linked.",
                    "uri": "string: contract resource URI",
                    "UserDefinedTypeId": "number: user defined type ID",
                    "whatIfTagList": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                    "AccountingOrganizationParty": {
                        "id": "number: ID of accounting organization party",
                        "name": "string: name of accounting organization party",
                        "uri": "string: unique resource identifier"
                    },
                    "AgentParty": {
                        "id": "number: ID of agent party",
                        "name": "string: name of agent party",
                        "uri": "string: unique resource identifier"
                    },
                    "AttachmentBasisID": "number: attachment basis ID",
                    "AttachmentLevelID": "number: attachment level ID",
                    
                    "BranchParty": {
                        "id": "number: ID of branch party",
                        "name": "string: name of branch party",
                        "uri": "string: unique resource identifier"
                    },
                    "BrokerParty": {
                        "id": "number: ID of broker party",
                        "name": "string: name of broker party",
                        "uri": "string: unique resource identifier"
                    },
                    
                    "BuildingTotalInsuredValue": "long: total insured value of the building",
                    "BusinessInteruptionTotalInsuredValue":"double: total insured value for business interruption",
                    
                    "CDLContract": {
                        "CDLString": "string: CDL information",
                        "uri": "string: /contracts/{id}/cdl"
                        }
                        
                    "ClaimAdjustmentDeductibleID": "number: claim adjustment deductible ID",
                    "ClaimAdjustmentDeductibleName": "string: claim adjustment deductible name",
                    "ClaimAdjustmentSublimitID": "number: claim adjustment sublimit ID",
                    "ClaimAdjustmentSublimitName": "string: claim adjustment sublimit name",
                    "ContentsTotalInsuredValue": "number: total insured value of the contents",
                    
                    "ContractStatus": {
                        "Code": "string: status code",
                        "id": "number: contract ID",
                        "name": "string: name of contract status",
                        "uri": "string: unique resource identifier"
                    },
                    
                    "ContractSubjectExposures"
                    
                    "ContractType": {
                        "ContractTypeCode": "string: contract type code",
                        "ContractTypeDescr": "string: contract type description",
                        "ContractTypeId": "number: ID of the contract type",
                        "ContractTypeName": "string: contract type name",
                        "ParentContractTypeID": "number: ID of the parent contract type",
                        "uri": "string: unique resource identifier"
                    },
                    
                    "ContractTypeIsInsurance": "boolean: indicates whether the contract type is an insurance policy or reinsurance contract and further indicates the type of insurance or reinsurance.",
                    "CurrencyCode": "string: 3-digit currency code (e.g. USD)",
                    "ExpectedShares": "number: expected shares",
                    "ExpirationDateTime": "string: expiration date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "FallBackNotionalLimit": "number: fallback notional limit",
                    "FreeReinstatement": "string: indicates free reinstatement",
                    "PaidReinstatement": "number: paid reinstatement",
                    
                    "GroupParty": {
                        "id": "number: ID of group party",
                        "name": "string: name of group party",
                        "uri": "string: unique resource identifier"
                    },
                    "HubParty": {
                        "id": "number: ID of hub party",
                        "name": "string: name of hub party",
                        "uri": "string: unique resource identifier"
                    },
                    "InceptionDateTime": "string: inception date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    
                    "CostCenterParty": {
                        "id": "number: ID of cost center party",
                        "name": "string: name of cost center party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsuredParty": {
                        "id": "number: ID of the insured party",
                        "name": "string: name of insured party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsurerParty": {
                        "id": "number: ID of the insurer party",
                        "name": "string: name of insurer party",
                        "uri": "string: unique resource identifier"
                    },
                    
                    "IsCedantContract": "boolean: indicates whether it is a cedant contract",
                    "IsProRataTemporis": "boolean: indicates whether it is pro rata temporis",
                    "IsRenewal": "boolean: indicates whether it is a renewal", 
                    "Jurisdiction": "string: jurisdiction",                    
                    "LastImportDateTime": "string: date and time of the last import in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.", 
                    
                    "LegalEntityParty": {
                        "id": "number: ID of the legal entity party",
                        "name": "string: name of legal entity party",
                        "uri": "string: unique resource identifier"
                    },
                    "LineOfBusiness": {
                        "LineOfBusinessId": "number: ID of the line of business",
                        "LineOfBusinessName": "string: line of business name",
                        "uri": "string: unique resource identifier"
                    },
                    
                    "LineOfBusinessGroup": {
                        "LineOfBusinessGroupId": "number: ID of the line of business group",
                        "LineOfBusinessGroupName": "string: line of business group name",
                        "uri": "string: unique resource identifier"
                    },                
                     "MarketChannel": {
                        "MarketChannelID": "number: ID of the market channel",
                        "MarketChannelName": "string: market channel name",
                        "uri": "string: unique resource identifier"
                    },               
                
                    "NumberOfRiskItems": "number: number of risk items",
                    "NumberOfUnits": "number: number of units",                    
                    
                    "OfficeParty": {
                        "id": "number: ID of the office party",
                        "name": "string: name of office party",
                        "uri": "string: unique resource identifier"
                    },
                    
                    "PaidReinstatement": "number: paid reinstatement",
                    "PositionStructureID": "number: position structure ID",
                    "Premium": "number: premium amount",
                    "PremiumCurrencyCode": "string: 3-digit currency code (for example, USD)",
                    "PrimaryAccordOccupancyId": "number: primary accord occupancy ID",
                    "PrimaryAccordOccupancyName": "string: primary accord occupancy name",
                    
                    "ProducerParty": {
                        "id": "number: ID of the producer party",
                        "name": "string: name of producer party",
                        "uri": "string: unique resource identifier"
                    }
                        
                    "ProductAsOfDateTime": "string: date and time of the latest product in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",                
                    "ProductId": "number: product ID",
                    
                    "Program": {
                        "AsOf": "string: date and time of the latest program version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                        "Description": "string: program description",
                        "Id": "number: program ID",
                        "Name": "string: program name",
                        "Owner": "number: user ID of the creator",
                        "SourceId": "string: the ID of the external system to which the program is linked. Must be unique for import.",
                        "URI": "string: unique resource identifier",
                        "Version": "number: program version",
                        "AclTag": "string: ACL tag",
                        "isReinsurance": "boolean: indicates whether it is a reinsurance program",
                    },
                    
                    "ReinstatementsPremiumRank": "number: reinstatements premium rank",
                    "RenewalDateTime": "string: renewal date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "RenewalProbabilityPercent": "number: renewal probability (percentage)",
                    "SignedShares": "number: number of signed shares",
                    "Subschedules": "string: list of subschedules",
                    
                    "SyndicateParty": {
                        "ID": "number: syndicate party ID",
                        "Name": "string: syndicate party name",
                        "URI": "string: syndicate party unique resource identifier",
                    }
                    
                    "TerminationBasisID": "number: termination basis ID", 
                    "TotalInsuredValue": "number: total insured value",                    
                    
                    "Underwriter": {
                        "FirstName": "string: first name of the underwriter",
                        "LastName": "string: last name of the underwriter",
                        "Id": "number: underwriter ID",
                        "UnderwriterCode": "string: underwriter code",
                    },
                    
                    "UnderwriterAccountParty": {
                        "ID": "number: underwriter account ID",
                        "Name": "string: underwriter account name",
                        "uri": "string: unique resource identifier"
                        
                    "UpdateDateTime": "string: update date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "UpdateUserID": "number: update user ID",                
                    },
                    "UserDefContractType": {
                        "ID": "number: user defined contract ID",
                        "Name": "string: user defined contract name",
                        "uri": "string: ounique resource identifier"
                    }
                    "WrittenShares": "double: number of written shares",
                }
            ]
            "Count": "number - total number of contracts that match"
        }

    ```

## contracts [/services/v1/ExposureService/Portfolios/{id}/Contracts/{?accountingOrganizationPartyName, aclTag, agentParty, branchParty, brokerParty, claimAdjustmentDeductibleName, claimAdjustmentSublimitName, clonedExposureId, cloneTypeId, contractStatus, contractType, contractTypeIsInsurance, contractSubjects, costCenterParty, createDateTime, createUserId, currencyCode, expectedShares, exposedParty, expirationDateTime, exposureId, exposureNumber, freeReinstatement, hubParty, id, inceptionDate, insuredParty, insurerParty, isCedantContract, isProRataTemporis, legalEntityParty, limit, lineOfBusiness, marketChannel, name, officeParty, offset, paidReinstatement, premium, primaryAccordOccupancyName, producerParty, productId, productName, productAsOfDateTime, program, reinstatementsPremium, renewalDate, signedShares, underwriterPartyName, underwritingAccountParty, userDefContractType, whatIfName, writtenShares}]
### GET Contracts by Portfolio [GET]
A nested contract request that returns a list of contracts by a specified portfolio. Supports standard filters, for example number of records to return per page and sorting.

+ Parameters
    + accountingOrganizationPartyName (string: id|name|uri, optional) ... Accounting organization.
    + aclTag (string, optional)... Additional access control list.
    + agentParty (string: id|name|uri, optional) ... Agent party.
    + branchParty (string: id|name|uri, optional) ... Branch.
    + brokerParty (string: id|name|uri, optional) ... Broker.
    + claimAdjustmentDeductibleName (string, optional) ... Name of the claim adjustment deductible.
    + claimAdjustmentSublimitName (string, optional) ... Name of the claim adjustment sublimit.    
    + clonedExposureId (long, optional) ... Cloned exposure ID.
    + cloneTypeId (integer, optional) ... Clone type ID.
    + contractStatus (string: id|name|code, optional) ... Contract status.
    + contractType (String: Id|Name|Descr|parentID, optional ) ... Contract type. The contractType data type contains contract parameters such as contract name and ID and supported contract types.
    + contractTypeIsInsurance (boolean, optional) ... Indicates whether the contract is an insurance.
    + costCenterParty (string: id|name|uri, optional) ...  Cost Center.
    + createDate (string, optional) ... Date and time of contract creation in the format, YYYYMMDDThh:mm:ss:sssZ for UTC time.
    + createUserId (string, optional) ... User ID.
    + currencyCode (string, optional) ... Currency code. 
    + expirationDate (string: datetime) ... Expiration date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
    + exposedParty (string: id|name|uri, optional) ... User ID of the exposed party.
    + expectedShares (double, optional) ... Expected shares.   
    + exposureId (integer, optional) ... Exposure ID.
    + exposureNumber (string, optional) ... User-defined exposure ID.
    + freeReinstatement (integer, optional) ... Free reinstatement.
    + hubParty (string: id|name|uri, optional) ... Hub.
    + id (integer, optional) ... Comma-separated list of contract IDs.
    + inceptionDate (string: datetime) ... Inception date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
    + insuredParty (string: id|name|uri) ... Insured.
    + insurerParty (string: id|name|uri) ... Insurer.
    + isCedantContract (boolean, optional) ... Indicates whether this instance is a cedant contract. 
    + isProRataTemporis (boolean, optional) ... Indicates whether this instance is pro rata temporis.
    + legalEntityParty (string: id|name|uri, optional) ... Legal entity.
    + limit (number, optional) ... Number of records to return per page.
    + lineOfBusiness (string: groupId|groupName|uri, optional) ... Line of business.
    + marketChannel (string: id|name|uri, optional) ... Market channel.
    + name (string) ... Comma-separated list of contract names. Cannot start with a number, cannot be blank or null.
    + officeParty (string: id|name|uri, optional) ... Office.
    + offset (number, optional) ... Returns results starting with this record number (0-based). 
    + paidReinstatement (integer, optional) ... Paid reinstatement.  
    + premium (double, optional) ... Total premium.
    + primaryAccordOccupancyName (string, optional) ... Name of the primary accord occupancy.
    + productAsOfDateTime (string: datetime, optional) ... Returns contract versions older than this date, specified in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.    
    + producerParty ( string: id|name|uri, optional) ... Producer.
    + productId  (number, optional) ... Product Id.
    + productName (string, optional) ... Product name.
    + program (string, optional) ... Program.
    + reinstatementsPremium (double, optional) ... Reinstatements premium.   
    + renewalDate (string:datetime, optional) ... Renewal date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
    + signedShares (double, optional) ... Signe shares.
    + underwriterPartyName (string: id|name|uri, optional) ... Underwriter.
    + underwritingAccountParty (string: id|name|uri, optional) ... Underwriter account.
    + userDefContractType (string: id|name|uri, optional) ... User-defined contract ID.
    + whatIfName (string: id|name|description, optional) ... "What if" tag list.
    + writtenShares (double, optional) ... Written shares.

+ Response 200

    ```js
        { 
            "contracts": [
                {
                    "id": "number: object ID",
                    "uri": "string: unique resource identifier",
                    "name": "string: the name of the contract. Cannot start with a number, cannot be blank or null.",
                    "aclTag": "string: ACL tag",
                    "CloneTypeId": "number: clone type ID",
                    "ClonedExposureId": "number: cloned exposure ID",
                    "UserDefinedTypeId": "number: user defined type ID",
                    "ClaimAdjustmentDeductibleName": "string: claim adjustment deductible name",
                    "ClaimAdjustmentSublimitName": "string: claim adjustment sublimit name",
                    "ProductName": "string: product name",
                    "PrimaryAccordOccupancyName": "string: primary accord occupancy name",
                    "Premium": "number: premium amount",
                    "ReinstatementsPremium": "number: reinstatements premium amount",
                    "ProductAsOfDateTime": "string: date and time of the latest product in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "CreateDateTime": "string: creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "ExpirationDateTime": "string: expiration date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "InceptionDateTime": "string: inception date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "RenewalDateTime": "string: renewal date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "SignedShares": "number: number of signed shares",
                    "ExposedParty": "number: user ID of the":  exposed party",
                    "whatIfTagList": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                    "ContractTypeIsInsurance": "boolean: indicates whether the contract type is an insurance policy or reinsurance contract and further indicates the type of insurance or reinsurance.",
                    "IsCedantContract": "boolean: indicates whether it is a cedant contract",
                    "IsProRataTemporis": "boolean: indicates whether it is pro rata temporis",
                    "CurrencyCode": "string: 3-digit currency code (e.g. USD)",
                    "FreeReinstatement": "string: indicates free reinstatement",
                    "PaidReinstatement": "number: paid reinstatement",
                    "WrittenShares": "number: written shares",
                    "AccountingOrganizationParty": {
                        "id": "number: ID of accounting organization party",
                        "name": "string: name of accounting organization party",
                        "uri": "string: unique resource identifier"
                    },
                    "AgentParty": {
                        "id": "number: ID of agent party",
                        "name": "string: name of agent party",
                        "uri": "string: unique resource identifier"
                    },
                    "BranchParty": {
                        "id": "number: ID of branch party",
                        "name": "string: name of branch party",
                        "uri": "string: unique resource identifier"
                    },
                    "BrokerParty": {
                        "id": "number: ID of broker party",
                        "name": "string: name of broker party",
                        "uri": "string: unique resource identifier"
                    },
                    "CostCenterParty": {
                        "id": "number: ID of cost center party",
                        "name": "string: name of cost center party",
                        "uri": "string: unique resource identifier"
                    },
                    "HubParty": {
                        "id": "number: ID of hub party",
                        "name": "string: name of hub party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsuredParty": {
                        "id": "number: ID of the insured party",
                        "name": "string: name of insured party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsurerParty": {
                        "id": "number: ID of the insurer party",
                        "name": "string: name of insurer party",
                        "uri": "string: unique resource identifier"
                    },
                    "LegalEntityParty": {
                        "id": "number: ID of the legal entity party",
                        "name": "string: name of legal entity party",
                        "uri": "string: unique resource identifier"
                    },
                    "OfficeParty": {
                        "id": "number: ID of the office party",
                        "name": "string: name of office party",
                        "uri": "string: unique resource identifier"
                    },
                    "ContractStatus": {
                        "Code": "string: status code",
                        "id": "number: contract ID",
                        "name": "string: name of contract status",
                        "uri": "string: unique resource identifier"
                    },
                    "ContractType": {
                        "ContractTypeCode": "string: contract type code",
                        "ContractTypeDescr": "string: contract type description",
                        "ContractTypeId": "number: ID of the contract type",
                        "ContractTypeName": "string: contract type name",
                        "ParentContractTypeID": "number: ID of the parent contract type",
                        "uri": "string: unique resource identifier"
                    },
                    "LineOfBusiness": {
                        "LineOfBusinessId": "number: ID of the line of business",
                        "LineOfBusinessName": "string: line of business name",
                        "uri": "string: unique resource identifier"
                    },
                    "MarketChannel": {
                        "MarketChannelID": "number: ID of the market channel",
                        "MarketChannelName": "string: market channel name",
                        "uri": "string: unique resource identifier"
                    },
                    "Program": {
                        "AsOfDate": "string: date and time of the latest program version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                        "Description": "string: program description",
                        "Id": "number: program ID",
                        "Name": "string: program name",
                        "Owner": "number: user ID of the creator",
                        "SourceId": "string: the ID of the external system to which the program is linked. Must be unique for import.",
                        "URI": "string: unique resource identifier",
                        "Version": "number: program version",
                        "AclTag": "string: ACL tag",
                        "isReinsurance": "boolean: indicates whether it is a reinsurance program",
                        "snapshotDate": "string: date and time of the latest snapshot in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                    },
                    "Underwriter": {
                        "FirstName": "string: first name of the underwriter",
                        "LastName": "string: last name of the underwriter",
                        "Id": "number: underwriter ID",
                        "IsActive": "boolean: indicates whether the underwriter is active",
                        "UnderwriterCode": "string: underwriter code",
                        "UpdateDate": "string: udpate date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                    },
                    "UnderwriterAccountParty": {
                        "ID": "number: underwriter account ID",
                        "Name": "string: underwriter account name",
                        "uri": "string: unique resource identifier"
                    },
                    "UserDefContractType": {
                        "ID": "number: user defined contract ID",
                        "Name": "string: user defined contract name",
                        "uri": "string: unique resource identifier"
                    }
                },
                {
                "id": "number: object ID",
                    "name": "string: the name of the contract. Cannot start with a number, cannot be blank or null.",
                    "aclTag": "string: ACL tag",
                    "CloneTypeId": "number: clone type ID",
                    "ClonedExposureId": "number: cloned exposure ID",
                    "UserDefinedTypeId": "number: user defined type ID",
                    "ClaimAdjustmentDeductibleName": "string: claim adjustment deductible name",
                    "ClaimAdjustmentSublimitName": "string: claim adjustment sublimit name",
                    "ProductName": "string: product name",
                    "PrimaryAccordOccupancyName": "string: primary accord occupancy name",
                    "Premium": "number: premium amount",
                    "ReinstatementsPremium": "number: reinstatements premium amount",
                    "ProductAsOfDateTime": "string: date and time of the latest product in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "CreateDateTime": "string: creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "ExpirationDateTime": "string: expiration date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "InceptionDateTime": "string: inception date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "RenewalDateTime": "string: renewal date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "SignedShares": "number: number of signed shares",
                    "ExposedParty": "number: user ID of the exposed party",
                    "whatIfTagList": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                    "ContractTypeIsInsurance": "boolean: indicates whether the contract type is an insurance policy or reinsurance contract and further indicates the type of insurance or reinsurance.",
                    "IsCedantContract": "boolean: indicates whether it is a cedant contract",
                    "IsProRataTemporis": "boolean: indicates whether it is pro rata temporis",
                    "CurrencyCode": "string: 3-digit currency code (for example, USD)",
                    "ExpectedShares": "number: expected shares",
                    "FreeReinstatement": "string: indicates free reinstatement",
                    "PaidReinstatement": "number: paid reinstatement",
                    "WrittenShares": "number: written shares",
                    "AccountingOrganizationParty": {
                        "id": "number: ID of accounting organization party",
                        "name": "string: name of accounting organization party",
                        "uri": "string: unique resource identifier"
                    },
                    "AgentParty": {
                        "id": "number: ID of agent party",
                        "name": "string: name of agent party",
                        "uri": "string: unique resource identifier"
                    },
                    "BranchParty": {
                        "id": "number: ID of branch party",
                        "name": "string: name of branch party",
                        "uri": "string: unique resource identifier"
                    },
                    "BrokerParty": {
                        "id": "number: ID of broker party",
                        "name": "string: name of broker party",
                        "uri": "string: unique resource identifier"
                    },
                    "CostCenterParty": {
                        "id": "number: ID of cost center party",
                        "name": "string: name of cost center party",
                        "uri": "string: unique resource identifier"
                    },
                    "HubParty": {
                        "id": "number: ID of hub party",
                        "name": "string: name of hub party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsuredParty": {
                        "id": "number: ID of the insured party",
                        "name": "string: name of insured party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsurerParty": {
                        "id": "number: ID of the insurer party",
                        "name": "string: name of insurer party",
                        "uri": "string: unique resource identifier"
                    },
                    "LegalEntityParty": {
                        "id": "number: ID of the legal entity party",
                        "name": "string: name of legal entity party",
                        "uri": "string: unique resource identifier"
                    },
                    "OfficeParty": {
                        "id": "number: ID of the office party",
                        "name": "string: name of office party",
                        "uri": "string: unique resource identifier"
                    },
                    "ContractStatus": {
                        "Code": "string: status code",
                        "id": "number: contract ID",
                        "name": "string: name of contract status",
                        "uri": "string: unique resource identifier"
                    },
                    "ContractType": {
                        "ContractTypeCode": "string: contract type code",
                        "ContractTypeDescr": "string: contract type description",
                        "ContractTypeId": "number: ID of the contract type",
                        "ContractTypeName": "string: contract type name",
                        "ParentContractTypeID": "number: ID of the parent contract type",
                        "uri": "string: unique resource identifier"
                    },
                    "LineOfBusiness": {
                        "LineOfBusinessId": "number: ID of the line of business",
                        "LineOfBusinessName": "string: line of business name",
                        "uri": "string: unique resource identifier"
                    },
                    "MarketChannel": {
                        "MarketChannelID": "number: ID of the market channel",
                        "MarketChannelName": "string: market channel name",
                        "uri": "string: unique resource identifier"
                    },
                    "Program": {
                        "AsOfDate": "string: date and time of the latest program version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                        "Description": "string: program description",
                        "Id": "number: program ID",
                        "Name": "string: program name",
                        "Owner": "number: user ID of the creator",
                        "SourceId": "string: the ID of the external system to which the program is linked. Must be unique for import.",
                        "URI": "string: unique resource identifier",
                        "Version": "number: program version",
                        "AclTag": "string: ACL tag",
                        "isReinsurance": "boolean: indicates whether it is a reinsurance program",
                        "snapshotDate": "string: date and time of the latest snapshot in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                    },
                    "Underwriter": {
                        "FirstName": "string: first name of the underwriter",
                        "LastName": "string: last name of the underwriter",
                        "Id": "number: underwriter ID",
                        "IsActive": "boolean: indicates whether the underwriter is active",
                        "UnderwriterCode": "string: underwriter code",
                        "UpdateDate": "string: udpate date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                    },
                    "UnderwriterAccountParty": {
                        "ID": "number: underwriter account ID",
                        "Name": "string: underwriter account name",
                        "uri": "string: unique resource identifier"
                    },
                    "UserDefContractType": {
                        "ID": "number: user defined contract ID",
                        "Name": "string: user defined contract name",
                        "uri": "string: unique resource identifier"
                    }
                },
                {
                "id": "number: object ID",
                    "name": "string: the name of the contract. Cannot start with a number, cannot be blank or null.",
                    "aclTag": "string: ACL tag",
                    "CloneTypeId": "number: clone type ID",
                    "ClonedExposureId": "number: cloned exposure ID",
                    "UserDefinedTypeId": "number: user defined type ID",
                    "ClaimAdjustmentDeductibleName": "string: claim adjustment deductible name",
                    "ClaimAdjustmentSublimitName": "string: claim adjustment sublimit name",
                    "ProductName": "string: product name",
                    "PrimaryAccordOccupancyName": "string: primary accord occupancy name",
                    "Premium": "number: premium amount",
                    "ReinstatementsPremium": "number: reinstatements premium amount",
                    "ProductAsOfDateTime": "string: date and time of the latest product in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "ExpirationDateTime": "string: expiration date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "InceptionDateTime": "string: inception date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "RenewalDateTime": "string: renewal date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "SignedShares": "number: number of signed shares",
                    "ExposedParty": "number: user ID of the exposed party",
                    "whatIfTagList": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                    "ContractTypeIsInsurance": "boolean: indicates whether the contract type is an insurance policy or reinsurance contract and further indicates the type of insurance or reinsurance.",
                    "IsCedantContract": "boolean: indicates whether it is a cedant contract",
                    "IsProRataTemporis": "boolean: indicates whether it is pro rata temporis",
                    "CurrencyCode": "string: 3-digit currency code (e.g. USD)",
                    "ExpectedShares": "number: expected shares",
                    "FreeReinstatement": "string: indicates free reinstatement",
                    "PaidReinstatement": "number: paid reinstatement",
                    "WrittenShares": "number: written shares",
                    "AccountingOrganizationParty": {
                        "id": "number: ID of accounting organization party",
                        "name": "string: name of accounting organization party",
                        "uri": "string: unique resource identifier"
                    },
                    "AgentParty": {
                        "id": "number: ID of agent party",
                        "name": "string: name of agent party",
                        "uri": "string: unique resource identifier"
                    },
                    "BranchParty": {
                        "id": "number: ID of branch party",
                        "name": "string: name of branch party",
                        "uri": "string: unique resource identifier"
                    },
                    "BrokerParty": {
                        "id": "number: ID of broker party",
                        "name": "string: name of broker party",
                        "uri": "string: unique resource identifier"
                    },
                    "CostCenterParty": {
                        "id": "number: ID of cost center party",
                        "name": "string: name of cost center party",
                        "uri": "string: unique resource identifier"
                    },
                    "HubParty": {
                        "id": "number: ID of hub party",
                        "name": "string: name of hub party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsuredParty": {
                        "id": "number: ID of the insured party",
                        "name": "string: name of insured party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsurerParty": {
                        "id": "number: ID of the insurer party",
                        "name": "string: name of insurer party",
                        "uri": "string: unique resource identifier"
                    },
                    "LegalEntityParty": {
                        "id": "number: ID of the legal entity party",
                        "name": "string: name of legal entity party",
                        "uri": "string: unique resource identifier"
                    },
                    "OfficeParty": {
                        "id": "number: ID of the office party",
                        "name": "string: name of office party",
                        "uri": "string: unique resource identifier"
                    },
                    "ContractStatus": {
                        "Code": "string: status code",
                        "id": "number: contract ID",
                        "name": "string: name of contract status",
                        "uri": "string: unique resource identifier"
                    },
                    "ContractType": {
                        "ContractTypeCode": "string: contract type code",
                        "ContractTypeDescr": "string: contract type description",
                        "ContractTypeId": "number: ID of the contract type",
                        "ContractTypeName": "string: contract type name",
                        "ParentContractTypeID": "number: ID of the parent contract type",
                        "uri": "string: unique resource identifier"
                    },
                    "LineOfBusiness": {
                        "LineOfBusinessId": "number: ID of the line of business",
                        "LineOfBusinessName": "string: line of business name",
                        "uri": "string: unique resource identifier"
                    },
                    "MarketChannel": {
                        "MarketChannelID": "number: ID of the market channel",
                        "MarketChannelName": "string: market channel name",
                        "uri": "string: unique resource identifier"
                    },
                    "Program": {
                        "AsOfDate": "string: date and time of the latest program version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                        "Description": "string: program description",
                        "Id": "number: program ID",
                        "Name": "string: program name",
                        "Owner": "number: user ID of the creator",
                        "SourceId": "string: the ID of the external system to which the program is linked. Must be unique for import.",
                        "URI": "string: unique resource identifier",
                        "Version": "number: program version",
                        "AclTag": "string: ACL tag",
                        "isReinsurance": "boolean: indicates whether it is a reinsurance program",
                        "snapshotDate": "string: date and time of the latest snapshot in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                    },
                    "Underwriter": {
                        "FirstName": "string: first name of the underwriter",
                        "LastName": "string: last name of the underwriter",
                        "Id": "number: underwriter ID",
                        "IsActive": "boolean: indicates whether the underwriter is active",
                        "UnderwriterCode": "string: underwriter code",
                        "UpdateDate": "string: udpate date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                    },
                    "UnderwriterAccountParty": {
                        "ID": "number: underwriter account ID",
                        "Name": "string: underwriter account name",
                        "uri": "string: unique resource identifier"
                    },
                    "UserDefContractType": {
                        "ID": "number: user defined contract ID",
                        "Name": "string: user defined contract name",
                        "uri": "string: unique resource identifier"
                    }
                }
            ]
            "Count": "number - total number of contracts that match"
        }

    ```
    
    
    
## contracts [/services/v1/ExposureService/CedantExposures/{id}/Contracts/{?accountingOrganizationPartyName, aclTag, agentParty, branchParty, brokerParty, claimAdjustmentDeductibleName, claimAdjustmentSublimitName, clonedExposureId, cloneTypeId, contractStatus, contractType, contractTypeIsInsurance, contractSubjects, costCenterParty, createDateTime, createUserId, currencyCode, expectedShares, exposedParty, expirationDateTime, exposureId, exposureNumber, freeReinstatement, hubParty, id, inceptionDate, insuredParty, insurerParty, isCedantContract, isProRataTemporis, legalEntityParty, limit, lineOfBusiness, marketChannel, name, officeParty, offset, paidReinstatement, premium, primaryAccordOccupancyName, producerParty, productId, productName, productAsOfDateTime, program, reinstatementsPremium, renewalDate, signedShares, underwriterPartyName, underwritingAccountParty, userDefContractType, whatIfName, writtenShares}]
### GET Contracts by CedantExposure [GET]
A nested contract request that returns a list of contracts by a specified cedant exposure. Supports standard filters, for example number of records to return per page and sorting.

+ Parameters
    + accountingOrganizationPartyName (string: id|name|uri, optional) ... Accounting organization.
    + aclTag (string, optional)... Additional access control list.
    + agentParty (string: id|name|uri, optional) ... Agent party.
    + branchParty (string: id|name|uri, optional) ... Branch.
    + brokerParty (string: id|name|uri, optional) ... Broker.
    + claimAdjustmentDeductibleName (string, optional) ... Name of the claim adjustment deductible.
    + claimAdjustmentSublimitName (string, optional) ... Name of the claim adjustment sublimit.    
    + clonedExposureId (long, optional) ... Cloned exposure ID.
    + cloneTypeId (integer, optional) ... Clone type ID.
    + contractStatus (string: id|name|code, optional) ... Contract status.
    + contractType (String: Id|Name|Descr|parentID, optional ) ... Contract type. The contractType data type contains contract parameters such as contract name and ID and supported contract types.
    + contractTypeIsInsurance (boolean, optional) ... Indicates whether the contract is an insurance.
    + costCenterParty (string: id|name|uri, optional) ...  Cost Center.
    + createDate (string, optional) ... Date and time of contract creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
    + createUserId (string, optional) ... User ID.
    + currencyCode (string, optional) ... Currency code. 
    + expirationDate (string: datetime) ... Expiration date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
    + exposedParty (string: id|name|uri, optional) ... User ID of the exposed party.
    + expectedShares (double, optional) ... Expected shares.   
    + exposureId (integer, optional) ... Exposure ID.
    + exposureNumber (string, optional) ... User-defined exposure ID.
    + freeReinstatement (integer, optional) ... Free reinstatement.
    + hubParty (string: id|name|uri, optional) ... Hub.
    + id (integer, optional) ... Comma-separated list of contract IDs.
    + inceptionDate (string: datetime) ... Date and time of inception in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
    + insuredParty (string: id|name|uri) ... Insured.
    + insurerParty (string: id|name|uri) ... Insurer.
    + isCedantContract (boolean, optional) ... Indicates whether this instance is a cedant contract. 
    + isProRataTemporis (boolean, optional) ... Indicates whether this instance is pro rata temporis.
    + legalEntityParty (string: id|name|uri, optional) ... Legal entity.
    + limit (number, optional) ... Number of records to return per page.
    + lineOfBusiness (string: groupId|groupName|uri, optional) ... Line of business.
    + marketChannel (string: id|name|uri, optional) ... Market channel.
    + name (string) ... Comma-separated list of contract names. Cannot start with a number, cannot be blank or null.
    + officeParty (string: id|name|uri, optional) ... Office.
    + offset (number, optional) ... Returns results starting with this record number (0-based).   
    + paidReinstatement (integer, optional) ... Paid reinstatement.  
    + premium (double, optional) ... Total premium.
    + primaryAccordOccupancyName (string, optional) ... Name of the primary accord occupancy.
    + productAsOfDateTime (string: datetime, optional) ... Returns contract versions older than this date, specified in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.    
    + producerParty ( string: id|name|uri, optional) ... Producer.
    + productId  (number, optional) ... Product Id.
    + productName (string, optional) ... Product name.
    + program (string, optional) ... Program.
    + reinstatementsPremium (double, optional) ... Reinstatements premium.   
    + renewalDate (string:datetime, optional) ... Renewal date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
    + signedShares (double, optional) ... Signe shares.
    + underwriterPartyName (string: id|name|uri, optional) ... Underwriter.
    + underwritingAccountParty (string: id|name|uri, optional) ... Underwriter account.
    + userDefContractType (string: id|name|uri, optional) ... User-defined contract ID.
    + whatIfName (string: id|name|description, optional) ... "What if" tag list.
    + writtenShares (double, optional) ... Written shares.

+ Response 200

    ```js
        { 
            "contracts": [
                {
                    "id": "number: object ID",
                    "uri": "string: unique resource identifier",
                    "name": "string: the name of the contract. Cannot start with a number, cannot be blank or null.",
                    "aclTag": "string: ACL tag",
                    "CloneTypeId": "number: clone type ID",
                    "ClonedExposureId": "number: cloned exposure ID",
                    "UserDefinedTypeId": "number: user defined type ID",
                    "ClaimAdjustmentDeductibleName": "string: claim adjustment deductible name",
                    "ClaimAdjustmentSublimitName": "string: claim adjustment sublimit name",
                    "ProductName": "string: product name",
                    "PrimaryAccordOccupancyName": "string: primary accord occupancy name",
                    "Premium": "number: premium amount",
                    "ReinstatementsPremium": "number: reinstatements premium amount",
                    "ProductAsOfDateTime": "string: date and time of the latest product version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "CreateDateTime": "string: creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "ExpirationDateTime": "string: expiration date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "InceptionDateTime": "string: inception date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "RenewalDateTime": "string: renewal date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "SignedShares": "number: number of signed shares",
                    "ExposedParty": "number: user ID of the":  exposed party",
                    "whatIfTagList": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                    "ContractTypeIsInsurance": "boolean: indicates whether the contract type is an insurance policy or reinsurance contract and further indicates the type of insurance or reinsurance.",
                    "IsCedantContract": "boolean: indicates whether it is a cedant contract",
                    "IsProRataTemporis": "boolean: indicates whether it is pro rata temporis",
                    "CurrencyCode": "string: 3-digit currency code (e.g. USD)",
                    "FreeReinstatement": "string: indicates free reinstatement",
                    "PaidReinstatement": "number: paid reinstatement",
                    "WrittenShares": "number: written shares",
                    "AccountingOrganizationParty": {
                        "id": "number: ID of accounting organization party",
                        "name": "string: name of accounting organization party",
                        "uri": "string: unique resource identifier"
                    },
                    "AgentParty": {
                        "id": "number: ID of agent party",
                        "name": "string: name of agent party",
                        "uri": "string: unique resource identifier"
                    },
                    "BranchParty": {
                        "id": "number: ID of branch party",
                        "name": "string: name of branch party",
                        "uri": "string: unique resource identifier"
                    },
                    "BrokerParty": {
                        "id": "number: ID of broker party",
                        "name": "string: name of broker party",
                        "uri": "string: unique resource identifier"
                    },
                    "CostCenterParty": {
                        "id": "number: ID of cost center party",
                        "name": "string: name of cost center party",
                        "uri": "string: unique resource identifier"
                    },
                    "HubParty": {
                        "id": "number: ID of hub party",
                        "name": "string: name of hub party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsuredParty": {
                        "id": "number: ID of the insured party",
                        "name": "string: name of insured party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsurerParty": {
                        "id": "number: ID of the insurer party",
                        "name": "string: name of insurer party",
                        "uri": "string: unique resource identifier"
                    },
                    "LegalEntityParty": {
                        "id": "number: ID of the legal entity party",
                        "name": "string: name of legal entity party",
                        "uri": "string: unique resource identifier"
                    },
                    "OfficeParty": {
                        "id": "number: ID of the office party",
                        "name": "string: name of office party",
                        "uri": "string: unique resource identifier"
                    },
                    "ContractStatus": {
                        "Code": "string: status code",
                        "id": "number: contract ID",
                        "name": "string: name of contract status",
                        "uri": "string: unique resource identifier"
                    },
                    "ContractType": {
                        "ContractTypeCode": "string: contract type code",
                        "ContractTypeDescr": "string: contract type description",
                        "ContractTypeId": "number: ID of the contract type",
                        "ContractTypeName": "string: contract type name",
                        "ParentContractTypeID": "number: ID of the parent contract type",
                        "uri": "string: unique resource identifier"
                    },
                    "LineOfBusiness": {
                        "LineOfBusinessId": "number: ID of the line of business",
                        "LineOfBusinessName": "string: line of business name",
                        "uri": "string: unique resource identifier"
                    },
                    "MarketChannel": {
                        "MarketChannelID": "number: ID of the market channel",
                        "MarketChannelName": "string: market channel name",
                        "uri": "string: unique resource identifier"
                    },
                    "Program": {
                        "AsOfDate": "string: date and time of the latest program version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                        "Description": "string: program description",
                        "Id": "number: program ID",
                        "Name": "string: program name",
                        "Owner": "number: user ID of the creator",
                        "SourceId": "string: the ID of the external system to which the program is linked. Must be unique for import.",
                        "URI": "string: unique resource identifier",
                        "Version": "number: program version",
                        "AclTag": "string: ACL tag",
                        "isReinsurance": "boolean: indicates whether it is a reinsurance program",
                        "snapshotDate": "string: date and time of the latest snapshot in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                    },
                    "Underwriter": {
                        "FirstName": "string: first name of the underwriter",
                        "LastName": "string: last name of the underwriter",
                        "Id": "number: underwriter ID",
                        "IsActive": "boolean: indicates whether the underwriter is active",
                        "UnderwriterCode": "string: underwriter code",
                        "UpdateDate": "string: udpate date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                    },
                    "UnderwriterAccountParty": {
                        "ID": "number: underwriter account ID",
                        "Name": "string: underwriter account name",
                        "uri": "string: unique resource identifier"
                    },
                    "UserDefContractType": {
                        "ID": "number: user defined contract ID",
                        "Name": "string: user defined contract name",
                        "uri": "string: unique resource identifier"
                    }
                },
                {
                "id": "number: object ID",
                    "name": "string: the name of the contract. Cannot start with a number, cannot be blank or null.",
                    "aclTag": "string: ACL tag",
                    "CloneTypeId": "number: clone type ID",
                    "ClonedExposureId": "number: cloned exposure ID",
                    "UserDefinedTypeId": "number: user defined type ID",
                    "ClaimAdjustmentDeductibleName": "string: claim adjustment deductible name",
                    "ClaimAdjustmentSublimitName": "string: claim adjustment sublimit name",
                    "ProductName": "string: product name",
                    "PrimaryAccordOccupancyName": "string: primary accord occupancy name",
                    "Premium": "number: premium amount",
                    "ReinstatementsPremium": "number: reinstatements premium amount",
                    "ProductAsOfDateTime": "string: date and time of the latest product in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "CreateDateTime": "string: creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "ExpirationDateTime": "string: expiration date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "InceptionDateTime": "string: inception date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "RenewalDateTime": "string: renewal date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "SignedShares": "number: number of signed shares",
                    "ExposedParty": "number: user ID of the exposed party",
                    "whatIfTagList": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                    "ContractTypeIsInsurance": "boolean: indicates whether the contract type is an insurance policy or reinsurance contract and further indicates the type of insurance or reinsurance.",
                    "IsCedantContract": "boolean: indicates whether it is a cedant contract",
                    "IsProRataTemporis": "boolean: indicates whether it is pro rata temporis",
                    "CurrencyCode": "string: 3-digit currency code (e.g. USD)",
                    "ExpectedShares": "number: expected shares",
                    "FreeReinstatement": "string: indicates free reinstatement",
                    "PaidReinstatement": "number: paid reinstatement",
                    "WrittenShares": "number: written shares",
                    "AccountingOrganizationParty": {
                        "id": "number: ID of accounting organization party",
                        "name": "string: name of accounting organization party",
                        "uri": "string: unique resource identifier"
                    },
                    "AgentParty": {
                        "id": "number: ID of agent party",
                        "name": "string: name of agent party",
                        "uri": "string: unique resource identifier"
                    },
                    "BranchParty": {
                        "id": "number: ID of branch party",
                        "name": "string: name of branch party",
                        "uri": "string: unique resource identifier"
                    },
                    "BrokerParty": {
                        "id": "number: ID of broker party",
                        "name": "string: name of broker party",
                        "uri": "string: unique resource identifier"
                    },
                    "CostCenterParty": {
                        "id": "number: ID of cost center party",
                        "name": "string: name of cost center party",
                        "uri": "string: unique resource identifier"
                    },
                    "HubParty": {
                        "id": "number: ID of hub party",
                        "name": "string: name of hub party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsuredParty": {
                        "id": "number: ID of the insured party",
                        "name": "string: name of insured party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsurerParty": {
                        "id": "number: ID of the insurer party",
                        "name": "string: name of insurer party",
                        "uri": "string: unique resource identifier"
                    },
                    "LegalEntityParty": {
                        "id": "number: ID of the legal entity party",
                        "name": "string: name of legal entity party",
                        "uri": "string: unique resource identifier"
                    },
                    "OfficeParty": {
                        "id": "number: ID of the office party",
                        "name": "string: name of office party",
                        "uri": "string: unique resource identifier"
                    },
                    "ContractStatus": {
                        "Code": "string: status code",
                        "id": "number: contract ID",
                        "name": "string: name of contract status",
                        "uri": "string: unique resource identifier"
                    },
                    "ContractType": {
                        "ContractTypeCode": "string: contract type code",
                        "ContractTypeDescr": "string: contract type description",
                        "ContractTypeId": "number: ID of the contract type",
                        "ContractTypeName": "string: contract type name",
                        "ParentContractTypeID": "number: ID of the parent contract type",
                        "uri": "string: unique resource identifier"
                    },
                    "LineOfBusiness": {
                        "LineOfBusinessId": "number: ID of the line of business",
                        "LineOfBusinessName": "string: line of business name",
                        "uri": "string: unique resource identifier"
                    },
                    "MarketChannel": {
                        "MarketChannelID": "number: ID of the market channel",
                        "MarketChannelName": "string: market channel name",
                        "uri": "string: unique resource identifier"
                    },
                    "Program": {
                        "AsOfDate": "string: date and time of the latest program version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                        "Description": "string: program description",
                        "Id": "number: program ID",
                        "Name": "string: program name",
                        "Owner": "number: user ID of the creator",
                        "SourceId": "string: the ID of the external system to which the program is linked. Must be unique for import.",
                        "URI": "string: unique resource identifier",
                        "Version": "number: program version",
                        "AclTag": "string: ACL tag",
                        "isReinsurance": "boolean: indicates whether it is a reinsurance program",
                        "snapshotDate": "string: date and time of the latest snapshot in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                    },
                    "Underwriter": {
                        "FirstName": "string: first name of the underwriter",
                        "LastName": "string: last name of the underwriter",
                        "Id": "number: underwriter ID",
                        "IsActive": "boolean: indicates whether the underwriter is active",
                        "UnderwriterCode": "string: underwriter code",
                        "UpdateDate": "string: udpate date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                    },
                    "UnderwriterAccountParty": {
                        "ID": "number: underwriter account ID",
                        "Name": "string: underwriter account name",
                        "uri": "string: unique resource identifier"
                    },
                    "UserDefContractType": {
                        "ID": "number: user defined contract ID",
                        "Name": "string: user defined contract name",
                        "uri": "string: unique resource identifier"
                    }
                },
                {
                "id": "number: object ID",
                    "name": "string: the name of the contract. Cannot start with a number, cannot be blank or null.",
                    "aclTag": "string: ACL tag",
                    "CloneTypeId": "number: clone type ID",
                    "ClonedExposureId": "number: cloned exposure ID",
                    "UserDefinedTypeId": "number: user defined type ID",
                    "ClaimAdjustmentDeductibleName": "string: claim adjustment deductible name",
                    "ClaimAdjustmentSublimitName": "string: claim adjustment sublimit name",
                    "ProductName": "string: product name",
                    "PrimaryAccordOccupancyName": "string: primary accord occupancy name",
                    "Premium": "number: premium amount",
                    "ReinstatementsPremium": "number: reinstatements premium amount",
                    "ProductAsOfDateTime": "string: date and time of the latest product in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "ExpirationDateTime": "string: expiration date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "InceptionDateTime": "string: inception date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "RenewalDateTime": "string: renewal date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "SignedShares": "number: number of signed shares",
                    "ExposedParty": "number: user ID of the exposed party",
                    "whatIfTagList": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                    "ContractTypeIsInsurance": "boolean: indicates whether the contract type is an insurance policy or reinsurance contract and further indicates the type of insurance or reinsurance.",
                    "IsCedantContract": "boolean: indicates whether it is a cedant contract",
                    "IsProRataTemporis": "boolean: indicates whether it is pro rata temporis",
                    "CurrencyCode": "string: 3-digit currency code (e.g. USD)",
                    "ExpectedShares": "number: expected shares",
                    "FreeReinstatement": "string: indicates free reinstatement",
                    "PaidReinstatement": "number: paid reinstatement",
                    "WrittenShares": "number: written shares",
                    "AccountingOrganizationParty": {
                        "id": "number: ID of accounting organization party",
                        "name": "string: name of accounting organization party",
                        "uri": "string: unique resource identifier"
                    },
                    "AgentParty": {
                        "id": "number: ID of agent party",
                        "name": "string: name of agent party",
                        "uri": "string: unique resource identifierI"
                    },
                    "BranchParty": {
                        "id": "number: ID of branch party",
                        "name": "string: name of branch party",
                        "uri": "string: unique resource identifier"
                    },
                    "BrokerParty": {
                        "id": "number: ID of broker party",
                        "name": "string: name of broker party",
                        "uri": "string: unique resource identifier"
                    },
                    "CostCenterParty": {
                        "id": "number: ID of cost center party",
                        "name": "string: name of cost center party",
                        "uri": "string: unique resource identifier"
                    },
                    "HubParty": {
                        "id": "number: ID of hub party",
                        "name": "string: name of hub party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsuredParty": {
                        "id": "number: ID of the insured party",
                        "name": "string: name of insured party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsurerParty": {
                        "id": "number: ID of the insurer party",
                        "name": "string: name of insurer party",
                        "uri": "string: unique resource identifier"
                    },
                    "LegalEntityParty": {
                        "id": "number: ID of the legal entity party",
                        "name": "string: name of legal entity party",
                        "uri": "string: unique resource identifier"
                    },
                    "OfficeParty": {
                        "id": "number: ID of the office party",
                        "name": "string: name of office party",
                        "uri": "string: unique resource identifier"
                    },
                    "ContractStatus": {
                        "Code": "string: status code",
                        "id": "number: contract ID",
                        "name": "string: name of contract status",
                        "uri": "string: unique resource identifier"
                    },
                    "ContractType": {
                        "ContractTypeCode": "string: contract type code",
                        "ContractTypeDescr": "string: contract type description",
                        "ContractTypeId": "number: ID of the contract type",
                        "ContractTypeName": "string: contract type name",
                        "ParentContractTypeID": "number: ID of the parent contract type",
                        "uri": "string: unique resource identifier"
                    },
                    "LineOfBusiness": {
                        "LineOfBusinessId": "number: ID of the line of business",
                        "LineOfBusinessName": "string: line of business name",
                        "uri": "string: unique resource identifier"
                    },
                    "MarketChannel": {
                        "MarketChannelID": "number: ID of the market channel",
                        "MarketChannelName": "string: market channel name",
                        "uri": "string: unique resource identifier"
                    },
                    "Program": {
                        "AsOfDate": "string: date and time of the latest program version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                        "Description": "string: program description",
                        "Id": "number: program ID",
                        "Name": "string: program name",
                        "Owner": "number: user ID of the creator",
                        "SourceId": "string: the ID of the external system to which the program is linked. Must be unique for import.",
                        "URI": "string: unique resource identifier",
                        "Version": "number: program version",
                        "AclTag": "string: ACL tag",
                        "isReinsurance": "boolean: indicates whether it is a reinsurance program",
                        "snapshotDate": "string: date and time of the latest snapshot in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                    },
                    "Underwriter": {
                        "FirstName": "string: first name of the underwriter",
                        "LastName": "string: last name of the underwriter",
                        "Id": "number: underwriter ID",
                        "IsActive": "boolean: indicates whether the underwriter is active",
                        "UnderwriterCode": "string: underwriter code",
                        "UpdateDate": "string: udpate date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                    },
                    "UnderwriterAccountParty": {
                        "ID": "number: underwriter account ID",
                        "Name": "string: underwriter account name",
                        "uri": "string: unique resource identifier"
                    },
                    "UserDefContractType": {
                        "ID": "number: user defined contract ID",
                        "Name": "string: user defined contract name",
                        "uri": "string: unique resource identifier"
                    }
                }
            ]
            "Count": "number - total number of contracts that match"
        }

    ```

## contracts [/services/v1/ExposureService/Programs/{id}/Contracts/{?accountingOrganizationPartyName, aclTag, agentParty, branchParty, brokerParty, claimAdjustmentDeductibleName, claimAdjustmentSublimitName, clonedExposureId, cloneTypeId, contractStatus, contractType, contractTypeIsInsurance, contractSubjects, costCenterParty, createDateTime, createUserId, currencyCode, expectedShares, exposedParty, expirationDateTime, exposureId, exposureNumber, freeReinstatement, hubParty, id, inceptionDate, insuredParty, insurerParty, isCedantContract, isProRataTemporis, legalEntityParty, limit, lineOfBusiness, marketChannel, name, officeParty, offset, paidReinstatement, premium, primaryAccordOccupancyName, producerParty, productId, productName, productAsOfDateTime, program, reinstatementsPremium, renewalDate, signedShares, underwriterPartyName, underwritingAccountParty, userDefContractType, whatIfName, writtenShares}]
### GET Contracts by Program [GET]
A nested contract request that returns a list of contracts specified by a program. Supports standard filters, for example number of records to return per page and sorting.

+ Parameters
    + accountingOrganizationPartyName (string: id|name|uri, optional) ... Accounting organization.
    + aclTag (string, optional)... Additional access control list.
    + agentParty (string: id|name|uri, optional) ... Agent party.
    + branchParty (string: id|name|uri, optional) ... Branch.
    + brokerParty (string: id|name|uri, optional) ... Broker.
    + claimAdjustmentDeductibleName (string, optional) ... Name of the claim adjustment deductible.
    + claimAdjustmentSublimitName (string, optional) ... Name of the claim adjustment sublimit.    
    + clonedExposureId (long, optional) ... Cloned exposure ID.
    + cloneTypeId (integer, optional) ... Clone type ID.
    + contractStatus (string: id|name|code, optional) ... Contract status.
    + contractType (String: Id|Name|Descr|parentID, optional ) ... Contract type. The contractType data type contains contract parameters such as contract name and ID and supported contract types.
    + contractTypeIsInsurance (boolean, optional) ... Indicates whether the contract is an insurance.
    + costCenterParty (string: id|name|uri, optional) ...  Cost Center.
    + createDate (string, optional) ... Date and time of contract creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
    + createUserId (string, optional) ... User ID.
    + currencyCode (string, optional) ... Currency code. 
    + expirationDate (string: datetime) ... Expiration date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
    + exposedParty (string: id|name|uri, optional) ... User ID of the exposed party.
    + expectedShares (double, optional) ... Expected shares.   
    + exposureId (integer, optional) ... Exposure ID.
    + exposureNumber (string, optional) ... User-defined exposure ID.
    + freeReinstatement (integer, optional) ... Free reinstatement.
    + hubParty (string: id|name|uri, optional) ... Hub.
    + id (integer, optional) ... Comma-separated list of contract IDs.
    + inceptionDate (string: datetime) ... Incpeption date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
    + insuredParty (string: id|name|uri) ... Insured.
    + insurerParty (string: id|name|uri) ... Insurer.
    + isCedantContract (boolean, optional) ... Indicates whether this instance is a cedant contract. 
    + isProRataTemporis (boolean, optional) ... Indicates whether this instance is pro rata temporis.
    + legalEntityParty (string: id|name|uri, optional) ... Legal entity.
    + limit (number, optional) ... Number of records to return per page.
    + lineOfBusiness (string: groupId|groupName|uri, optional) ... Line of business.
    + marketChannel (string: id|name|uri, optional) ... Market channel.
    + name (string) ... Comma-separated list of contract names. Cannot start with a number, cannot be blank or null.
    + officeParty (string: id|name|uri, optional) ... Office.
    + offset (number, optional) ... Returns results starting with this record number (0-based).
    + paidReinstatement (integer, optional) ... Paid reinstatement.  
    + premium (double, optional) ... Total premium.
    + primaryAccordOccupancyName (string, optional) ... Name of the primary accord occupancy.
    + productAsOfDateTime (string: datetime, optional) ... Returns contract versions older than this date, specified in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.    
    + producerParty ( string: id|name|uri, optional) ... Producer.
    + productId  (number, optional) ... Product Id.    
    + productName (string, optional) ... Product name.
    + program (string, optional) ... Program.
    + reinstatementsPremium (double, optional) ... Reinstatements premium.   
    + renewalDate (string:datetime, optional) ... Renewal date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
    + signedShares (double, optional) ... Signe shares.
    + underwriterPartyName (string: id|name|uri, optional) ... Underwriter.
    + underwritingAccountParty (string: id|name|uri, optional) ... Underwriter account.
    + userDefContractType (string: id|name|uri, optional) ... User-defined contract ID.
    + whatIfName (string: id|name|description, optional) ... "What if" tag list.
    + writtenShares (double, optional) ... Written shares.

+ Response 200

    ```js
        { 
            "contracts": [
                {
                    "id": "number: object ID",
                    "uri": "string: unique resource identifier",
                    "name": "string: the name of the contract. Cannot start with a number, cannot be blank or null.",
                    "aclTag": "string: ACL tag",
                    "CloneTypeId": "number: clone type ID",
                    "ClonedExposureId": "number: cloned exposure ID",
                    "UserDefinedTypeId": "number: user defined type ID",
                    "ClaimAdjustmentDeductibleName": "string: claim adjustment deductible name",
                    "ClaimAdjustmentSublimitName": "string: claim adjustment sublimit name",
                    "ProductName": "string: product name",
                    "PrimaryAccordOccupancyName": "string: primary accord occupancy name",
                    "Premium": "number: premium amount",
                    "ReinstatementsPremium": "number: reinstatements premium amount",
                    "ProductAsOfDateTime": "string: date and time of the latest product in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "CreateDateTime": "string: creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "ExpirationDateTime": "string: expiration date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "InceptionDateTime": "string: inception date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "RenewalDateTime": "string: renewal date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "SignedShares": "number: number of signed shares",
                    "ExposedParty": "number: user ID of the":  exposed party",
                    "whatIfTagList": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                    "ContractTypeIsInsurance": "boolean: indicates whether the contract type is an insurance policy or reinsurance contract and further indicates the type of insurance or reinsurance.",
                    "IsCedantContract": "boolean: indicates whether it is a cedant contract",
                    "IsProRataTemporis": "boolean: indicates whether it is pro rata temporis",
                    "CurrencyCode": "string: 3-digit currency code (e.g. USD)",
                    "FreeReinstatement": "string: indicates free reinstatement",
                    "PaidReinstatement": "number: paid reinstatement",
                    "WrittenShares": "number: written shares",
                    "AccountingOrganizationParty": {
                        "id": "number: ID of accounting organization party",
                        "name": "string: name of accounting organization party",
                        "uri": "string: unique resource identifier"
                    },
                    "AgentParty": {
                        "id": "number: ID of agent party",
                        "name": "string: name of agent party",
                        "uri": "string: unique resource identifier"
                    },
                    "BranchParty": {
                        "id": "number: ID of branch party",
                        "name": "string: name of branch party",
                        "uri": "string: unique resource identifier"
                    },
                    "BrokerParty": {
                        "id": "number: ID of broker party",
                        "name": "string: name of broker party",
                        "uri": "string: unique resource identifier"
                    },
                    "CostCenterParty": {
                        "id": "number: ID of cost center party",
                        "name": "string: name of cost center party",
                        "uri": "string: unique resource identifier"
                    },
                    "HubParty": {
                        "id": "number: ID of hub party",
                        "name": "string: name of hub party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsuredParty": {
                        "id": "number: ID of the insured party",
                        "name": "string: name of insured party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsurerParty": {
                        "id": "number: ID of the insurer party",
                        "name": "string: name of insurer party",
                        "uri": "string: unique resource identifier"
                    },
                    "LegalEntityParty": {
                        "id": "number: ID of the legal entity party",
                        "name": "string: name of legal entity party",
                        "uri": "string: unique resource identifier"
                    },
                    "OfficeParty": {
                        "id": "number: ID of the office party",
                        "name": "string: name of office party",
                        "uri": "string: unique resource identifier"
                    },
                    "ContractStatus": {
                        "Code": "string: status code",
                        "id": "number: contract ID",
                        "name": "string: name of contract status",
                        "uri": "string: unique resource identifier"
                    },
                    "ContractType": {
                        "ContractTypeCode": "string: contract type code",
                        "ContractTypeDescr": "string: contract type description",
                        "ContractTypeId": "number: ID of the contract type",
                        "ContractTypeName": "string: contract type name",
                        "ParentContractTypeID": "number: ID of the parent contract type",
                        "uri": "string: unique resource identifier"
                    },
                    "LineOfBusiness": {
                        "LineOfBusinessId": "number: ID of the line of business",
                        "LineOfBusinessName": "string: line of business name",
                        "uri": "string: unique resource identifier"
                    },
                    "MarketChannel": {
                        "MarketChannelID": "number: ID of the market channel",
                        "MarketChannelName": "string: market channel name",
                        "uri": "string: unique resource identifier"
                    },
                    "Program": {
                        "AsOfDate": "string: date and time of the latest program version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                        "Description": "string: program description",
                        "Id": "number: program ID",
                        "Name": "string: program name",
                        "Owner": "number: user ID of the creator",
                        "SourceId": "string: the ID of the external system to which the program is linked. Must be unique for import.",
                        "URI": "string: unique resource identifier",
                        "Version": "number: program version",
                        "AclTag": "string: ACL tag",
                        "isReinsurance": "boolean: indicates whether it is a reinsurance program",
                        "snapshotDate": "string: date and time of the latest snapshot in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                    },
                    "Underwriter": {
                        "FirstName": "string: first name of the underwriter",
                        "LastName": "string: last name of the underwriter",
                        "Id": "number: underwriter ID",
                        "IsActive": "boolean: indicates whether the underwriter is active",
                        "UnderwriterCode": "string: underwriter code",
                        "UpdateDate": "string: udpate date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                    },
                    "UnderwriterAccountParty": {
                        "ID": "number: underwriter account ID",
                        "Name": "string: underwriter account name",
                        "uri": "string: unique resource identifier"
                    },
                    "UserDefContractType": {
                        "ID": "number: user defined contract ID",
                        "Name": "string: user defined contract name",
                        "uri": "string: unique resource identifier"
                    }
                },
                {
                "id": "number: object ID",
                    "name": "string: the name of the contract. Cannot start with a number, cannot be blank or null.",
                    "aclTag": "string: ACL tag",
                    "CloneTypeId": "number: clone type ID",
                    "ClonedExposureId": "number: cloned exposure ID",
                    "ClaimAdjustmentDeductibleName": "string: claim adjustment deductible name",
                    "ClaimAdjustmentSublimitName": "string: claim adjustment sublimit name",
                    "ProductId": "number: product ID",
                    "PrimaryAccordOccupancyName": "string: primary accord occupancy name",
                    "Premium": "number: premium amount",
                    "ReinstatementsPremium": "number: reinstatements premium amount",
                    "ProductAsOfDateTime": "string: date and time of the latest product in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "CreateDateTime": "string: creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "ExpirationDateTime": "string: expiration date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "InceptionDateTime": "string: inception date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "RenewalDateTime": "string: renewal date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "SignedShares": "number: number of signed shares",
                    "ExposedParty": "number: user ID of the exposed party",
                    "whatIfTagList": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                    "ContractTypeIsInsurance": "boolean: indicates whether the contract type is an insurance policy or reinsurance contract and further indicates the type of insurance or reinsurance.",
                    "IsCedantContract": "boolean: indicates whether it is a cedant contract",
                    "IsProRataTemporis": "boolean: indicates whether it is pro rata temporis",
                    "CurrencyCode": "string: 3-digit currency code (e.g. USD)",
                    "ExpectedShares": "number: expected shares",
                    "FreeReinstatement": "string: indicates free reinstatement",
                    "PaidReinstatement": "number: paid reinstatement",
                    "WrittenShares": "number: written shares",
                    "AccountingOrganizationParty": {
                        "id": "number: ID of accounting organization party",
                        "name": "string: name of accounting organization party",
                        "uri": "string: unique resource identifier"
                    },
                    "AgentParty": {
                        "id": "number: ID of agent party",
                        "name": "string: name of agent party",
                        "uri": "string: unique resource identifier"
                    },
                    "BranchParty": {
                        "id": "number: ID of branch party",
                        "name": "string: name of branch party",
                        "uri": "string: unique resource identifier"
                    },
                    "BrokerParty": {
                        "id": "number: ID of broker party",
                        "name": "string: name of broker party",
                        "uri": "string: unique resource identifier"
                    },
                    "CostCenterParty": {
                        "id": "number: ID of cost center party",
                        "name": "string: name of cost center party",
                        "uri": "string: unique resource identifier"
                    },
                    "HubParty": {
                        "id": "number: ID of hub party",
                        "name": "string: name of hub party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsuredParty": {
                        "id": "number: ID of the insured party",
                        "name": "string: name of insured party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsurerParty": {
                        "id": "number: ID of the insurer party",
                        "name": "string: name of insurer party",
                        "uri": "string: unique resource identifier"
                    },
                    "LegalEntityParty": {
                        "id": "number: ID of the legal entity party",
                        "name": "string: name of legal entity party",
                        "uri": "string: unique resource identifier"
                    },
                    "OfficeParty": {
                        "id": "number: ID of the office party",
                        "name": "string: name of office party",
                        "uri": "string: unique resource identifier"
                    },
                    "ContractStatus": {
                        "Code": "string: status code",
                        "id": "number: contract ID",
                        "name": "string: name of contract status",
                        "uri": "string: unique resource identifier"
                    },
                    "ContractType": {
                        "ContractTypeCode": "string: contract type code",
                        "ContractTypeDescr": "string: contract type description",
                        "ContractTypeId": "number: ID of the contract type",
                        "ContractTypeName": "string: contract type name",
                        "ParentContractTypeID": "number: ID of the parent contract type",
                        "uri": "string: unique resource identifier"
                    },
                    "LineOfBusiness": {
                        "LineOfBusinessId": "number: ID of the line of business",
                        "LineOfBusinessName": "string: line of business name",
                        "uri": "string: unique resource identifier"
                    },
                    "MarketChannel": {
                        "MarketChannelID": "number: ID of the market channel",
                        "MarketChannelName": "string: market channel name",
                        "uri": "string: unique resource identifier"
                    },
                    "Program": {
                        "AsOfDate": "string: date and time of the latest program version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                        "Description": "string: program description",
                        "Id": "number: program ID",
                        "Name": "string: program name",
                        "Owner": "number: user ID of the creator",
                        "SourceId": "string: the ID of the external system to which the program is linked. Must be unique for import.",
                        "URI": "string: unique resource identifier",
                        "Version": "number: program version",
                        "AclTag": "string: ACL tag",
                        "isReinsurance": "boolean: indicates whether it is a reinsurance program",
                        "snapshotDate": "string: date and time of the latest snapshot in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                    },
                    "Underwriter": {
                        "FirstName": "string: first name of the underwriter",
                        "LastName": "string: last name of the underwriter",
                        "Id": "number: underwriter ID",
                        "IsActive": "boolean: indicates whether the underwriter is active",
                        "UnderwriterCode": "string: underwriter code",
                        "UpdateDate": "string: udpate date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                    },
                    "UnderwriterAccountParty": {
                        "ID": "number: underwriter account ID",
                        "Name": "string: underwriter account name",
                        "uri": "string: unique resource identifierI"
                    },
                    "UserDefContractType": {
                        "ID": "number: user defined contract ID",
                        "Name": "string: user defined contract name",
                        "uri": "string: unique resource identifier"
                    }
                },
                {
                "id": "number: object ID",
                    "name": "string: the name of the contract. Cannot start with a number, cannot be blank or null.",
                    "aclTag": "string: ACL tag",
                    "CloneTypeId": "number: clone type ID",
                    "ClonedExposureId": "number: cloned exposure ID",
                    "ClaimAdjustmentDeductibleName": "string: claim adjustment deductible name",
                    "ClaimAdjustmentSublimitName": "string: claim adjustment sublimit name",
                    "ProductId": "number: product ID",
                    "PrimaryAccordOccupancyName": "string: primary accord occupancy name",
                    "Premium": "number: premium amount",
                    "ReinstatementsPremium": "number: reinstatements premium amount",
                    "ProductAsOfDateTime": "string: date and time of the latest product in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "ExpirationDateTime": "string: expiration date and timeYYYYMMDDThh:mm:ss:sssZ in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "InceptionDateTime": "string: inception date abd time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "RenewalDateTime": "string: renewal date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "SignedShares": "number: number of signed shares",
                    "ExposedParty": "number: user ID of the exposed party",
                    "whatIfTagList": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                    "ContractTypeIsInsurance": "boolean: indicates whether the contract type is an insurance policy or reinsurance contract and further indicates the type of insurance or reinsurance.",
                    "IsCedantContract": "boolean: indicates whether it is a cedant contract",
                    "IsProRataTemporis": "boolean: indicates whether it is pro rata temporis",
                    "CurrencyCode": "string: 3-digit currency code (e.g. USD)",
                    "ExpectedShares": "number: expected shares",
                    "FreeReinstatement": "string: indicates free reinstatement",
                    "PaidReinstatement": "number: paid reinstatement",
                    "WrittenShares": "number: written shares",
                    "AccountingOrganizationParty": {
                        "id": "number: ID of accounting organization party",
                        "name": "string: name of accounting organization party",
                        "uri": "string: unique resource identifier"
                    },
                    "AgentParty": {
                        "id": "number: ID of agent party",
                        "name": "string: name of agent party",
                        "uri": "string: unique resource identifier"
                    },
                    "BranchParty": {
                        "id": "number: ID of branch party",
                        "name": "string: name of branch party",
                        "uri": "string: unique resource identifier"
                    },
                    "BrokerParty": {
                        "id": "number: ID of broker party",
                        "name": "string: name of broker party",
                        "uri": "string: unique resource identifier"
                    },
                    "CostCenterParty": {
                        "id": "number: ID of cost center party",
                        "name": "string: name of cost center party",
                        "uri": "string: unique resource identifier"
                    },
                    "HubParty": {
                        "id": "number: ID of hub party",
                        "name": "string: name of hub party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsuredParty": {
                        "id": "number: ID of the insured party",
                        "name": "string: name of insured party",
                        "uri": "string: unique resource identifier"
                    },
                    "InsurerParty": {
                        "id": "number: ID of the insurer party",
                        "name": "string: name of insurer party",
                        "uri": "string: unique resource identifier"
                    },
                    "LegalEntityParty": {
                        "id": "number: ID of the legal entity party",
                        "name": "string: name of legal entity party",
                        "uri": "string: unique resource identifier"
                    },
                    "OfficeParty": {
                        "id": "number: ID of the office party",
                        "name": "string: name of office party",
                        "uri": "string: unique resource identifier"
                    },
                    "ContractStatus": {
                        "Code": "string: status code",
                        "id": "number: contract ID",
                        "name": "string: name of contract status",
                        "uri": "string: unique resource identifier"
                    },
                    "ContractType": {
                        "ContractTypeCode": "string: contract type code",
                        "ContractTypeDescr": "string: contract type description",
                        "ContractTypeId": "number: ID of the contract type",
                        "ContractTypeName": "string: contract type name",
                        "ParentContractTypeID": "number: ID of the parent contract type",
                        "uri": "string: unique resource identifier"
                    },
                    "LineOfBusiness": {
                        "LineOfBusinessId": "number: ID of the line of business",
                        "LineOfBusinessName": "string: line of business name",
                        "uri": "string: unique resource identifier"
                    },
                    "MarketChannel": {
                        "MarketChannelID": "number: ID of the market channel",
                        "MarketChannelName": "string: market channel name",
                        "uri": "string: unique resource identifier"
                    },
                    "Program": {
                        "AsOfDate": "string: date and time of the latest program version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                        "Description": "string: program description",
                        "Id": "number: program ID",
                        "Name": "string: program name",
                        "Owner": "number: user ID of the creator",
                        "SourceId": "string: the ID of the external system to which the program is linked. Must be unique for import.",
                        "URI": "string: unique resource identifier",
                        "Version": "number: program version",
                        "AclTag": "string: ACL tag",
                        "isReinsurance": "boolean: indicates whether it is a reinsurance program",
                        "snapshotDate": "string: date and time of the latest snapshot in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                    },
                    "Underwriter": {
                        "FirstName": "string: first name of the underwriter",
                        "LastName": "string: last name of the underwriter",
                        "Id": "number: underwriter ID",
                        "IsActive": "boolean: indicates whether the underwriter is active",
                        "UnderwriterCode": "string: underwriter code",
                        "UpdateDate": "string: udpate date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                    },
                    "UnderwriterAccountParty": {
                        "ID": "number: underwriter account ID",
                        "Name": "string: underwriter account name",
                        "uri": "string: unique resource identifier"
                    },
                    "UserDefContractType": {
                        "ID": "number: user defined contract ID",
                        "Name": "string: user defined contract name",
                        "uri": "string: unique resource identifier"
                    }
                }
            ]
            "Count": "number - total number of contracts that match"
        }

    ```



## contracts [/services/v1/ExposureService/Contracts]

### POST contracts [POST]
Creates a contract.

+ Request

    ```js
        { 
            "contractInput": {
                "name": "string: the name of the contract. Cannot start with a number, cannot be blank or null.",
                "description": "string",
                "sourceId": "string: the ID of the external system to which the contract is linked. Must be unique for import.",
                "schedule": {
                    "id": "number: ID of existing schedule",
                    "version": "number: schedule version"
                },
                "cdl": "string: Contract definition language information that contains information about the contract, such as type, limits, or currencycode.",
                "declarations":  [
                    "key1": "string: value1",
                    "key2": "string: value2",
                    "key3": "string: value3"
                ]
            }
        }

    ```

+ Response 201
    
    ```js
        { 
            "contract": {
                "id": "number: object ID",
                "uri": "string: unique resource identifier",
                "name": "string: the name of the contract. Cannot start with a number, cannot be blank or null.",
                "description": "string",
                "Number": "string: contract number",
                "RevisionLabel": "string: contract revision label",
                "aclTag": "string: ACL tag",
                "CloneTypeId": "number: clone type ID",
                "ClonedExposureId": "number: cloned exposure ID",
                "UserDefinedTypeId": "number: user defined type ID",
                "AttachmentBasisID": "number: attachment basis ID",
                "AttachmentLevelID": "number: attachment level ID",
                "ClaimAdjustmentDeductibleID": "number: claim adjustment deductible ID",
                "ClaimAdjustmentDeductibleName": "string: claim adjustment deductible name",
                "ClaimAdjustmentSublimitID": "number: claim adjustment sublimit ID",
                "ClaimAdjustmentSublimitName": "string: claim adjustment sublimit name",
                "PositionStructureID": "number: position structure ID",
                "ProductId": "number: product ID",
                "UpdateUserID": "number: update user ID",
                "PrimaryAccordOccupancyId": "number: primary accord occupancy ID",
                "PrimaryAccordOccupancyName": "string: primary accord occupancy name",
                "Premium": "number: premium amount",
                "ReinstatementsPremium": "number: reinstatements premium amount",
                "ReinstatementsPremiumRank": "number: reinstatements premium rank",
                "ContractCount": "number: contract count",
                "RiskItemCount": "number: risk item count",
                "NumberOfRiskItems": "number: number of risk items",
                "NumberOfUnits": "number: number of units",
                "asOfDateTime": "string: date and time of the latest contract version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "ProductAsOfDateTime": "string: date and time of the latest product in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "ClonedExposureAsOfDateTime": "string: date and time of the cloned exposure in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "CreateDateTime": "string: creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "ExpirationDateTime": "string: expiration date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "InceptionDateTime": "string: inception date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "RenewalDateTime": "string: renewal date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "RenewalProbabilityPercent": "number: renewal probability (percentage)",
                "SignedShares": "number: number of signed shares",
                "ExposedParty": "number: user ID of the exposed party",
                "ImportSet": "string: the import set ID",
                "Subschedules": "string: list of subschedules",
                "SyndicateParty": "string: syndicate party",
                "TerminationBasisID": "number: termination basis ID",
                "Jurisdiction": "string: jurisdiction",
                "whatIfTagList": "string: all contracts satisfying this will be included in the portfolio. The tag is used to perform sensitivity tests and evaluate options for the purpose of making an optimal selection of risk.",
                "Owner": "number: user ID of the creator",
                "ContentsTotalInsuredValue": "number: total insured value of the contents",
                "BuildingTotalInsuredValue": "number: total insured value of the building",
                "BusinessInteruptionTotalInsuredValue": "number: total insured value for business interruption",
                "TotalInsuredValue": "number: total insured value",
                "ContractTypeIsInsurance": "boolean: indicates whether the contract type is an insurance policy or reinsurance contract and further indicates the type of insurance or reinsurance.",
                "IsCedantContract": "boolean: indicates whether it is a cedant contract",
                "IsProRataTemporis": "boolean: indicates whether it is pro rata temporis",
                "IsRenewal": "boolean: indicates whether it is a renewal",
                "CurrencyCode": "string: 3-digit currency code (e.g. USD)",
                "PremiumCurrencyCode": "string: 3-digit currency code (e.g. USD)",
                "ExpectedShares": "number: expected shares",
                "FallBackNotionalLimit": "number: fallback notional limit",
                "FreeReinstatement": "string: indicates free reinstatement",
                "PaidReinstatement": "number: paid reinstatement",
                "WrittenShares": "number: written shares",
                "AccountingOrganizationParty": {
                    "id": "number: ID of accounting organization party",
                    "name": "string: name of accounting organization party",
                    "uri": "string: unique resource identifier"
                },
                "AgentParty": {
                    "id": "number: ID of agent party",
                    "name": "string: name of agent party",
                    "uri": "string: unique resource identifier"
                },
                "BranchParty": {
                    "id": "number: ID of branch party",
                    "name": "string: name of branch party",
                    "uri": "string: unique resource identifier"
                },
                "BrokerParty": {
                    "id": "number: ID of broker party",
                    "name": "string: name of broker party",
                    "uri": "string: unique resource identifier"
                },
                "CostCenterParty": {
                    "id": "number: ID of cost center party",
                    "name": "string: name of cost center party",
                    "uri": "string: unique resource identifier"
                },
                "GroupParty": {
                    "id": "number: ID of group party",
                    "name": "string: name of group party",
                    "uri": "string: unique resource identifier"
                },
                "HubParty": {
                    "id": "number: ID of hub party",
                    "name": "string: name of hub party",
                    "uri": "string: unique resource identifier"
                },
                "InsuredParty": {
                    "id": "number: ID of the insured party",
                    "name": "string: name of insured party",
                    "uri": "string: unique resource identifier"
                },
                "InsurerParty": {
                    "id": "number: ID of the insurer party",
                    "name": "string: name of insurer party",
                    "uri": "string: unique resource identifier"
                },
                "LegalEntityParty": {
                    "id": "number: ID of the legal entity party",
                    "name": "string: name of legal entity party",
                    "uri": "string: unique resource identifier"
                },
                "OfficeParty": {
                    "id": "number: ID of the office party",
                    "name": "string: name of office party",
                    "uri": "string: unique resource identifier"
                },
                "ProducerParty": {
                    "id": "number: ID of the producer party",
                    "name": "string: name of producer party",
                    "uri": "string: ounique resource identifier"
                },
                "ContractStatus": {
                    "Code": "string: status code",
                    "id": "number: contract ID",
                    "name": "string: name of contract status",
                    "uri": "string: unique resource identifier"
                },
                "ContractSubjects": { 
                    [
                        "AccountId": "number: account ID",
                        "AccountName": "string: account name",
                        "CededContractIds": "number: ceded contract IDs",
                        "InuringContractFilterEql": "string: inuring contract filter",
                        "InuringContractFilterId": "number: inuring contract filter ID",
                        "InuringContractFilterName": "string: inuring contract filter name",
                        "IsInuringContractFac": "boolean: is inuring contract",
                        "IsInuringContractPerRisk": "boolean: is inuring contract per risk",
                        "LossScaling": "number: loss scaling",
                        "Name": "string: name of contract subject",
                        "SubjectExposureId": "number: subject exposure ID",
                        "SubjectExposureName": "string: subject exposure name",
                        "SubjectExposureType": "number: subject exposure type",
                        "SubjectFilterEql": "string: subject filter",
                        "SubjectFilterId": "number: subject filter ID",
                        "SubjectFilterName": "string: subject filter name",
                        "UILabel": "string: UI label"
                    ],
                    [
                        "AccountId": "number: account ID",
                        "AccountName": "string: account name",
                        "CededContractIds": "number: ceded contract IDs",
                        "InuringContractFilterEql": "string: inuring contract filter",
                        "InuringContractFilterId": "number: inuring contract filter ID",
                        "InuringContractFilterName": "string: inuring contract filter name",
                        "IsInuringContractFac": "boolean: is inuring contract",
                        "IsInuringContractPerRisk": "boolean: is inuring contract per risk",
                        "LossScaling": "number: loss scaling",
                        "Name": "string: name of contract subject",
                        "SubjectExposureId": "number: subject exposure ID",
                        "SubjectExposureName": "string: subject exposure name",
                        "SubjectExposureType": "number: subject exposure type",
                        "SubjectFilterEql": "string: subject filter",
                        "SubjectFilterId": "number: subject filter ID",
                        "SubjectFilterName": "string: subject filter name",
                        "UILabel": "string: UI label"
                    ],
                    [
                        "AccountId": "number: account ID",
                        "AccountName": "string: account name",
                        "CededContractIds": "number: ceded contract IDs",
                        "InuringContractFilterEql": "string: inuring contract filter",
                        "InuringContractFilterId": "number: inuring contract filter ID",
                        "InuringContractFilterName": "string: inuring contract filter name",
                        "IsInuringContractFac": "boolean: is inuring contract",
                        "IsInuringContractPerRisk": "boolean: is inuring contract per risk",
                        "LossScaling": "number: loss scaling",
                        "Name": "string: name of contract subject",
                        "SubjectExposureId": "number: subject exposure ID",
                        "SubjectExposureName": "string: subject exposure name",
                        "SubjectExposureType": "number: subject exposure type",
                        "SubjectFilterEql": "string: subject filter",
                        "SubjectFilterId": "number: subject filter ID",
                        "SubjectFilterName": "string: subject filter name",
                        "UILabel": "string: UI label"
                    ]
                },
                "ContractType": {
                    "ContractTypeCode": "string: contract type code",
                    "ContractTypeDescr": "string: contract type description",
                    "ContractTypeId": "number: ID of the contract type",
                    "ContractTypeName": "string: contract type name",
                    "ParentContractTypeID": "number: ID of the parent contract type",
                    "uri": "string: unique resource identifier"
                },
                "LineOfBusiness": {
                    "LineOfBusinessId": "number: ID of the line of business",
                    "LineOfBusinessName": "string: line of business name",
                    "uri": "string: unique resource identifier"
                },
                "LineOfBusinessGroup": {
                    "LineOfBusinessGroupId": "number: ID of the line of business group",
                    "LineOfBusinessGroupName": "string: line of business group name",
                    "uri": "string: unique resource identifier"
                },
                "MarketChannel": {
                    "MarketChannelID": "number: ID of the market channel",
                    "MarketChannelName": "string: market channel name",
                    "uri": "string: unique resource identifier"
                },
                "Program": {
                    "AsOfDate": "string: date and time of the latest program version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "Description": "string: program description",
                    "Id": "number: program ID",
                    "Name": "string: program name",
                    "Owner": "number: user ID of the creator",
                    "SourceId": "string: the ID of the external system to which the program is linked. Must be unique for import.",
                    "URI": "string: unique resource identifier",
                    "Version": "number: program version",
                    "AclTag": "string: ACL tag",
                    "isReinsurance": "boolean: indicates whether it is a reinsurance program",
                    "snapshotDate": "string: date and time of the latest snapshot in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                },
                "Underwriter": {
                    "FirstName": "string: first name of the underwriter",
                    "LastName": "string: last name of the underwriter",
                    "Id": "number: underwriter ID",
                    "IsActive": "boolean: indicates whether the underwriter is active",
                    "UnderwriterCode": "string: underwriter code",
                    "UpdateDate": "string: udpate date and  time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                },
                "UnderwriterAccountParty": {
                    "ID": "number: underwriter account ID",
                    "Name": "string: underwriter account name",
                    "uri": "string: unique resource identifier"
                },
                "UserDefContractType": {
                    "ID": "number: user defined contract ID",
                    "Name": "string: user defined contract name",
                    "uri": "string: unique resource identifier"
                },
                "CDLContract": {
                    "CDLString": "string: CDL information",
                    "uri": "string: /contracts/{id}/cdl"
                }
            }
        }
    ```

## Product [/services/v1/ExposureService/products/{id}]

A Product denotes a class of contracts that share a common template for specification of covers, terms, and conditions. You can group products into families of products. Use aliases to view similar products as one when different products are required solely to meet jurisdictional rate filing requirements. A product is not an exposure but a type of contract (a template with no contract subject exposure) that you can use to create other contracts.

+ product Model (application/json)
    
    ```js
        { 
            "product": {
                        "asOf": "string: date and time of the latest version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                        "cdl": {
                            "CDLString": "string: CDL information",
                            "URI": "string: unique resource identifier",
                            }
                        },
                        "ContractTypeId": "number: contract type ID",                
                        "Created": "string: creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                        "Description": "string: product description",
                        "Id": "number: product ID",
                        "Name": "string: unique product name",
                        "Owner": "number: user ID of the creator",
                        "ProductSchemeId": "number: product scheme ID",
                        "SourceId": "string: the ID of the external system to which the product is linked",
                        },
                }
        }

    ```

### GET product [GET]
Returns the specified product.

+ Response 200
    
    [product][]


### PUT product [PUT]
Updates the specified product.

+ Request

    ```js
        { 
            "productUpdate": {
                "CDLString":"Contract definition language that contains terms and conditions, limits, and deductibles",
                "ContractTypeId":"Contract type ID",
                "CreateDate":"Creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "Description":"Updated Description",
                "Name":"Product name",
                "Owner":Owner ID,
                "SourceId":Source ID
                }
        }

    ```

+ Response 200
    
    [product][]


## products [/services/v1/ExposureService/products/{?asOf, cdl, contractId, contractTypeId, createUserId, created, description, id, limit, name, offset, owner, productSchemeId, sourceId}]

### GET products [GET]
Returns a list of products. Supports standard filters, for example number of records to return per page and sorting.

+ Parameters
   + asOf (optional, string) ... Date and time of the latest product version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + cdl (string: cdlString|uri) ... Contract Definition Language.
   + contractId (long, optional) ... Contract ID. 
   + contractTypeId (integer) ... Comma-separated list of contract type IDs.
   + createUserId (integer, optional) ... User ID.
   + created (string optional) ... Return products created before this date, specified in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + description (string, optional) ... Product description.
   + id (integer, optional) ... Comma-separated list of IDs.
   + limit (number, optional) ... Number of records to return per page.
   + name (string) ... Comma-separated list of product names. Cannot start with a number, cannot be blank or null.
   + offset (number, optional) ... Returns results starting with this record number (0-based).   
   + owner (integer, optional) ... Comma-separated list of owner IDs.
   + productSchemeId (integer, optional) ... Product scheme ID.
   + sourceId (string optional) ... Comma-separated list of IDs (keys) in the external system. Must be unique for import.


+ Response 200

    ```js
        { 
            "Count": "number: total number of products that exist"
            "Products": [
                {
                "AsOf": "string: date and time of the latest version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                 "CDL": {
                    "CDLString": "string: CDL information",
                    "URI": "string: unique resource identifier",
                },
                {
                "ContractTypeId": "number: contract type ID",                
                "Created": "string: creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "Description": "string: product description",
                "Id": "number: product ID",
                "Name": "string: unique product name",
                "Owner": "number: user ID of the creator",
                "ProductSchemeId": "number: product scheme ID",
                "SourceId": "string: ID of the external system to which the product is linked",
                },
                
            "Products": [
                {
                "AsOf": "string: date and time of the latest version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                 "CDL": {
                    "CDLString": "string: CDL information",
                    "URI": "string: unique resource identifier",
                },
                {
                "ContractTypeId": "number: contract type ID",                
                "Created": "string: creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "Description": "string: product description",
                "Id": "number: product ID",
                "Name": "string: unique product name",
                "Owner": "number: user ID of the creator",
                "ProductSchemeId": "number: product scheme ID",
                "SourceId": "string: ID of the external system to which the product is linked",
                },
            "Products": [
                {
                "AsOf": "string: date and time of the latest version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                 "CDL": {
                    "CDLString": "string: CDL information",
                    "URI": "string: unique resource identifier",
                },
                {
                "ContractTypeId": "number: contract type ID",                
                "Created": "string: creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "Description": "string: product description",
                "Id": "number: product ID",
                "Name": "string: unique product name",
                "Owner": "number: user ID of the creator",
                "ProductSchemeId": "number: product scheme ID",
                "SourceId": "string: ID of the external system to which the product is linked",
                }
            ]
        }

    ```

## products [/services/v1/ExposureService/products]

### POST products [POST]
Creates a product.

+ Request

    ```js
        { 
            "ProductInput": {
                "Name": "string",
                "Description": "string",
                "SourceId": "string: ID of the external system to which the product is linked",
                "ContractTypeId": "integer: Contract type ID",
                "CDL": "string",
                },
                "Parameters":  [
                    "key1": "string: value1",
                    "key2": "string: value2",
                    "key3": "string: value3"
                ]
            }
        }

    ```

+ Response 201
    
    [product][]





# Group Import EDM
This section groups EDM Import resources.

The Exposure Upload Utility (EUU) transfers exposure data from version 11.0 and 13.0 EDMs to RMS(one) on the cloud. The utility allows you to connect to SQL Servers in your enterprise, browse to version 11.0 and 13.0 EDMs, and select one or more portfolios that you want to upload. The utility extracts the information associated with the selected portfolios and transfers it to RMS(one). It translates the data and stores it in the RMS(one) Insurance Domain Model. To perform a transaction you must provide the database server name (serverName [string]) and the SQL server login credentials (sqlCredentials [string]).
Authentication can be done through SQL server or Windows Authentication. We are using SQL server Authentication. The Authentication string is built using the Username, Password and the Key combination and is encoded in Base 64 UTF 16. 
For example:  UserName;Password;false  encode to Base64 UTF 16 format
              False -> SQLServerAuthentication
              True-> WindowsAuthentication
              Username;pwd;false

The base URL for EDM uploads is the EUU URL with the port number
For example: http://{base_URL}:81

The following will be contained in the header:

SqlServerAuthorization: {encoded string}

## EdmFiles [/services/v1/ExposureUploadService/edmFiles?serverName={server_name}]

+ edmFiles Model (application/json)
    
    ```js
    { 
        "EdmNames": [
            "string: EDM file name",
            "string: EDM file name",
            "string: EDM file name"
        ]
    }
    ```

### GET EdmFiles [GET]

Returns a list of EDM files attached to local Uploader Tool SQl Server.

+ Request
   + Headers
    
            SqlServerAuthorization: "Base64/UTF16 encoded string in the format: UserName;Password;false"

+ Parameters
   + serverName (string) ... Name of the SQL server.
   
+ Response 200
  
    [edmFiles][]



## edmPortfolios [/services/v1/ExposureUploadService/edmFiles/{edmFileName}/edmPortfolios?serverName={server_name}]

+ edmPortfolioInfo Model (application/json)
    
    ```js
    { 
        "EdmName": "file name",
        "edmPortfolios": [
            {
                "id": "number: EDM portfolio ID",
                "name": "string: EDM portfolio name",
                "number": "string: EDM portfolio number",
                "created": "string: creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
            },
            {
                "id": "number: EDM portfolio ID",
                "name": "string: EDM portfolio name",
                "number": "string: EDM portfolio number",
                "created": "string: creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
            },
            {
                "id": "number: EDM portfolio ID",
                "name": "string: EDM portfolio name",
                "number": "string: EDM portfolio number",
                "created": "string: creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
            }
        "serverName": "string: the name of the server containing the EDM database",
        ]
    }
    ```

### GET edmPortfoliosList [GET]

Returns a list of Portfolios in the specified EDM file attached to the local Uploader Tool SQl Server.

+ Request
   + Headers
    
            SqlServerAuthorization: "Base64/UTF16 encoded string in the format: UserName;Password;false"

+ Parameters
   + serverName (required, string) ... Name of the SQL server.
   
+ Response 200

    [edmPortfolioInfo][]
    


## edmTreaties [/services/v1/ExposureUploadService/edmFiles/{edmFileName}/edmTreaties?serverName={Server_Name}]

+ edmTreatyInfo Model (application/json)
    
    ```js
    { 
        "edmFileName": "string: file name",
        "edmTreaties": [
            {
                "id": "number: the EDM treaty ID",
                "name": "string: the name of the EDM treaty",
                "number": "string: the EDM treaty number",
                "type": "string: the EDM treaty type",
                "cedant": "string: name of the cedant party",
                "currency": "string: 3-digit currency code (e.g. USD)",
                "occurenceLimit": "string: maximum payout per occurrence",
                "attachmentPoint": "string: The loss level, once reached, that causes the cover to pay out. Covers attach (start taking loss) when the loss to their subject exceeds the attachment point, however this is after having reduced the subject by all relevant deductibles and sublimits.",
                "percentShare": "number: percentage of losses to which the treaty applies",
                "inception": "string: inception date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time. This date cannot be later than the expiration date.",
                "expiration": "string: expiration date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time. This date cannot be earlier than the inception date."
            },
            {
                "id": "number: the EDM treaty ID",
                "name": "string: the name of the EDM treaty",
                "number": "string: the EDM treaty number",
                "type": "string: the EDM treaty type",
                "cedant": "string: name of the cedant party",
                "currency": "string: 3-digit currency code (e.g. USD)",
                "occurenceLimit": "string: maximum payout per occurrence",
                "attachmentPoint": "string: The loss level, once reached, that causes the cover to pay out. Covers attach (start taking loss) when the loss to their subject exceeds the attachment point, however this is after having reduced the subject by all relevant deductibles and sublimits.",
                "percentShare": "number: percentage of losses to which the treaty applies",
                "inception": "string: inception date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time. This date cannot be later than the expiration date.",
                "expiration": "string: expiration date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time. This date cannot be earlier than the inception date."
            },
            {
                "id": "number: the EDM treaty ID",
                "name": "string: the name of the EDM treaty",
                "number": "string: the EDM treaty number",
                "type": "string: the EDM treaty type",
                "cedant": "string: name of the cedant party",
                "currency": "string: 3-digit currency code (e.g. USD)",
                "occurenceLimit": "string: maximum payout per occurrence",
                "attachmentPoint": "string: The loss level, once reached, that causes the cover to pay out. Covers attach (start taking loss) when the loss to their subject exceeds the attachment point, however this is after having reduced the subject by all relevant deductibles and sublimits.",
                "percentShare": "number: percentage of losses to which the treaty applies",
                "inception": "string: inception date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time. This date cannot be later than the expiration date.",
                "expiration": "string: expiration date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time. This date cannot be earlier than the inception date."
            },
        "serverName": "string: the name of the server containing the EDM database",
        ]
    }
    ```

### GET edmTreatiesList [GET]
Returns a list of treaties in the specified EDM file attached to the local Uploader Tool SQl Server.  

+ Request
   + Headers
    
            SqlServerAuthorization: "Base64/UTF16 encoded string in the format: UserName;Password;false"

+ Parameters
   + serverName (required, string) ... Name of the SQL server.
   
+ Response 200

    
    [edmTreatyInfo][]

        


## edmUploads [/services/v1/ExposureUploadService/edmUploads/{id}]

+ edmUpload Model (application/json)
    
    ```js
    { 
        "id": "number: the EDM upload ID",
        "uri": "string: URI",
        "serverName": "string: the name of the server containing the EDM database",
        "edmFileName": "string: EDM file name",
        "owner": "number: the user ID of the owner",
        "submitted": "string: submittal date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "started": "string: start date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "completed": "string: completion date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "extractValidOnly": "boolean: option to select and upload only valid locations.",
        "jobStatus": "string: domain data code for Queued, Running, Completed, Failed, Canceled",
        "exposureImportSetId": "number: If the portfolio is imported, this is the ID of the import set to which the portfolio belonged. Otherwise set to null.",
        "targetExposureType": "string: Domain Data code for Portfolio or Cedant Exposure",
        "referenceTargetExposure": "boolean: Option to set the exposure as reference so an entire tenant can use it (true|false)",
        "franchiseDeductible": "boolean: Option for limits and deductibles as a contract to be treated as a franchise (true|false)",
        "edmPortfolioTreatyMappings": [
            {
                "PortfolioId": "number: EDM portfolio ID",
                "TreatyIds": [
                    "string: treaty ID (default is -1 if a portfolio is not attached to any treaty)",
                    "string: treaty ID (default is -1 if a portfolio is not attached to any treaty)",
                    "string: treaty ID (default is -1 if a portfolio is not attached to any treaty)"
                ]
      },
            {
                "PortfolioId": "number: EDM portfolio ID",
                "TreatyIds": [
                    "string: treaty ID (default is -1 if a portfolio is not attached to any treaty)",
                    "string: treaty ID (default is -1 if a portfolio is not attached to any treaty)",
                    "string: treaty ID (default is -1 if a portfolio is not attached to any treaty)"
                ]
            },
            {
                "PortfolioId": "number: EDM portfolio ID",
                "TreatyIds": [
                    "string: treaty ID (default is -1 if a portfolio is not attached to any treaty)",
                    "string: treaty ID (default is -1 if a portfolio is not attached to any treaty)",
                    "string: treaty ID (default is -1 if a portfolio is not attached to any treaty)"
                ]
            }
        ],
        "edmTreatyIds": [
            "string: treaty ID (when uploading only treaties without attaching portfolios)",
            "string: treaty ID (when uploading only treaties without attaching portfolios)",
            "string: treaty ID (when uploading only treaties without attaching portfolios)"
        ]
    }
    ```

### GET edmUpload [GET]
Returns the specified EDM upload.

+ Response 200
    
    [edmUpload][]

### DELETE edmUpload [DELETE]
Deletes the selected EDM upload.

+ Response 204
    

## edmUploads [/services/v1/ExposureUploadService/edmUploads]
    
### POST edmUpload [POST]
Submits an EDM upload.

+ Request
    + Headers
            
            SqlServerAuthorization: "Base64/UTF16 encoded string in the format: UserName;Password;false"
            Authorization: Basic "Base64/UTF8 encoded string in the format: companyName\username:password"
    

    + Body
    
    ```js
    { 
        "edmName": "string: EDM file name",
        "extractValidOnly": "boolean: Option to select and upload only valid locations (true|false)",
        "targetExposureType": "string: Domain Data code for Portfolio or Cedant Exposure",
        "isTargetExposureReference": "boolean: Option to set the exposure as reference so an entire tenant can use it (true|false)",
        "isDeductibleFranchised": "boolean: Option for limits and deductibles as a contract to be treated as a franchise (true|false)",
        "treaties": string: Treaties",
        "userId": string: unique ID of the user creating this EDM upload.",
        "PortfolioTreatyMappings": [
            {
                "PortfolioId": "number: EDM portfolio ID",
                "TreatyIdList": [
                    "string: treaty ID (default is -1 if a portfolio is not attached to any treaty)",
                    "string: treaty ID (default is -1 if a portfolio is not attached to any treaty)",
                    "string: treaty ID (default is -1 if a portfolio is not attached to any treaty)"
                ]
            },
            {
                "PortfolioId": "number: EDM portfolio ID",
                "TreatyIdList": [
                    "string: treaty ID (default is -1 if a portfolio is not attached to any treaty)",
                    "string: treaty ID (default is -1 if a portfolio is not attached to any treaty)",
                    "string: treaty ID (default is -1 if a portfolio is not attached to any treaty)"
                ]
            },
            {
                "PortfolioId": "number: EDM portfolio ID",
                "TreatyIdList": [
                    "string: treaty ID (default is -1 if a portfolio is not attached to any treaty)",
                    "string: treaty ID (default is -1 if a portfolio is not attached to any treaty)",
                    "string: treaty ID (default is -1 if a portfolio is not attached to any treaty)"
                ]
            }
        ],
    }
    ```

+ Response 202
    
    ```js
    { 
        "uri": "string: unique resource identifier",
        "id": "number"
    }
    ```


# Group Import Platform
This section groups platform import resources.

## FileUploads [/services/v1/ImportService/fileUploads]
Uploads flat files to the platform.


### POST fileUploads [POST]
Submits a fileUpload.
+ Request

    ```js
{
    "CreatePortfolioName": "string: portfolio name",
    "DataSchemaFormat": "integer: code for data schema format.",
    "ExposureImportfiles": [
        {
            "Delimiter": "~",
            "EntityName": "string: entity name",
            "Path": "string: upload patch."
        },
        {
            "Delimiter": "~",
            "EntityName": "string: entity name",
            "Path": "string: upload patch."
        },
        {
            "Delimiter": "~",
            "EntityName": "string: entity name",
            "Path": "string: upload patch."
        }
    ],
    "ExposureMappingFileUri": "unique identifier resouce for exposure mapping file.",
    "IfImportIntoExistingAccount": "boolean: specifies whether to upload into an existing account.",
    "IsMyInsurancePolicy": "boolean: specifies whether this is an insurance policy.",
    "Name": "string: filename.",
    "WinUserId": "user ID."
}

    ```
+ Response 202
    
    ```js
    { 
        "activity": {
            "uri": "string: URI"
        }
        "exposureImportSet": {
            "uri": "string: URI"
        }
    }
    ```


## ExposureImportSet [/services/v1/ImportService/exposureImportSets/{id}]
An exposureImportSet is created from an EDM upload or file upload.

+ exposureImportSet Model (application/json)
    
    ```js
    { 
        "id": "number: import set ID",
        "uri": "string: URI",
        "name": "string: import set name",
        "owner": "number: the user ID of the import set owner",
        "completed": "string: completion date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "dataSchemaFormat": "string: Domain Data code for import file format - EDM, MRI, CDF, Unicede",
        "sourceServerName": "string: the name of the server containing the EDM database",
        "sourceDatabaseName": "string: the EDM database filename"
    }
    ```

### GET exposureImportSet [GET]
Returns the specified exposureImportSet.

+ Response 200
    
    [exposureImportSet][]

## GET exposureImportSets [/services/v1/ImportService/exposureImportSets/{?completed, dataSchemaFormat, id, limit, name, offset, order, owner, sortField, sourceServerName, sourceDatabaseName, uri}]

### GET exposureImportSets [GET]
Returns a list of exposureImportSets. Supports standard filters, for example number of records to return per page and sorting.

+ Parameters
   + completed (string: datetime, optional)... Completion date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + dataSchemaFormat (string)... Domain data code for import file format, for example DM, MRI, CDF, Unicede.
   + id (integer) ... Import set ID.
   + limit (number, optional) ... Number of records to return per page.
   + name (string) ... Filename.   
   + offset (number, optional) ... Returns results starting with this record number (0-based).   
   + order (string) ... Sort in ascending or descending order.
   + owner (string) ... Owner.
   + sortField (string) ... Sort by field.
   + sourceDatabaseName (string) ... EDM database filename.  
   + sourceServerName (string)... Name of the server containing the database. 
   + uri (string) ... Unique resource identifier.


+ Response 200

    ```js
        {
            "exposureImportSets": [
                { 
                    "id": "number: import set ID",
                    "uri": "string: unique resource identifier",
                    "name": "string: import set name",
                    "owner": "number: the user ID of the import set owner",
                    "completed": "string: completion date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "dataSchemaFormat": "string: domain data code for import file format - EDM, MRI, CDF, Unicede",
                    "sortField": "string: sort by field.",
                    "sourceServerName": "string: the name of the server containing the EDM database",
                    "sourceDatabaseName": "string: the EDM database filename"
                    "uri": "string: unique resource identifier."
                },
                { 
                    "id": "number: import set ID",
                    "uri": "string: unique resource identifier",
                    "name": "string: import set name",
                    "owner": "number: the user ID of the import set owner",
                    "completed": "string: completion date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "dataSchemaFormat": "string: domain data code for import file format - EDM, MRI, CDF, Unicede",
                    "sortField": "string: sort by field.",
                    "sourceServerName": "string: the name of the server containing the EDM database",
                    "sourceDatabaseName": "string: the EDM database filename"
                    "uri": "string: unique resource identifier."
                },
                { 
                    "id": "number: import set ID",
                    "uri": "string: unique resource identifier",
                    "name": "string: import set name",
                    "owner": "number: the user ID of the import set owner",
                    "completed": "string: completion date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "dataSchemaFormat": "string: domain data code for import file format - EDM, MRI, CDF, Unicede",
                    "sortField": "string: sort by field.",
                    "sourceServerName": "string: the name of the server containing the EDM database",
                    "sourceDatabaseName": "string: the EDM database filename"
                    "uri": "string: unique resource identifier."
                }
            ]
        }
    ```


## Exposures [/services/v1/exposureImportSets/{id}/exposures/{type}/?asOf, id, limit, offset, sourceId, sourceType, uri}]
Returns a list of exposures created by an EDM import or file import.

Exposures are always nested within the context of an exposureImportSet.

### GET exposures [GET]
Returns a stream of exposures. Supports standard filters, for example number of records to return per page and sorting.

+ Parameters 
   + asOf (string, optional) ...  Date and time of the latest version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
   + id (string) ... Unique identifier for exposureImportSet.
   + limit (number, optional) ... Number of records to return per page.
   + offset (number, optional) ... Returns results starting with this record number (0-based).
   + sourceId (string, optional) ... The ID of the external source.
   + sourceType (string, optional) ... Domain data code for source - Portfolio or Treaty
   + type (string) ... Domain data code for exposure type.
   + uri (string) ... Unique resource identifier.

+ Response 200

    ```js
        {
            "exposures": [
                { 
                    "id": "number: import set ID",
                    "asOf": "string: date and time of the latest version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "uri": "string: Unique resource identifier.",
                    "type": "string: Domain Data code for Exposure Type - Portfolio, Contract, CedantExposure",
                    "sourceType":  "string: Domain Data code for source - Portfolio or Treaty",
                    "sourceId": "string: The ID of the external source."
                },
                { 
                    "id": "number: import set ID",
                    "asOf": "string: date and time of the latest version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "uri": "string: Unique resource identifier.",
                    "type": "string: Domain Data code for Exposure Type - Portfolio, Contract, CedantExposure",
                    "sourceType":  "string: Domain Data code for source - Portfolio or Treaty",
                    "sourceId": "string: The ID of the external source."
                },
                { 
                    "id": "number: import set ID",
                    "asOf": "string: date and time of the latest version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    "uri": "string: Unique resource identifier.",
                    "type": "string: Domain Data code for Exposure Type - Portfolio, Contract, CedantExposure",
                    "sourceType":  "string: Domain Data code for source - Portfolio or Treaty",
                    "sourceId": "string: The ID of the external source."
                }
            ]
        }
    ```

# Group RiskAnalyses
This section groups riskAnalyses resources.

RiskAnalyses consists of a collection of risk analysis profiles (RAPs), which define the settings used for geocoding and hazard retrieval, and loss analyses (peril model and accumulation) in RMS(one). RMS(one) provides predefined RAPs that are ready to use without further configuration. When you run an analysis, select a RAP, specify an output template, and execute the analysis.

RAPs serve as containers for one or more profiles, including geocoding, hazard, peril model, and accumulation profiles. The RAP framework in RMS(one) enables you to maintain a small number of RAPs that combine these profiles. RMS(one) performance makes it practical to run a single RAP that includes geocoding, hazard, your licensed peril models, and accumulations on every portfolio you import.

You do not have to create RAPs to get started. RMS(one) includes RMS reference RAPs and profiles with predefined settings that correspond to the RMS view of risk. If you want to create your own RAPs, use the information in this section.

If you create your own RAPs, RMS recommends creating a RAP that combines a single geocoding profile and a single hazard retrieval profile. Run this RAP on all imported portfolios. You can add one or more loss analysis profiles and accumulation profiles to this RAP, or you can create separate RAPs for the loss profiles. If you create separate RAPs for geocoding and hazard retrieval, and for loss analysis, you must execute geocoding and hazard retrieval before you execute any loss analyses.


## riskAnalyses [/services/v1/Lossexportservice/lossexport/riskanalyses{?createdDate, currencyAsOf, currencyCode, currencyScheme, exposureAsOfDate, exposureId, exposureType, id, name, outputTemplateId, outputTemplateName, positionList, riskAnalysisProfileInstance, riskAnalysisProfileName, userId}]

### GET riskAnalyses [GET]

Returns a list of riskAnalyses profiles.

+ Parameters
   + createdDate (string, optional) ... Date and time of creation in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + currencyAsOf (string, optional) ... Date and time of latest currency specifics in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + currencyCode (number, optional) ... 3-digit currency code (for example, USD).
   + currencyScheme (number, optional) ... The ID of a currency scheme in domain data.
   + exposureAsOfDate (string, optional) ... Date and time of the latest exposure in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + exposureId (number, optional) ... The ID of an existing exposure (Portfolio, CedantExposure, RiskItemSchedule).
   + exposureType (integer, optional) ... Unique identifier specifying the exposure type.
   + id (string, optional) ... Risk Anaylis Profile ID.
   + name (string, optional) ... Risk Anaylis Profile name.
   + outputTemplateId (string, optional) ... Output template ID.
   + outputTemplateName (string, optional) ... Output template name.
   + positionList (string, optional) ... Position list details.
   + riskAnalysisProfileInstance (number, optional) ... Risk analysis profile number.
   + riskAnalysisProfileName (string, optional) ... Risk analysis profile name.
   + userId (integer, optional) ... User ID.

+ Response 200

    ```js
    [
        {
        "CreatedDate": "creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "CurrencyAsOf": "Date and time of latest currency specifics in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "CurrencyCode": "3-digit currency code (for example, USD).",
        "CurrencyScheme": "The ID of a currency scheme in domain data",
        "ExposureAsOfDate": "Date and time of the latest exposure in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "ExposureId": "The ID of an existing exposure (Portfolio, CedantExposure, RiskItemSchedule).",
        "ExposureType": "Unique identifier specifying the exposure type.",
        "Id": "Risk Anaylis Profile ID.",
        "Name": "Risk Anaylis Profile name.",
        "OutputTemplateId": "Output template ID",
        "OutputTemplateName": "Output template name",
        "PositionList": [
        
            { 
            "ContractTypeId": "Contract type ID",
            "ExposureId": "Exposure ID",
            "GroupId": "Group ID",
            "Id": "Instance ID",
            "IsDefault": "Specifies whether this instance is the default.",
            "IsFinal": "Specifies whether this instance is final",
            "IsMasterWithinGroup": Specifies whether this instance is the master within the group,
            "Name": "Instance name"
            "ReportingPositionAlias": "Peporting position alias",
            "ReportingPositionGroupId": "Reporting position group ID",
            "RisklinkPerspective": "Risk link perspective",
            "Scaling": "Scaling number
            "SnapshotDate": "date and time of snapshot in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
            }
            { 
            "ContractTypeId": "Contract type ID",
            "ExposureId": "Exposure ID",
            "GroupId": "Group ID",
            "Id": "Instance ID",
            "IsDefault": "Specifies whether this instance is the default.",
            "IsFinal": "Specifies whether this instance is final",
            "IsMasterWithinGroup": Specifies whether this instance is the master within the group,
            "Name": "Instance name"
            "ReportingPositionAlias": "Peporting position alias",
            "ReportingPositionGroupId": "Reporting position group ID",
            "RisklinkPerspective": "Risk link perspective",
            "Scaling": "Scaling number"
            "SnapshotDate": "date and time of snapshot in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
            }
    ]
        "RiskAnalyisProfileInstance": "Risk analysis profile instance number",
        "RiskAnalyisProfileName": "Risk analysis profile name",
        "UserId": "User ID",
        }
        { 
        "CreatedDate": "creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "CurrencyAsOf": "Date and time of latest currency specifics in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "CurrencyCode": "3-digit currency code (for example, USD).",
        "CurrencyScheme": "The ID of a currency scheme in domain data",
        "ExposureAsOfDate": "Date and time of the latest exposure in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "ExposureId": "The ID of an existing exposure (Portfolio, CedantExposure, RiskItemSchedule).",
        "ExposureType": "Unique identifier specifying the exposure type.",
        "Id": "Risk Anaylis Profile ID.",
        "Name": "ARisk Anaylis Profile name.",
        "OutputTemplateId": "Output template ID",
        "OutputTemplateName": "Output template name",
        "PositionList": [
                { 
                "ContractTypeId": "Contract type ID",
                "ExposureId": "Exposure ID",
                "GroupId": "Group ID",
                "Id": "Instance ID",
                "IsDefault": "Specifies whether this instance is the default.",
                "IsFinal": "Specifies whether this instance is final",
                "IsMasterWithinGroup": Specifies whether this instance is the master within the group,
                "Name": "Instance name"
                "ReportingPositionAlias": "Peporting position alias",
                "ReportingPositionGroupId": "Reporting position group ID",
                "RisklinkPerspective": "Risk link perspective",
                "Scaling": "Scaling number
                "SnapshotDate": "date and time of snapshot in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                }
                { 
                "ContractTypeId": "Contract type ID",
                "ExposureId": "Exposure ID",
                "GroupId": "Group ID",
                "Id": "Instance ID",
                "IsDefault": "Specifies whether this instance is the default.",
                "IsFinal": "Specifies whether this instance is final",
                "IsMasterWithinGroup": Specifies whether this instance is the master within the group,
                "Name": "Instance name"
                "ReportingPositionAlias": "Peporting position alias",
                "ReportingPositionGroupId": "Reporting position group ID",
                "RisklinkPerspective": "Risk link perspective",
                "Scaling": "Scaling number
                "SnapshotDate": "date and time of snapshot in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                }
        ]
        "RiskAnalyisProfileInstance": "Risk analysis profile instance number",
        "RiskAnalyisProfileName": "Risk analysis profile name",
        "UserId": "User ID",
        },
        {
        "CreatedDate": "creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "CurrencyAsOf": "Date and time of latest currency specifics in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "CurrencyCode": "3-digit currency code (for example, USD).",
        "CurrencyScheme": "The ID of a currency scheme in domain data",
        "ExposureAsOfDate": "Date and time of the latest exposure in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "ExposureId": "The ID of an existing exposure (Portfolio, CedantExposure, RiskItemSchedule).",
        "ExposureType": "Unique identifier specifying the exposure type.",
        "Id": "Risk Anaylis Profile ID.",
        "Name": "ARisk Anaylis Profile name.",
        "OutputTemplateId": "Output template ID",
        "OutputTemplateName": "Output template name",
        "PositionList": [
            { 
            "ContractTypeId": "Contract type ID",
            "ExposureId": "Exposure ID",
            "GroupId": "Group ID",
            "Id": "Instance ID",
            "IsDefault": "Specifies whether this instance is the default.",
            "IsFinal": "Specifies whether this instance is final",
            "IsMasterWithinGroup": Specifies whether this instance is the master within the group,
            "Name": "Instance name"
            "ReportingPositionAlias": "Peporting position alias",
            "ReportingPositionGroupId": "Reporting position group ID",
            "RisklinkPerspective": "Risk link perspective",
            "Scaling": "Scaling number
            "SnapshotDate": "date and time of snapshot in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
            }
            { 
            "ContractTypeId": "Contract type ID",
            "ExposureId": "Exposure ID",
            "GroupId": "Group ID",
            "Id": "Instance ID",
            "IsDefault": "Specifies whether this instance is the default.",
            "IsFinal": "Specifies whether this instance is final",
            "IsMasterWithinGroup": Specifies whether this instance is the master within the group,
            "Name": "Instance name"
            "ReportingPositionAlias": "Peporting position alias",
            "ReportingPositionGroupId": "Reporting position group ID",
            "RisklinkPerspective": "Risk link perspective",
            "Scaling": "Scaling number
            "SnapshotDate": "date and time of snapshot in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
            }
        ]
        "RiskAnalyisProfileInstance": "274",
        "RiskAnalyisProfileName": "RMS GeoHaz RAP",
        "UserId": "5",
    }
    ```
    
    
## RiskAnalyses [/services/v1/Lossexportservice/lossexport/riskanalyses?riskanalysisid={id}]
  
### GET riskanalysesid [GET]

Returns a risk analysis specified by ID.

+ Response 200

    ```js
    [
        {
        "CreatedDate": "creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "CurrencyAsOf": "Date and time of latest currency specifics in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "CurrencyCode": "3-digit currency code (for example, USD).",
        "CurrencyScheme": "The ID of a currency scheme in domain data",
        "ExposureAsOfDate": "Date and time of the latest exposure in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "ExposureId": "The ID of an existing exposure (Portfolio, CedantExposure, RiskItemSchedule).",
        "ExposureType": "Unique identifier specifying the exposure type.",
        "Id": "Risk Anaylis Profile ID.",
        "Name": "ARisk Anaylis Profile name.",
        "OutputTemplateId": "Output template ID",
        "OutputTemplateName": "Output template name",
        "PositionList": [
        
            { 
            "ContractTypeId": "Contract type ID",
            "ExposureId": "Exposure ID",
            "GroupId": "Group ID",
            "Id": "Instance ID",
            "IsDefault": "Specifies whether this instance is the default.",
            "IsFinal": "Specifies whether this instance is final",
            "IsMasterWithinGroup": Specifies whether this instance is the master within the group,
            "Name": "Instance name"
            "ReportingPositionAlias": "Peporting position alias",
            "ReportingPositionGroupId": "Reporting position group ID",
            "RisklinkPerspective": "Risk link perspective",
            "Scaling": "Scaling number
            "SnapshotDate": "date and time of snapshot in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
            }
            { 
            "ContractTypeId": "Contract type ID",
            "ExposureId": "Exposure ID",
            "GroupId": "Group ID",
            "Id": "Instance ID",
            "IsDefault": "Specifies whether this instance is the default.",
            "IsFinal": "Specifies whether this instance is final",
            "IsMasterWithinGroup": Specifies whether this instance is the master within the group,
            "Name": "Instance name"
            "ReportingPositionAlias": "Peporting position alias",
            "ReportingPositionGroupId": "Reporting position group ID",
            "RisklinkPerspective": "Risk link perspective",
            "Scaling": "Scaling number
            "SnapshotDate": "date and time of snapshot in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
            }
    ]
        "RiskAnalyisProfileInstance": "Risk analysis profile instance number",
        "RiskAnalyisProfileName": "Risk analysis profile name",
        "UserId": "User ID",
        }
        
    ```

## RiskAnalyses [/services/v1/exposureservice/riskAnalyses]

### POST riskAnalyses [POST]
Creates riskAnalyses.

+ Request (application/json)

    ```js
    
    {
        "Name": "string: name of the Risk Analysis",
        "Description": "string: The description of the Risk Analysis.",
        "RiskAnalyisProfile": "number: The ID of an existing Risk Analysis Profile (RAP)",
        "ExposureId": "number: The ID of an existing exposure (Portfolio, CedantExposure, RiskItemSchedule)",
        "ExposureAsOf": "exposure date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "CurrencyCode": "number: The ID of a currency in Domain Data",
        "CurrencyAsOf": "currency date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "CurrencyScheme": "number: The ID of a currency Scheme in Domain Data",
        "PerformanceLevel": "number: 1 - Express, 2 - Standard or 3 - Overnight ...",
        "OutputTemplateId": "Output template ID",
        "OutputTemplateName": "Output template name"
    }
    ```

+ Response 200

    ```js
{
    "ActivityUrl": "Activity URL in the format: /v1/activities/{id}",
    "RiskAnalyisProfileInstance": "number: ID of RAP Instance"
}
    ```        

## riskAnalysisProfile [/services/v1/rapservice/riskanalysisprofiles/{id}]

+ riskAnalysisprofile Model (application/json)
 
    ```js
        { 
            "RapDefinitionList": [
                {
                    "AnalysisSettingUrlList": [
                            "URI: URL of individual Risk Analysis settings"
                    ],
                    "Id": "number: Risk Analysis Profile ID", 
                    "Metadata": {
                        "CreatedDate": "string: datetime: Microsoft format /DriskAnalysisProfileInstance (string, optional) ... Unique ID of risk analysis profile.ate(nnnnnnnnnnn)/",
                        "CurrencyCode": "string" 3-digit currency code (for example, USD).",
                        "CurrencyVintageId": "string: currency vintage ID.",
                        "Description": "RAP description",
                        "EntityType": "integer: entity type",
                        "Id": "number: Risk Analysis Profile ID",
                        "IsDefault": "boolean: determines whether it is the default Risk Analysis Profile or not",
                        "IsHidden": "Boolean: determines whether Risk Analysis Profile is hidden or not",
                        "Name": "string: name of the Risk Analysis Profile",
                        "RiskAnalysisProfileCategory": "number: category to which Risk Analysis Profile belongs to",
                        "TagList": "string: RMS seeded UI tags" }
                    ],
                        "UpdatedDate": "string: update date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    },
                    "RiskAnalysisProfileInstanceInformationList": "string: list of all Risk Analysis Profile instances generated by this RAP"
                }
            ],
            "TotalNumberOfItems": 1
        }
    ```

### GET riskAnalysisProfile [GET]

+ Response 200

    ```js
    [
        {
        "CreatedDate": "creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "CurrencyAsOf": "Date and time of latest currency specifics in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "CurrencyCode": "3-digit currency code (for example, USD).",
        "CurrencyScheme": "The ID of a currency scheme in domain data",
        "ExposureAsOfDate": "Date and time of the latest exposure in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "ExposureId": "The ID of an existing exposure (Portfolio, CedantExposure, RiskItemSchedule).",
        "ExposureType": "Unique identifier specifying the exposure type.",
        "Id": "Risk Anaylis Profile ID.",
        "Name": "ARisk Anaylis Profile name.",
        "OutputTemplateId": "Output template ID",
        "OutputTemplateName": "Output template name",
        "PositionList": [
        
            { 
            "ContractTypeId": "Contract type ID",
            "ExposureId": "Exposure ID",
            "GroupId": "Group ID",
            "Id": "Instance ID",
            "IsDefault": "Specifies whether this instance is the default.",
            "IsFinal": "Specifies whether this instance is final",
            "IsMasterWithinGroup": Specifies whether this instance is the master within the group,
            "Name": "Instance name"
            "ReportingPositionAlias": "Peporting position alias",
            "ReportingPositionGroupId": "Reporting position group ID",
            "RisklinkPerspective": "Risk link perspective",
            "Scaling": "Scaling number
            "SnapshotDate": "date and time of snapshot in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
            }
            { 
            "ContractTypeId": "Contract type ID",
            "ExposureId": "Exposure ID",
            "GroupId": "Group ID",
            "Id": "Instance ID",
            "IsDefault": "Specifies whether this instance is the default.",
            "IsFinal": "Specifies whether this instance is final",
            "IsMasterWithinGroup": Specifies whether this instance is the master within the group,
            "Name": "Instance name"
            "ReportingPositionAlias": "Peporting position alias",
            "ReportingPositionGroupId": "Reporting position group ID",
            "RisklinkPerspective": "Risk link perspective",
            "Scaling": "Scaling number
            "SnapshotDate": "date and time of snapshot in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
            }
    ]
        "RiskAnalyisProfileInstance": "Risk analysis profile instance number",
        "RiskAnalyisProfileName": "Risk analysis profile name",
        "UserId": "User ID",
        }
        
    
    [riskAnalysisprofile][]

## riskAnalysisProfiles [/services/v1/rapservice/riskanalysisprofiles/{? analysisSettingUrlList, id, limit, metadata, name, offset, riskAnalysisProfileInstanceInformationList}]

### GET riskAnalysisProfiles [GET]

+ Parameters

   + analysisSettingUrlList (string, optional) ... List of URLs of individual risk analysis settings.
   + id (number, optional) ... Risk Analysis Profile ID.
   + limit (number, optional) ... Number of records to return per page.
   + metadata (string, optional) ... Information about an instance of risk analysis profile.
   + name (string, optional) ... Risk Analysis Profile name. 
   + offset (number, optional) ... Return results starting with this record number (0-based).
   + riskAnalysisProfileInstanceInformationList (string, optional) ... List of all risk analysis profile instances generated by this RAP.

+ Response 200

    ```js
        {
            "RapDefinitionList": [
                {
                    "AnalysisSettingUrlList": [
                            "URI: URL of individual Risk Analysis settings"
                    ],
                    "Id": "number: Risk Analysis Profile ID", 
                    "Metadata": {
                        "CreatedDate": "string: datetime: Microsoft format /DriskAnalysisProfileInstance (string, optional) ... Unique ID of risk analysis profile.ate(nnnnnnnnnnn)/",
                        "CurrencyCode": "string" 3-digit currency code (for example, USD).",
                        "CurrencyVintageId": "string: currency vintage ID.",
                        "Description": "RAP description",
                        "EntityType": "integer: entity type",
                        "Id": "number: Risk Analysis Profile ID",
                        "IsDefault": "boolean: determines whether it is the default Risk Analysis Profile or not",
                        "IsHidden": "Boolean: determines whether Risk Analysis Profile is hidden or not",
                        "Name": "string: name of the Risk Analysis Profile",
                        "RiskAnalysisProfileCategory": "number: category to which Risk Analysis Profile belongs to",
                        "TagList": "string: RMS seeded UI tags" }
                        ],
                        "UpdatedDate": "string: update date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                    },
                    "RiskAnalysisProfileInstanceInformationList": "string: list of all Risk Analysis Profile instances generated by this RAP"
                },
                {
                    "AnalysisSettingUrlList": [
                            "URI: URL of individual Risk Analysis settings"
                    ],
                    "Id": "number: Risk Analysis Profile ID", 
                    "Metadata": {
                        "CreatedDate": "string: datetime: Microsoft format /DriskAnalysisProfileInstance (string, optional) ... Unique ID of risk analysis profile.ate(nnnnnnnnnnn)/",
                        "CurrencyCode": "string" 3-digit currency code (for example, USD).",
                        "CurrencyVintageId": "string: currency vintage ID.",
                        "Description": "RAP description",
                        "EntityType": "integer: entity type",
                        "Id": "number: Risk Analysis Profile ID",
                        "IsDefault": "boolean: determines whether it is the default Risk Analysis Profile or not",
                        "IsHidden": "Boolean: determines whether Risk Analysis Profile is hidden or not",
                        "Name": "string: name of the Risk Analysis Profile",
                        "RiskAnalysisProfileCategory": "number: category to which Risk Analysis Profile belongs to",
                        "TagList": "string: RMS seeded UI tags" }
                        ],
                        "UpdatedDate": "string: update date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                    },
                    "RiskAnalysisProfileInstanceInformationList": "string: list of all Risk Analysis Profile instances generated by this RAP"
                },
                {
                    "AnalysisSettingUrlList": [
                            "URI: URL of individual Risk Analysis settings"
                    ],
                    "Id": "number: Risk Analysis Profile ID", 
                    "Metadata": {
                        "CreatedDate": "string: datetime: Microsoft format /DriskAnalysisProfileInstance (string, optional) ... Unique ID of risk analysis profile.ate(nnnnnnnnnnn)/",
                        "CurrencyCode": "string" 3-digit currency code (for example, USD).",
                        "CurrencyVintageId": "string: currency vintage ID.",
                        "Description": "RAP description",
                        "EntityType": "integer: entity type",
                        "Id": "number: Risk Analysis Profile ID",
                        "IsDefault": "boolean: determines whether it is the default Risk Analysis Profile or not",
                        "IsHidden": "Boolean: determines whether Risk Analysis Profile is hidden or not",
                        "Name": "string: name of the Risk Analysis Profile",
                        "RiskAnalysisProfileCategory": "number: category to which Risk Analysis Profile belongs to",
                        "TagList": "string: RMS seeded UI tags" }
                        ],
                        "UpdatedDate": "string: update date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                    },
                    "RiskAnalysisProfileInstanceInformationList": "string: list of all risk analysis profile instances generated by this RAP".
                }
            ],
            "TotalNumberOfItems": "number: total number of items."
        }
    ```
            


## stochasticMetrics [/services/v1/LossExportService/LossExport/stochasticMetrics/{riskanalysisid}]
Loss metrics for risk analyses that have been run and contain stochastic losses.

+ stochasticMetrics Model (application/json)
    
     ```js
        { 
            "stochasticMetrics": {
                "peril": "(optional) string: domain data code for Stochastic Perils - can be null",
                "region": "(optional) string: domain data code for Stochastic PerilRegions - can be null",
                "positions": [
                    {
                        "position": "string: domain data code for Positions or pre-existing position",
                        "values": {
                            "averageAnnualLoss": "number",
                            "standardDeviation": "number",
                            "contributionOfStandardDeviation": "number",
                            "coefficientOfVariation": "number",
                            "points": [
                                {
                                    "returnPeriod": 100,
                                    "exceedanceProbabilities": {
                                        "aggregate": "number",
                                        "contributionOfAggregate": "number",
                                        "tailConditionalExpectationAggregate": "number",
                                        "occurence": "number",
                                        "contributionOfOccurence": "number",
                                        "tailConditionalExpectationOccurence": "number"
                                        },
                                    "probableMaximumExposure": "number",
                                    "excessAverageAnnualLoss": "number"
                                },
                                {
                                    "returnPeriod": 250,
                                    "exceedanceProbabilities": {
                                        "aggregate": "number",
                                        "contributionOfAggregate": "number",
                                        "tailConditionalExpectationAggregate": "number",
                                        "occurence": "number",
                                        "contributionOfOccurence": "number",
                                        "tailConditionalExpectationOccurence": "number"
                                        },
                                    "probableMaximumExposure": "number: 0 for all returnPeriods except 100",
                                    "excessAverageAnnualLoss": "number"
                                }
                            ]
                        }
                    }
                ]
            }
        }
    ``` 

### GET stochasticMetrics [GET]

Returns loss metrics for risk analyses that contain stochastic losses. Supports standard filters, for example number of records to return per page and sorting.

+ Response 200

    [stochasticMetrics][]

## perilRegions [/services/v1/LossExportService/LossExport/stochasticMetrics/perilRegions/{riskanalysisid}]
Perils/Regions available for riskAnalyses that contain stochastic losses.

### GET perilRegions [GET]
Returns a list of available peril regions. Supports standard filters, for example number of records to return per page and sorting.

+ Response 200

    ```js
        {
            "perils":[
                {
                    "peril": "string: Domain Data code for Stochastic Perils",
                    "regions": [
                        {"region": "string: Domain Data code for Stochastic PerilRegions"},
                        {"region": "string: Domain Data code for Stochastic PerilRegions"},
                        {"region": "string: Domain Data code for Stochastic PerilRegions"}
                    ]
                },
                {
                    "peril": "string: Domain Data code for Stochastic Perils",
                    "regions": [
                        {"region": "string: Domain Data code for Stochastic PerilRegions"},
                        {"region": "string: Domain Data code for Stochastic PerilRegions"},
                        {"region": "string: Domain Data code for Stochastic PerilRegions"}
                    ]
                },
                {
                    "peril": "string: Domain Data code for Stochastic Perils",
                    "regions": [
                        {"region": "string: Domain Data code for Stochastic PerilRegions"},
                        {"region": "string: Domain Data code for Stochastic PerilRegions"},
                        {"region": "string: Domain Data code for Stochastic PerilRegions"}
                    ]
                }
            ]
         }
    ```  

# Group RiskAnalysisExports
This section groups riskAnalysisExports resources. A riskAnalysisExport resource exports loss results in CSV or RDM format.

## riskAnalysisExport [/services/v1/LossExportService/LossExport/RiskAnalysisExports]

### POST riskAnalysisExport [POST]
Creates a riskAnalysisExport.

+ Request

    ```js
    
    {
        "Name": "string: The name of the export",
        "Description": "string: The description of the export",
        "RiskAnalyisProfileInstance": "number: existing RAP instance",
        "ExposureId": "number: The ID of an existing exposure (Portfolio, CedantExposure, RiskItemSchedule)",
        "ExposureAsOfDate": "exposure date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time. ",
        "CurrencyCode": "number: The ID of a currency in Domain Data",
        "CurrencyAsOf": "currency date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "CurrencyScheme": "number: The ID of a currency Scheme in Domain Data",
        "OutputTemplate": "number: The ID of the existing dashboardTemplate",
        "PortfolioReportingSegment": "string: portfolio reporting segment information."
        "ExportFormat": "number: Output Format RDM or CSV - Domain Data: /v1/domainservice/domains/infrastructure/namespaces/export/entities/format/values",
        "SqlVersion": "number: SQL server version for RDM format - Domain Data: /v1/domainservice/domains/infrastructure/namespaces/export/entities/sqlversion/values",
        "ExportLossTables": "boolean: specifies whether this is an export loss table.",
        "ExportMetrics": "boolean: specifies wether there is an export metrics.",
        "ExportEps": "boolean: specifies whether this is an export EPS."
    }

    ```

+ Response 200

    ```js
        {
            "ActivityUrl": "https://{API Base URL}/Services/V1/JobManagerService/activities/{id}",
            "DownloadUrl": "https://{File Exchange Base URL}/{Export name}?authn={Authentication Token}"
        }
    ```            

# Group Risk Items
This section groups Exposure resources. Supports standard filters, for example number of records to return per page and sorting. The riskItem resource supports the following nested request:


* GET riskItems from riskItemSchedules

## riskItem [/services/v1/ExposureService/riskItems/{id}]

A risk item is any damageable entity. This entity is the focus of the RMS(one) peril damage model. A risk item can be associated with one or more coverages. Accounts and subjects at risk are collections of risk items.

Risk items are like RiskLink EDM.property records. A number of characteristics are associated with risk items: 

* Whereabouts â Typically an address that captures the position of the exposure.
* Hazard characteristics â Peril-independent and provided either by database lookups or by measurements, such as distance-to-coast value.
* Real property characteristics â Attributes that describe the physical structure, such as construction characteristics.
* Movable property characteristics â Attributes that describe movable property, such as, âContent Gradeâ in RiskLink.
* Common characteristics â Attributes that include the number of floors, construction type, building class, and other attributes common to risk items.
* Subject at risk â One or more risk items comprise a subject at risk. A subject at risk is analogous to an insured location. Subjects at risk can include the following that are at risk in a particular area:
  - population 
  - buildings
  - civil engineering works
  - economic activities
  - public services
  - utilities
  - infrastructure

During EDM upload from a version 11.0 or 13.0 EDM to RMS(one), each RiskLink property record creates a corresponding risk item.

+ riskItem Model (application/json)
    
    ```js
        { 
                "RiskItems": 
        {
            "AsOfDate": "string: date and time of the latest risk item schedule version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
            "CreateDate": "string: creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
            "Description": "string: risk item description",
            "Id": "number: risk item ID",
            "ImportSetId": "number: import set ID",
            "Name": "string: risk item name",
            "Number": "string: risk item number",
            "Owner": "number: user ID of the creator",
            "SourceId": "string: the ID of the external system to which the risk item is linked",
            "URI": "string: unique resource identifier",
            "Version": "number: risk item version",
            "Address": {
                "ACORDResolutionCode": "string",
                "AddressSchemeID": "number",
                "AddressText": "string",
                "AddressType": "number",
                "AddressTypeName": "string",
                "Admin1Code": "string",
                "Admin1Fips": "string",
                "Admin1GeoID": "number"
                "Admin1Name": "string: Administrative divisions refer to geographic divisions, such as states and provinces, and vary by country. Administrative Division1 (Admin1) represents large geographic divisions, such as states and provinces, and corresponds to state-level geocoding resolution (resolution code 10). ",
Administrative Division1 (Admin1) represents large geographic divisions, such as states and provinces, and corresponds to state-level geocoding resolution 
(resolution code 10).",
                "Admin2Code": "string",
                "Admin2Fips": "string",
                "Admin2GeoID": "number"
                "Admin2Name": "string: Administrative Division2 (Admin2) represents smaller geographic divisions, such as counties, and corresponds to county-level geocoding resolution (resolution code 9).",
                "Admin3Code": "string",
                "Admin3GeoID": "number"
                "Admin3Name": "string: Administrative Division3 (Admin3) represents even smaller geographic divisions, such as districts, and corresponds to 
district-level geocoding resolution (resolution code 8).",
                "Admin4Code": "string",
                "Admin4GeoID": "number"
                "Admin4Name": "string",
                "Admin5Code": "string",
                "Admin5GeoID": "number"
                "Admin5Name": "string",
                "Alley": "string",
                "ApnId": "string",
                "Block": "string",
                "BlockGroup": "string",
                "BuildingName": "string: the name of the building",
                "CityCode": "string",
                "CityGeoID": "number",
                "CityName": "string",
                "CountryCode": "string",
                "CountryGeoID": "number",
                "CountryName": "string",
                "CountryScheme": "string: The scheme used for importing country codes: ISO2A: 2-character ISO,  ISO3A: 3-character ISO, ISO3N: 3-digit ISOFIPS.",
                "CountryUnitCode": "string",
                "CreateUserID": "number",
                "ESDBAddressID": "string",
                "ESDBBuildingID": "string",
                "FirmName": "string",
                "GeoDataSourceID": "number",
                "GeoModelResolutionCode": "number",
                "GeoVintageId": "number",
                "GeocodeProductVersion": "string",
                "GeocodingAccuracyBuffer": "number",
                "GeocodingCV": "number",
                "GeocodingLocationCode": "string",
                "GeocodingMatchCode": "string: Geocode match levels represent the resolution at which a location is geocoded. Supported match levels vary by country.",
                "GeocodingResolutionCode": "number",
                "GeocodingResolutionConfidence": "number",
                "HashId": "string",
                "HiRange": "string",
                "HiUnit": "string",
                "HouseNumber": "string",
                "IsExtended": "number",
                "IsIntersection": "string",
                "IsSubmittedAddress": "number",
                "Latitude": "number: RMS(one) identifies latitude and longitude when a risk location is geocoded. User can also enter a valid latitude and longitude, and RMS(one) can retrieve the corresponding ZIP Code for U.S. risk locations.",
                "LoUnit": "string",
                "LocationCode": "string",
                "LocationCodeGeoID": "number",
                "Longitude": "number: RMS(one) identifies latitude and longitude when a risk location is geocoded. User can also enter a valid latitude and longitude, and RMS(one) can retrieve the corresponding ZIP Code for U.S. risk locations.",
                "LowRange": "string",
                "ParcelNumber": "string: Parcel-level matches are based on property parcels. Property parcels contain information on the boundaries, ownership, value, zoning, and other aspects of a commercial or residential property in the U.S. Parcel data is consistent over time and covers more than 50 percent of the privately owned U.S. parcels. Parcel centroids provide highly accurate geocoding matches, although it is not always as accurate as a building footprint geocoding that is achievable with RMS' Sanborn data sets. It is superior to street address geocoding because it is not subject to address interpolation errors.",
                "PostDir": "string",
                "PostDir2": "string",
                "PostalCode": "string",
                "PostalCode1GeoID": "number",
                "PostalCode2GeoID": "number",
                "PostalCode3GeoID": "number",
                "PostalCodeGeoID": "number",
                "PreDir": "string",
                "PreDir2": "string",
                "PreferredCity": "string",
                "QuadKey": "number",
                "RangeParity": "string",
                "SanbornAreaID": "number: Square Footage for the building as defined by the Sanborn Mapping Company.",
                "SanbornBuildingID": "string: The building identifier as defined by the Sanborn Mapping Company.",
                "SegmentId": "string",
                "SegmentParity": "string",
                "StreetAddress": "string",
                "StreetName": "string",
                "StreetName2": "string",
                "StreetType": "string",
                "StreetType2": "string",
                "UnitNumber": "string: the unit number",
                "UnitType": "string: the type of unit",
                "Zip4": "string",
                "Zone1Code": "string",
                "Zone1GeoID": "number",
                "Zone1Name": "string",
                "Zone2Code": "string",
                "Zone2GeoID": "number",
                "Zone2Name": "string",
                "Zone3Code": "string",
                "Zone3GeoID": "number",
                "Zone3Name": "string",
                "Zone4Code": "string",
                "Zone4GeoID": "number",
                "Zone4Name": "string",
                "Zone5Code": "string",
                "Zone5GeoID": "number",
                "Zone5Name": "string",
            },
            "BITIV": "number",
            "BuildingTIV": "number",
            "CommonCharacteristics": {
                "AFMFireBuildingClass": "string",
                "AFMFireOccupancyClass": "string",
                "AirFiltrationCode": "number",
                "AirconditioningTypeCode": "number",
                "ArchitecturalElementsCode": "number",
                "ArchitecturalHeight": "number",
                "AtticInsulationCode": "number: Attic insulation reduces the heat loss from the building and hence reduces the snow melt on the roof that leads to ice dam formation from the gutter.",
                "AtticInsulationName": "string"
                "BIPreparednessCode": "number",
                "BIPreparednessDescription": "string",
                "BIRedundancyCode": "number: Captures redundancies within the same account, such as the existence of multiple locations that perform the same function to some extent.",
                "BIRedundancyName": "string",
                "BaseIsolationCode": "number: Buildings with base isolation float on a pad that dampers waves during an event. ",
                "BaseIsolationName": "string",
                "BasementCode": "string: Level of basement flood protection and basement function.",
                "BuildingHeight": "number: The building height, in feet or meters. Currently this data is for informational purposes and is not used in any loss calculations.",
                "BuildingHeightUOMID": "number: The unit of measurement used for building height.",
                "BuildingHeightUOMName": "string",
                "BuildingOwnershipCode": "number",
                "BuildingOwnershipName": "string",
                "Capacity": "number",
                "CapacityTypeID": "number",
                "CladdingCode": "number",
                "CladdingTypeCode": "number",
                "ClaimProcessRankID": "number",
                "ComAppurtenantCode": "string",
                "ConstructionCertificationCode": "number",
                "ConstructionClass": "Wood Frame",
                "ConstructionCompletePercent": "number: Indicates the percentage of construction that is completed. The percentage in this field is not used to adjust the vulnerability curves for incomplete construction. The exposure is simply reduced in proportion to the percentage entered, and the original vulnerability curve is used. Note that RMS(one) does not update this number over time. If no value is supplied, a default value of 100% is used.",
                "ConstructionCompletedDate": "string",
                "ConstructionQualityValuation": "number",
                "ConstructionRange": "string",
                "ConstructionScheme": "string",
                "ConstructionSchemeId": "number",
                "ConstructionStartedDate": "string: Date construction was started or completed. Unless you license and model Builders Risk, this field is for data capture only and is not used to calculate losses. If you enter a start date, completion date is required. Start date must be less than the completion date.",
                "ContainingPropertyID": "number",
                "ContentLossTrigger": "number: Presence of a content loss trigger indicates that this is a location that contributes to a Mini policy or a Wrap policy where a trigger deductible is applicable.",
                "ContentsVulnWaterCode": "string",
                "ContentsVulnWindCode": "number",
                "CrippleWallsBracedCode": "number: A cripple wall is a short wall that extends from the top of the footing to the level of the first floor, found almost exclusively in wood frame residential construction. These walls have no shear resistance and tend to perform poorly in earthquakes; damage to the building may be total. Post-1948 construction in California has not allowed the use of cripple walls.",
                "CrippleWallsBracedName": "string",
                "DesignCode": "number",
                "EQFrameConnectionCode": "number: Unbolted buildings may slide off their foundations during a strong earthquake, causing significant damage. Anchoring the frame to the foundation has proven to be the best means of protection against earthquake damage in frame structures.",
                "EQFrameConnectionName": "string",
                "EQSLInsurance": "number",
                "EngineeredFoundationCode": "number: Buildings whose foundations were designed to take into account the soil deformations anticipated for landslides or liquefaction. ",
                "EngineeredFoundationName": "string",
                "EnvelopeOpeningCode": "number: For shear wall buildings, the 50% rule refers to the area of a buildingâs exterior wall surface that consists of window and door openings. Buildings with more than 50% of the wall open are evaluated as having less seismic resistance. For the RMS Canada and U.S. Earthquake Model, this modifier has been removed. It applies to earthquake modeling for a limited number of older models.",
                "EnvelopeOpeningName": "string",
                "EquipmentEQBracingCode": "number: Specifies the overall quality of outdoor machinery and equipment bracing. For IFM exposures, use this rather than ground level equipment.",
                "EquipmentEQBracingName": "string",
                "EquipmentGroundFloorCode": "string: Ground-level equipment such as electrical, gas and water meters, and exterior access points for cable and telephone systems are prone to damage from flooding if not elevated or otherwise protected.",
                "EquipmentSideBracingCode": "string: Mechanical and electrical systems that are attached to external walls can receive damage from high winds.",
                "EquipmentSupportMaintenanceCode": "number: Buildings that show signs of distress or duress, such as cracking due to aging, ground settlement, and overloading or cracking due to damage from previous earthquakes, are likely to experience additional damage during an earthquake. ",
                "EquipmentSupportMaintenanceName": "string",
                "ExteriorEQCode": "number",
                "ExteriorEQName": "string",
                "ExteriorFLCode": "number",
                "ExteriorFLDescription": "string",
                "ExteriorHUCode": "number",
                "ExteriorHUDescription": "string",
                "ExteriorRatingCode": "number",
                "ExteriorRatingName": "string",
                "ExteriorTOCode": "number",
                "ExteriorTODescription": "string",
                "ExternalOrnamentationCode": "number: Ornamentation includes all elements that can shake loose from either roof or structural elements of the building. ",
                "FinishedFloorHeight": "number",
                "FireAlarm": "number",
                "FireDeptRatingCode": "number",
                "FireDeptRatingModifierCode": "number",
                "FireDeptRatingModifierName": "string",
                "FirePlace": "string",
                "FireSprinklerPresenceCode": "number",
                "FireSprinklerPresenceDescription": "string",
                "FireSprinklerTypeCode": "number: Sprinkler systems are classified as âwet pipeâ or âdry pipeâ. In general, wet pipe systems cause more damage than dry pipe systems during earthquakes. When the type of sprinkler system is unknown, the Earthquake Sprinkler Leakage (EQSL) Model uses an assumed inventory distribution of 70% wet pipe and 30% dry pipe to compute the sprinkler-leakage-related damages. Applying this secondary modifier for a location where it is known that the sprinkler system is either wet or dry refines the loss estimate associated with sprinkler leakage. ",
                "FireSprinklerTypeDescription": "string",
                "Flashing": "number: Indicates the quality of the flashing and coping installed at the roof. Flashing refers to thin continuous pieces of sheet metal or other water-impervious material that are installed to prevent the passage of water into a structure at locations where there is an abrupt change in the roof geometry. For example, it is placed around the base of discontinuities or objects that protrude from the roof of a building, such as mechanical openings and parapets, to deflect water away from the construction joints at these locations. Coping refers to thin continuous pieces of sheet metal or other water-impervious material that act as a cap on top of parapets and roof ridges to prevent water from entering a structure through the construction joints at these locations.",
                "FlashingDescription": "string",
                "FloodDefenseHeightUOMID": "number: Unit of measurement for flood defenses in feet or meters.",
                "FloodDefenseHeightUOMName": "string",
                "FloodMissileCode": "string: Buildings may receive damage from exposure to flood-carried missiles such as uprooted trees, branches, and sand.",
                "FloodProtectionCode": "string: Damage due to flood can be reduced if flood protection measures are implemented. ",
                "FloorArea": "number: Applies only to residential locations. Represents total living area, across all floors. Excludes garage, porches, decks, sunrooms, and basements. Used to assess residential vulnerability curves for U.S. Hurricane and Caribbean Hurricane analyses and for U.S. and Canada Severe Convective Storm and Winterstorm analyses (wind sub-peril only).",
                "FloorAreaUOMID": "number",
                "FloorAreaUOMName": "string",
                "FloorOccupied": "number: A single floor or range of floors occupied. Positive numbers represent floors above grade, and negative numbers represent floors below grade (i.e., basement levels). The maximum negative number is -5. The number of floors occupied should include consideration for the ground floor designation of â0,â which in some countries is designated as floor â1,â Thus, if floors 1 thru 4 are occupied, the number of stories should be at least 5. Floors occupied cannot exceed number of stories. Losses vary depending on the information entered in both the Floors Occupied and Number of Stories fields. RMS recommends specifying this value only if the location has a geocoding match level better than postcode.",
                "FloorSize": "number",
                "FloorTypeCode": "number: Type of floor materials. ",
                "FloorTypeDescription": "string",
                "FloorsUnderground": "number",
                "FoundationSystemCode": "string: A building that is inadequately connected to its foundation can fail catastrophically during a windstorm. ",
                "FrameFoundationConnectionCode": "number",
                "FrameFoundationConnectionDescription": "string",
                "GaragingCode": "number: Used to specify where automobiles are parked. This is applicable only to the Australia Severe Convective Storm model. ",
                "GaragingDescription": "string",
                "GroundFloorArea": "number",
                "HUZoneCode": "string",
                "HazardousExposures": "number",
                "HeatingTypeCode": "number",
                "HeightOfFloodDefenseCode": "number: The height of any flood defenses, such as flood walls, protecting the property. The height is measured relative to the North American Vertical Datum of 1988 (NAVD 88) for locations in the U.S. and relative to the World Geodetic System datum of 1984 (WGS 84) for locations in the Caribbean. Supports storm surge modeling.",
                "IFMEquipmentBracingCode": "number: Specifies the overall quality of outdoor machinery and equipment bracing. For IFM exposures, use this rather than ground level equipment.",
                "IFMEquipmentBracingDescription": "string",
                "IFMSiteHazardCode": "number: Specifies missiles and other environmental hazards.",
                "IFMSiteHazardDescription": "string",
                "IFMStructuralConditionCode": "number: This is a hybrid modifier used by the Industrial Facilities Model to capture both maintenance and construction/design quality. For IFM exposures, use this rather than construction quality.",
                "IFMStructuralConditionDescription": "string",
                "IFMVerticalExpDistCode": "number: Used only by the Industrial Facilities Model. Specifies how much exposure is located at the basement or grade level. This is available for surge contents (mechanical and equipment) only.",
                "IFMVerticalExpDistDescription": "string",
                "IceProtectionCode": "number: Ice dam protection membranes that are installed under the roof cover protect roofs from water damage due to ice dam buildup.",
                "IceProtectionDescription": "string",
                "IsMaintained": "number",
                "LandSquareFootage": "number",
                "MFDSubCategoryCode": "number: Multi-family dwelling subcategory, either apartment, condominium, townhouse/row house, other, or unknown. This field is for informational purposes and will be used in the RMS building valuation model. This field has no impact on loss calculations.",
                "MFDSubCategoryName": "string",
                "MechanicalElectricalFloor": "number",
                "NumBuildings": "number: number of buildings",
                "NumStories": "number: The number of stories for the structure. The default is 0, which is interpreted by RiskLink/RiskBrowser as âunknown.â This should be a single number, such as â6â or â22,â not â12-14â or â5 to 10.â The number of stories value designates the ground floor as Floor â1.â Structures are classified according to the number of stories they have; for example, one-story structures, 2â3 story structures, 4â7 story structures, and so on. The classifications vary by peril model, construction class, and occupancy type. For more information about the ranges used by a specific country peril, see the appropriate model methodology document. This field is highly recommended for peril model analyses.",
                "NumStoriesRange": "string",
                "NumUnits": "number",
                "NumberOfBaths": "number: number of baths",
                "NumberOfBedrooms": "number: number of bedrooms",
                "NumberOfCars": "number: number of cars",
                "NumberOfEscalators": "number: number of escalators",
                "OccupancyClass": "string",
                "OccupancyRange": "string",
                "OccupancyScheme": "string",
                "OccupancySchemeId": "number",
                "OnSiteFloodDefenceRP": "number",
                "OnsiteFloodDefenceHeight": "number",
                "OnsiteFloodHeightUnit": "number",
                "OpeningProtectCode": "string: Windows and doors with poor wind resistance can expose interior building components and contents to more wind and water hazards than openings with good wind resistance.",
                "OpeningProtectSecondaryCode": "string: Doors with poor wind resistance can expose interior building components and contents to more wind and water hazards than openings with good wind resistance.",
                "OrnamentationCode": "number",
                "ParkingGarageCode": "number",
                "PerformanceEQCode": "number: Poor construction is characterized by sloppy workmanship or inadequate use of construction materials. Even if a building was designed to be sufficiently earthquake resistant, poor construction can lead to excessive damage if critical structural elements were not assembled correctly.",
                "PerformanceEQDescription": "string",
                "PerformanceFLCode": "number",
                "PerformanceFLDescription": "string",
                "PerformanceHUCode": "number",
                "PerformanceHUDescription": "string",
                "PerformanceTOCode": "number",
                "PerformanceTODescription": "string",
                "PerilYearOfUpgrades": "string",
                "PlanIrregularityCode": "number: Configurations can be regular (square, rectangular, circular) or irregular (L-shape, T-shape, triangular). Irregular buildings tend to twist in addition to shaking laterally. Damage often occurs at the corners between different wings of a building. ",
                "PlanIrregularityDescription": "string",
                "PlumbingCode": "number: Insulation decreases temperature differences. Buildings with insulated plumbing are less likely to suffer from burst 
pipes and water damage.",
                "PlumbingDescription": "string",
                "PoundingCode": "number: Pounding occurs when there is little or no clearance between adjacent buildings, and the buildings impact or âpoundâ against each other as they sway during an earthquake.",
                "PoundingDescription": "string",
                "PrimaryConstructionID": "number",
                "PrimaryOccupancyID": "number",
                "PropertyType": "number",
                "PurlinAnchoringCode": "number: In older tilt-up structures, connections between the tilt-up walls and the roof framing system were designed inadequately for earthquake resistance. The failure of these connections can be prevented by the addition of special anchors. ",
                "PurlinAnchoringDescription": "string",
                "RemoteAlarmReliability": "number",
                "RemoteFireAlarmPresence": "string",
                "RentableBuildingArea": "number",
                "RentalPropertyIdentifier": "number: Indicates if the property is owner-insured or tenant-insured. This field is for informational purposes and is in the RMS building valuation model. This field has no impact on loss calculations.",
                "RentalPropertyIdentifierName": "string",
                "ResAppurtenantCode": "string",
                "ResidentialGradeCode": "number",
                "ResidentialGradeDescription": "string",
                "RoofAdditionsCode": "string: Roof parapets hang off the edge of roofs and may be at risk in high winds.",
                "RoofAgeConditionCode": "string: Well-maintained roofs tend to hold up better under high wind conditions. Older roofs may be at more risk to an event. ",
                "RoofAnchorCode": "string: This is one of the most important indicators of potential wind-induced damage. The failure or absence of anchors may result in the roof being blown off and the walls falling apart.",
                "RoofCoveringCode": "string: Damage is directly correlated to the type of roofing system in place. ",
                "RoofEquipmentCode": "string: If there are large areas of roof covered with equipment (e.g., anchored solar panels), the building is more vulnerable to wind because the equipment anchorage can compromise the roofâs structural integrity.",
                "RoofFrameCode": "string: The type of framing material for the roof affects the ability of the roof to stay attached to a building under high wind conditions.",
                "RoofGeometryCode": "string: This directly impacts the type of wind forces a roof is likely to experience, e.g., flat roofs are likely to experience more loading than hipped or high-pitched roofs.",
                "RoofMaintenanceCode": "string: Well-maintained roofs tend to hold up better under high wind conditions."
                "RoofSheathingAttachmentCode": "string: Roof sheathing is one of the main components of a building. It helps keep the integrity of the building and is a major line of defense against losses to building and contents due to both wind and rain. The strength of sheathing depends on the way it is attached to the roof rafters. Loss of roof sheathing often happens due to improper nailing design and schedule. ",
                "RoofVentCode": "number: Adequate roof ventilation ensures that the attic space is kept close to the ambient temperature, hence this prevents snow on a roof surface melting and formation of ice dams. ",
                "RoofVentDescription": "string",
                "SecondaryOccupancies": "string",
                "SecurityAlarm": "string",
                "ServiceZoneID": "number",
                "SetBackFromStreetCode": "number",
                "ShortColumnConditionCode": "number: Concrete structures in which the full height of some columns has been restricted by spandrel beams or in fill walls. These columns will experience excessive loading and could fail in shear. ",
                "ShortColumnConditionDescription": "string",
                "SnowGuardsCode": "number: The presence of snow guards allows the snow to distribute evenly over a sloping roof rather than snow drifting toward the gutter. This minimizes the snow volume available to form and maintain an ice dam. This also reduces the likelihood of snow drift loads causing roof deflection and possible roof collapse. ",
                "SnowGuardsDescription": "string",
                "SoftStoryCode": "number: Many buildings have shear walls or infill walls at the upper floors that are interrupted at the first floor to provide more open space for car parking, lobbies and retail space. The first floor in these cases acts as a âsoft storyâ and will sustain excessive deformations and stresses in a major earthquake, unless designed specifically to take the stiffness discontinuity into account. ",
                "SoftStoryDescription": "string",
                "SprinklerLeakageSusceptibilityCode": "number",
                "SprinklerLeakageSusceptibilityDescription": "string",
                "StructuralRedundancyCode": "number: Redundancy refers to having multiple lateral load resisting elements (frames or shear walls) in a building. Redundancy is a desirable feature because of one structural system fails during an earthquake, another system is present to resist the lateral earthquake forces, thus avoiding catastrophic collapse. For the RMS Canada and U.S. Earthquake Model, this modifier has been removed. It applies to earthquake modeling for a limited number of older models.",
                "StructuralRedundancyDescription": "string",
                "StructuralUpgradeNonURMCode": "number: This structural upgrade characteristic applies to buildings that have been retrofitted in some way to provide superior earthquake resistive capabilities. This generally applies to older buildings that have been upgraded to conform to more modern building codes. ",
                "StructuralUpgradeNonURMDescription": "string",
                "SurroundingBuildingDensity": "number",
                "TankCode": "number: Rooftop tanks on adjoining, higher buildings are a falling hazard during an earthquake. For the RMS Canada and U.S. Earthquake Model, this modifier has been removed. It applies to earthquake modeling for a limited number of older models.",
                "TankDescription": "string",
                "TaxValue": "number",
                "TopologicalFeatures": "number",
                "TorsionCode": "number: The geometry of the lateral load resisting system. Asymmetry can aggravate damage by inducing twisting, torsion, and differential motion in the building. Some of the most common occurrences of asymmetry are in frame buildings with a stiff elevator core that is placed asymmetrically. For the RMS Canada and U.S. Earthquake Model, this modifier has been removed. It applies to earthquake modeling for a limited number of older models.",
                "TorsionDescription": "string",
                "TotalRooms": "number",
                "TreeDensityCode": "number: Buildings adjacent to trees may receive damage from trees falling within striking distance. ",
                "TreeDensityDescription": "string",
                "URMChimneyPartitionWallCode": "number: Only unreinforced masonry (brick or hollow clay tile) walls or partitions are considered to have significant impact upon a buildingâs damageability. The collapse of these partitions can contribute significantly to the overall dollar value damage to a structure. In USGS seismic zone 4 in California, they are not used in post-1934 construction. This item also includes unreinforced masonry chimneys.",
                "URMChimneyPartitionWallName": "string",
                "URMRetrofitCode": "number: Several jurisdictions in California U.S.G.S. seismic zone 4 have instituted mandatory seismic retrofit programs for unreinforced masonry buildings. ",
                "URMRetrofitDescription": "string",
                "UseContentValue": "number",
                "UsesPublicAdjustor": "number",
                "VerticalIrregularityCode": "number: Significant setbacks and overhangs can cause irregular structural performance in an earthquake. Resulting stress concentrations can lead to further damage. ",
                "VerticalIrregularityDescription": "string",
                "WindMissileExposureCode": "string: Buildings may receive damage from exposure to airborne missiles, gravel, or from trees within falling distance.",
                "WindowTypeCode": "number",
                "XREFExposureSourceBuildingID": "string",
                "YearBuilt": "number: The year in which the structure was constructed. This field is highly recommended for peril model analyses.",
                "YearBuiltRange": "string",
            },
            "ContentTIV": "number",
            "CurrencyCode": "string",
            "DQScore": "string",
            "EnhancementStatus": "string",
            "Hazard": {
                "ModelHazard": {
                    "EQ": {
                        "EQVintageId": "number",
                        "Landslide": {
                            "LandslideDesc": "string",
                            "LandslideResolutionCode": "number",
                            "LandslideResolutionName": "string",
                            "LandslideUncertainty": "number",
                            "LandslideValue": "number",
                            "UserDefinedLandslide": "number",
                            "UserDefinedLandslideResolutionCode": "number",
                        },
                        "Liquefaction": {
                            "LiquefactionConfidenceArea": "string",
                            "LiquefactionDesc": "string",
                            "LiquefactionNeighboringTypes": "string: In addition to providing the liquefaction susceptibility at the geocoded coordinates, configuration settings can be set to display all susceptibility types within a specified buffer. This output provides an excellent measure of liquefaction risk associated with nearby areas.",
                            "LiquefactionResolutionCode": "number",
                            "LiquefactionResolutionName": "string",
                            "LiquefactionUncertainty": "number",
                            "UserDefinedLiquefactionResolutionCode": "number",
                            "UserDefinedliquefaction": "number",
                            "liquefaction": "number",
                        },
                        "Soil": {
                            "BasinLocID": "number",
                            "BusinessInterruptionZoneId": "number",
                            "FireExposureType1": "number",
                            "FireExposureType2": "number",
                            "FireExposureType3": "number",
                            "FireExposureType4": "number",
                            "FireHazardParameters1": "number",
                            "FireHazardParameters2": "number",
                            "FireHazardParameters3": "number",
                            "FireHazardParameters4": "number",
                            "FireUncertainty": "number",
                            "ModelLoResBasinLocID": "number",
                            "ModelLoResSoilPeriod": "number",
                            "ModelLoResSoilPeriodUncertainty": "number",
                            "ModelLoResSoilThickness": "number",
                            "ModelLoResSoilType": "number",
                            "ModelLoResSoilTypeResolutionCode": "number",
                            "ModelLoResSoilTypeUncertainty": "number",
                            "ModelLoResSoilVS": "number",
                            "ModelVRGSoilType": "number",
                            "ModelVRGSoilTypeResolutionCode": "number",
                            "SoilConfidenceArea": "string",
                            "SoilNeighboringTypes": "string: In addition to providing the soil type the at the geocoded coordinates, configuration settings can be set to display all susceptibility types within a specified buffer. This output provides an excellent measure of soil risk associated with nearby areas.",
                            "SoilPeriod": "number",
                            "SoilPeriodUncertainty": "number",
                            "SoilThickness": "number",
                            "SoilType": "number",
                            "SoilTypeDesc": "string",
                            "SoilTypeResolutionCode": "number",
                            "SoilTypeResolutionName": "string",
                            "SoilTypeUncertainty": "number",
                            "SoilVS": "number",
                            "UserDefinedSoilType": "number",
                            "UserDefinedSoilTypeResolutionCode": "number",
                        }
                    },
                    "HU": {
                        "DistanceToCoast": {
                            "CustomDistanceToCoast": "number",
                            "CustomDistanceToCoastDataVintageId": "number",
                            "CustomDistanceToCoastResolutionCode": "number",
                            "DistanceToCoastCV": "number: The uncertainty around the distance to coast value, weighted by exposure.",
                            "DistanceToCoastResolutionCode": "number: The resolution of the hazard data that is available for the location.",
                            "DistanceToCoastResolutionName": "string",
                            "DistanceToCoastValue": "number: Distance to the RMS Coastline in miles for the hurricane states. The RMS coastline matches the actual geographical coastline and provides a more accurate distance to coast  calculation for assessing hurricane risk especially when considering the risk of storm surge at a location.",
                            "DistanceToOuterCoast": "number",
                            "DistanceToOuterCoastResolutionCode": "number",
                            "UserDefinedDistanceToCoast": "number: Distance to coast values imported by the user.",
                            "UserDefinedDistanceToCoastResolutionCode": "number: Resolution of imported values.",
                            "UserDefinedDistanceToCoastResolutionName": "string",
                            "WaveAmplificationFactor": "number",
                        },
                        "Elevation": {
                            "BuildingElevation": "number: The elevation of the lowest occupied floor of a building measured relative to the North American Vertical Datum of 1988 (NAVD 88) for locations in the U.S. and relative to the World Geodetic System datum of 1984 (WGS 1984) for locations in the Caribbean. If you do not enter a value, this is filled during hazard retrieval and is equal to RMS Building Elevation. Supports storm surge modeling. Data retrieved during hazard retrieval is in feet.",
                            "BuildingElevationResolutionCode": "number: The resolution of the hazard data that is available for the location.",
                            "BusinessInterruptionZoneId": "number",
                            "ElevationResolutionCode": "number: The resolution of the hazard data that is available for the location.",
                            "ElevationResolutionName": "string",
                            "ElevationUncertainty": "number",
                            "NFIPRate": "number: The fraction of single-family dwellings in an area that have flood insurance through the National Flood Insurance Program (NFIP) managed by the U.S. Federal Emergency Management Agency (FEMA). Filled during hazard retrieval. Supports storm surge modeling.",
                            "NFIPRateResolutionCode": "number: Resolution of imported values.",
                            "NFIPYear": "number: The year in which the National Flood Insurance Program (NFIP) was adopted at a location. Supports storm surge modeling.",
                            "NFIPYearResolutionCode": "number: Resolution of imported values.",
                            "UserDefinedBuildingElevation": "number: Building elevation values imported by the user.",
                            "UserDefinedBuildingElevationResolutionCode": "number: Resolution of imported values.",
                            "UserDefinedBuildingElevationResolutionName": "string",
                            "UserDefinedElevation": "number: Elevation values imported by the user.",
                            "UserDefinedElevationResolutionCode": "number: Resolution of imported values.",
                            "UserDefinedElevationResolutionName": "string",
                            "UserDefinedNFIPYear": "number: The year in which the National Flood Insurance Program (NFIP) was adopted at hazard retrieval.",
                            "UserDefinedNFIPYearResolutionCode": "number: Resolution of imported values.",
                            "UserDefinedNFIPYearResolutionName": "string",
                            "elevation": "number",
                        },
                        "HUVintageId": "number",
                        "NaturalRoughness": {
                            "NaturalRoughnessCode": "number",
                            "NaturalRoughnessName": "string",
                            "NaturalRoughnessResolutionCode": "number: The resolution of the hazard data that is available for the location.",
                            "NaturalRoughnessUncertainty": "number: Uncertainty of natural surface roughness, weighted by exposure.",
                            "NaturalRoughnessValue": "number: Value for natural surface roughness.",
                        }
                    },
                    "HashId": "string"
                },
                "NonModelHazard": {
                    "APZone": {
                        "APZoneResolutionCode": "number",
                        "APZoneVintageId": "number",
                        "AlquistPrioloConfidenceArea": "string: A confidence area is a region that represents the possible uncertainty of a plotted location on the map. 
                        The size of the confidence area is configurable, and the following will be reported: (1) The entire confidence area falls outside an 
                        Alquist-Priolo Zone, or (2) the entire confidence area falls inside an Alquist-Priolo Zone.",
                        "AlquistPrioloZone": "number: The Alquist-Priolo Earthquake Fault Zones are regulatory zones around active faults in the state of California. 
                        The zones are defined by the State Geologist to identify areas at risk from surface fault rupture. The zones vary in width, but average 
                        about one-quarter mile wide. Zone boundaries are approximately 500 feet on either side of major active faults, and approximately 
                        200-300 feet on either side of well-defined minor faults.",
                    },
                    "Flood": {
                        "BaseFloodElevation": "number: Defined by FEMA as the height of the base (100-year) flood in relation to a specified datum, usually the National Geodetic 
                        Vertical Datum of 1929 or North American Vertical Datum of 1983. Generally speaking, this is the elevation of the 100-year flood waters 
                        relative to "mean sea level". BFE is not depth of flooding. To determine depth of flooding, you would need to subtract the lowest elevation 
                        of a particular property from the BFE. For example, if the property's foundation was at an elevation of 125 feet and the BFE was 131 feet, 
                        then one might infer that the 100-year depth of flooding would be approximately 6 feet.",
                        "CobraArea": "number: A naturally occurring island, sandbar, or other strip of land, including coastal mainland, that protects the coast from severe wave wash. For the purposes of the NFIP, the Coastal Barrier Resources Act of 1982 designated certain portions of the Gulf and East Coasts as undeveloped coastal barriers. 
                        These areas are shown on appropriate flood insurance map panels and have certain coverage restrictions.",
                        "FemaCommunityNum": "number: A political entity that has the authority to adopt and enforce floodplain ordinances for the area under its jurisdiction.",
                        "FloodAdditionalInformation": "string: Additional information that FEMA provides for the map panel in question.",
                        "FloodAnnualProbability": "string: The annual probability of flooding.",
                        "FloodDataSourceCode": "string: The source of FEMA base map information where available.",
                        "FloodLookupConfidence": "number: A confidence area is a region that represents the possible uncertainty of a plotted location on the map. The size of 
                        the confidence area is configurable, and the following will be reported: (1) Portions of the confidence area fall outside of a zone with XXX liquefaction susceptibility, 
                        or (2) the entire confidence area falls in a zone with XXX liquefaction susceptibility.",
                        "FloodNeighboringZones": "string: In addition to providing the Flood Zone the at the geocoded coordinates, configration settings can be set to display all zones within a specified buffer. 
                        This output provides an excellent measure of flood risk associated with nearby areas.",
                        "FloodPanelNumber": "string: Panel number is numerical designation used to identify the FIRM Map associated with a given area. The first
                        six digits of the panel number is the community number.",
                        "FloodResolutionCode": "number: The resolution of the hazard data that is available for the location.",
                        "FloodVintageId": "number: Vintage of the data used in the hazard lookup.",
                        "FloodZone": "string: The designated flood zone of the location using RMS Enhanced Flood data."
                        "Floodway": "number: Any land area susceptible to being inundated by floodwaters from any source.",
                        "MapPanelUnderRevision": "number: Indicates if the map panel is under revision by FEMA.",
                        "SpecialFloodHazardArea": "number: An area designated as within a "Special Flood Hazard Area" (or SFHA) on a FIRM. This is an area 
                        inundated by 1% annual chance flooding for which BFEs or velocity may have been determined. No distinctions are made between the 
                        different flood hazard zones that may be included within the SFHA. These may include Zones A, AE, AO, AH, A99, AR, V, or VE. 
                        An area designated as outside a "Special Flood Hazard Area"(or SFHA) on a FIRM. This is an area inundated by 0.2% annual chance flooding;
                        an area inundated by 1% annual chance flooding with average depths of less than 1 foot or with drainage areas less than 1 square mile; 
                        an area protected by levees from 1% annual chance flooding; or an area that is determined to be outside the 1% and 0.2% annual chance 
                        floodplains. No distinctions are made between these different conditions. These may include both shaded and unshaded areas of Zone X.",
                    },
                    "HashId": "string",
                    "MMI": {
                        "MMI100YrReturnPeriod": "number",
                        "MMI200YrReturnPeriod": "number",
                        "MMI250YrReturnPeriod": "number",
                        "MMI475YrReturnPeriod": "number",
                        "MMIResolutionCode": "number",
                        "MMIVintageId": "number",
                    },
                    "Slope": "string",
                    "Subsidence": {
                        "MineList": "string",
                        "SinkholeList": "string",
                        "SinkholeNeighboringZones": "string",
                        "SinkholeZoneClass": "number",
                        "SinkholeZoneClassDescription": "string",
                        "SinkholeZoneConfidenceArea": "string",
                        "SinkholeZoneResolutionCode": "number",
                        "SubsidenceVintageId": "number: Vintage of the data used in the hazard lookup.",
                    },
                    "Wildfire": {
                        "WildfireAccessibility": "number: Estimated response time for land-based fire-suppression efforts.",
                        "WildfireArea": "number: A descriptive label for the Wildland Urban Interface definition for the location.",
                        "WildfireClimateConditions": "string: Specific climactic conditions that apply to the location, such as âSanta Ana Winds,â âDiablo Winds,â or âSundowner.â ",
                        "WildfireHazard": "number: The annual likelihood of severe damage to an average residential structure. ",
                        "WildfireLocalFireHistory": "number: Approximate annual number of fires expected (occurrence rate).",
                        "WildfireNearbyFireHistory": "number: Approximate annual number of fires expected (occurrence rate) within a 1/2 to 4 mile radius.",
                        "WildfireResolutionCode": "number: The resolution of the hazard data that is available for the location. ",
                        "WildfireSurfaceFuel": "string: Predominant surface fuel type. ",
                        "WildfireSusceptibility": "string: The likelihood of severe damage to an average residential structure given that a wildfire is within the vicinity.",
                        "WildfireThreat": "number: Annual likelihood that a wildfire occurs within or spreads into the vicinity.",
                        "WildfireVintageId": "number",
                    },
                    "Windpool": {
                        "WindpoolType": "string",
                        "WindpoolVintageId": "number",
                        "WindpoolZone": "string",
                        "WindpoolZoneConfidenceArea": "string",
                        "WindpoolZoneResolutionCode": "number",
                    }
                }
            },
            "HundredPercentCorrelation": "number",
            "IdTagPairs": "string",
            "LastUpdateUserId": "number",
            "ParentRITExposureId": "number",
            "PrimaryRisk": "number",
            "RiskItemScheduleId": "number",
            "RiskitemCharacteristicsList": {
                "HashId": "string",
                "Items": [
                    {
                        "__type": "RealPropertyCharacteristicsValuation:#Rms.DataServices.RestObjects",
                        "ExternalSourceId": "string",
                        "Id": "number",
                        "ParentId": "number",
                        "RITExposureValuationList": [
                            {
                                "ValuationBasisID": "number",
                                "ValuationID": "number",
                                "ValuationProvenance": "string",
                                "ValuationTypeID": "number: Valuation type is most commonly used to distinguish between replacement cost value (RCV) and actual cash value (ACV). RCV is the default for property risks of all types. In property insurance, ACV describes the current depreciated value of the asset and can be the basis for insurance valuation when a lower premium is desired. ACV is computed by subtracting depreciation from the replacement cost. The depreciation is usually calculated by establishing a useful life of the item and determining what percentage of that life remains. This percentage times the replacement cost gives the ACV.",
                                "Value": "number",
                            }
                        ],
                        "RiskItemName": "number",
                        "RiskItemNumber": "number",
                        "RiteTypeId": "number",
                    },
                    {
                        "__type": "MoveablePropertyCharacteristicsValuation:#Rms.DataServices.RestObjects",
                        "ExternalSourceId": "string",
                        "Id": "number",
                        "ParentId": "number",
                        "RITExposureValuationList": [
                            {
                                "ValuationBasisID": "number",
                                "ValuationID": "number",
                                "ValuationProvenance": "string",
                                "ValuationTypeID": "number",
                                "Value": "number",
                            }
                        ],
                        "RiskItemName": "number",
                        "RiskItemNumber": "number",
                        "RiteTypeId": "number",
                        "ContentsRateGrades": [
                            {
                                "PerilCode": "string",
                                "contentsRateGrade": "number",
                            },
                            {
                                "PerilCode": "string",
                                "contentsRateGrade": "number",
                            },
                            {
                                "PerilCode": "string",
                                "contentsRateGrade": "number",
                            }
                        ],
                        "EqslGrade": "string",
                        "FragilityID": "string",
                        "UserDefMovablePropertyTypeID": "number"
                    }
                ]
            },
            "SubjectAtRisk": {
                "Construction": "string",
                "CreateUserID": "number",
                "ExternalSourceId": "string",
                "NumberOfBuildings": "number",
                "NumberOfRiskItems": "number",
                "NumberOfStories": "number",
                "Occupancy": "string",
                "SubjectAtRiskID": "number",
                "SubjectAtRiskName": "string",
                "SumOfBIValues": "number",
                "SumOfBuildingValues": "number",
                "SumOfContentsValues": "number",
                "TIV": "number",
                "TotalFloorArea": "number",
            },
            "TIV": "number",
        }
}


    ```

### GET riskItem [GET]
Returns the specified risk item.

+ Response 200
    
    [riskItem][]


### PUT riskItem [PUT]
Updates the specified risk item.

+ Request

    ```js
        { 
            "riskItemInput": {
                "Description": "string",
                "Name": "string",
                "Number": "number",
                "SourceId": "string",
                "Address": {
                                "ACORDResolutionCode": "string",
                                "AddressSchemeID": "number",
                                "AddressText": "string",
                                "AddressType": "number",
                                "AddressTypeName": "string",
                                "Admin1Code": "string",
                                "Admin1Fips": "string",
                                "Admin1GeoID": "number",
                                "Admin1Name": "string: Administrative divisions refer to geographic divisions, such as states and provinces, and vary by country. Administrative Division1 (Admin1) represents large geographic divisions, such as states and provinces, and corresponds to state-level geocoding resolution (resolution code 10). ",
                                "Admin2Code": "string",
                                "Admin2Fips": "string",
                                "Admin2GeoID": "number",
                                "Admin2Name": "string: Administrative Division2 (Admin2) represents smaller geographic divisions, such as counties, and corresponds to county-level geocoding resolution (resolution code 9).",
                                "Admin3Code": "string",
                                "Admin3GeoID": "number",
                                "Admin3Name": "string: Administrative Division3 (Admin3) represents even smaller geographic divisions, such as districts, and corresponds to district-level geocoding resolution (resolution code 8).",
                                "Admin4Code": "string",
                                "Admin4GeoID": "number",
                                "Admin4Name": "string",
                                "Admin5Code": "string",
                                "Admin5GeoID": "number",
                                "Admin5Name": "string",
                                "Alley": "string",
                                "ApnId": "string",
                                "Block": "string",
                                "BlockGroup": "string",
                                "BuildingName": "string",
                                "CityCode": "string",
                                "CityGeoID": "number",
                                "CityName": "string",
                                "CountryCode": "string",
                                "CountryGeoID": "number",
                                "CountryName": "string",
                                "CountryScheme": "string: The scheme used for importing country codes: ISO2A: 2-character ISO, ISO3A: 3-character ISO, ISO3N: 3-digit ISOFIPS.",
                                "CountryUnitCode": "string",
                                "CreateUserID": "number",
                                "ESDBAddressID": "string",
                                "ESDBBuildingID": "string",
                                "FirmName": "string",
                                "GeoDataSourceID": "number",
                                "GeoModelResolutionCode": "number",
                                "GeoVintageId": "number",
                                "GeocodeProductVersion": "string",
                                "GeocodingAccuracyBuffer": "number",
                                "GeocodingCV": "number",
                                "GeocodingLocationCode": "string",
                                "GeocodingMatchCode": "string: Geocode match levels represent the resolution at which a location is geocoded. Supported match levels vary by country.",
                                "GeocodingResolutionCode": "number",
                                "GeocodingResolutionConfidence": "number",
                                "HashId": "string",
                                "HiRange": "string",
                                "HiUnit": "string",
                                "HouseNumber": "string",
                                "IsExtended": "number",
                                "IsIntersection": "string",
                                "IsSubmittedAddress": "number",
                                "Latitude": "number: RMS(one) identifies latitude and longitude when a risk location is risk location geocoded. User can also enter a valid latitude and longitude, and RMS(one) can retrieve the corresponding ZIP Code for U.S. s.",
                                "LoUnit": "string",
                                "LocationCode": "string",
                                "LocationCodeGeoID": "number",
                                "Longitude": "number: RMS(one) identifies latitude and longitude when a risk location is geocoded. User can also enter a valid latitude and longitude, and RMS(one) can retrieve the corresponding ZIP Code for U.S. risk locations.",
                                "LowRange": "string",
                                "ParcelNumber": "string: Parcel-level matches are based on property parcels. Property parcels contain information on the boundaries, ownership, value, zoning, and other aspects of a commercial or residential property in the U.S. Parcel data is consistent over time and covers more than 50 percent of the privately owned U.S. parcels. Parcel centroids provide highly accurate geocoding matches, although it is not always as accurate as a building footprint geocoding that is achievable with RMS' Sanborn data sets. It is superior to street address geocoding because it is not subject to address interpolation errors.",
                                "PostDir": "string",
                                "PostDir2": "string",
                                "PostalCode": "string",
                                "PostalCode1GeoID": "number",
                                "PostalCode2GeoID": "number",
                                "PostalCode3GeoID": "number",
                                "PostalCodeGeoID": "number",
                                "PreDir": "string",
                                "PreDir2": "string",
                                "PreferredCity": "string",
                                "QuadKey": "number",
                                "RangeParity": "string",
                                "SanbornAreaID": "number: Square Footage for the building as defined by the Sanborn Mapping Company. ",
                                "SanbornBuildingID": "string: The building identifier as defined by the Sanborn Mapping Company.",
                                "SegmentId": "string",
                                "SegmentParity": "string",
                                "StreetAddress": "string",
                                "StreetName": "string",
                                "StreetName2": "string",
                                "StreetType": "string",
                                "StreetType2": "string",
                                "UnitNumber": "string",
                                "UnitType": "string",
                                "Zip4": "string",
                                "Zone1Code": "string",
                                "Zone1GeoID": "number",
                                "Zone1Name": "string: The California PML Zone number for United States risk locations. The CRESTA Zone for non-United States risk locations.",
                                "Zone2Code": "string",
                                "Zone2GeoID": "number",
                                "Zone2Name": "string",
                                "Zone3Code": "string",
                                "Zone3GeoID": "number",
                                "Zone3Name": "string",
                                "Zone4Code": "string",
                                "Zone4GeoID": "number",
                                "Zone4Name": "string",
                                "Zone5Code": "string",
                                "Zone5GeoID": "number",
                                "Zone5Name": "string",
                },
                "CommonCharacteristics": {
                                "AFMFireBuildingClass": "string",
                                "AFMFireOccupancyClass": "string",
                                "AirFiltrationCode": "number",
                                "AirconditioningTypeCode": "number",
                                "ArchitecturalElementsCode": "number",
                                "ArchitecturalHeight": "number",
                                "AtticInsulationCode": "number: Attic insulation reduces the heat loss from the building and hence reduces the snow melt on the roof that leads to ice dam formation from the gutter. ",
                                "AtticInsulationName": "string",
                                "BIPreparednessCode": "number",
                                "BIPreparednessDescription": "string",
                                "BIRedundancyCode": "number: Captures redundancies within the same account, such as the existence of multiple locations that perform the same function to some extent. ",
                                "BIRedundancyName": "string",
                                "BaseIsolationCode": "number: Buildings with base isolation float on a pad that dampers waves during an event. ",
                                "BaseIsolationName": "string",
                                "BasementCode": "string: Level of basement flood protection and basement function. ",
                                "BuildingHeight": "number: The building height, in feet or meters. Currently this data is for informational purposes and is not used in any loss calculations.",
                                "BuildingHeightUOMID": "number: The unit of measurement used for building height. ",
                                "BuildingHeightUOMName": "string",
                                "BuildingOwnershipCode": "number",
                                "BuildingOwnershipName": "string",
                                "Capacity": "number",
                                "CapacityTypeID": "number",
                                "CladdingCode": "number",
                                "CladdingTypeCode": "number",
                                "ClaimProcessRankID": "number",
                                "ComAppurtenantCode": "string",
                                "ConstructionCertificationCode": "number",
                                "ConstructionClass": "string",
                                "ConstructionCompletePercent": "number: Represents the completion percentage of a building under construction. The percentage in this field is not used to adjust the vulnerability curves for incomplete construction. The exposure is simply reduced in proportion to the percentage entered, and the original vulnerability curve is used. Note that RMS(one) does not update this number over time. If no value is supplied, a default value of 100% is used.",
                                "ConstructionCompletedDate": "string",
                                "ConstructionQualityValuation": "number",
                                "ConstructionRange": "string",
                                "ConstructionScheme": "number",
                                "ConstructionSchemeId": "number",
                                "ConstructionStartedDate": "string: Date construction was started or completed. Unless you license and model Builders Risk, this field is for data capture only and is not used to calculate losses. See the Builders Risk User Guide for more information about using these fields for modeling builders risk. If you enter a start date, completion date is required. Start date must be less than the completion date.",
                                "ContainingPropertyID": "number",
                                "ContentLossTrigger": "number: Presence of a content loss trigger indicates that this is a location that contributes to a Mini policy or a Wrap policy where a trigger deductible is applicable. ",
                                "ContentsVulnWaterCode": "string",
                                "ContentsVulnWindCode": "string",
                                "CrippleWallsBracedCode": "number: A cripple wall is a short wall that extends from the top of the footing to the level of the first floor, found almost exclusively in wood frame residential construction. These walls have no shear resistance and tend to perform poorly in earthquakes; damage to the building may be total. Post-1948 construction in California has not allowed the use of cripple walls. ",
                                "CrippleWallsBracedName": "string",
                                "DesignCode": "number",
                                "EQFrameConnectionCode": "number: Unbolted buildings may slide off their foundations during a strong earthquake, causing significant damage. Anchoring the frame to the foundation has proven to be the best means of protection against earthquake damage in frame structures.",
                                "EQFrameConnectionName": "string",
                                "EQSLInsurance": boolean,
                                "EngineeredFoundationCode": "number: Buildings whose foundations were designed to take into account the soil deformations anticipated for landslides or liquefaction. ",
                                "EngineeredFoundationName": "string",
                                "EnvelopeOpeningCode": "number: For shear wall buildings, the 50% rule refers to the area of a buildingâs exterior wall surface that consists of window and door openings. Buildings with more than 50% of the wall open are evaluated as having less seismic resistance. For the RMS Canada and U.S. Earthquake Model, this modifier has been removed. It applies to earthquake modeling for a limited number of older models.",
                                "EnvelopeOpeningName": "string",
                                "EquipmentEQBracingCode": "number",
                                "EquipmentEQBracingName": "string",
                                "EquipmentGroundFloorCode": "string: Ground-level equipment such as electrical, gas and water meters, and exterior access points for cable and telephone systems are prone to damage from flooding if not elevated or otherwise protected. ",
                                "EquipmentSideBracingCode": "string: Mechanical and electrical systems that are attached to external walls can receive damage from high winds.",
                                "EquipmentSupportMaintenanceCode": "number: Buildings that show signs of distress or duress, such as cracking due to aging, ground settlement, and overloading or cracking due to damage from previous earthquakes, are likely to experience additional damage during an earthquake. ",
                                "EquipmentSupportMaintenanceName": "string",
                                "ExteriorEQCode": "number",
                                "ExteriorEQName": "string",
                                "ExteriorFLCode": "number",
                                "ExteriorFLDescription": "string",
                                "ExteriorHUCode": "number",
                                "ExteriorHUDescription": "string",
                                "ExteriorRatingCode": "number",
                                "ExteriorRatingName": "string",
                                "ExteriorTOCode": "number",
                                "ExteriorTODescription": "string",
                                "ExternalOrnamentationCode": "number: Ornamentation includes all elements that can shake loose from either roof or structural elements of the building. ",
                                "FinishedFloorHeight": "number",
                                "FireAlarm": "number",
                                "FireDeptRatingCode": "number",
                                "FireDeptRatingModifierCode": "number",
                                "FireDeptRatingModifierName": "string",
                                "FirePlace": "string",
                                "FireSprinklerPresenceCode": "number",
                                "FireSprinklerPresenceDescription": "string",
                                "FireSprinklerTypeCode": "number: Sprinkler systems are classified as âwet pipeâ or âdry pipeâ. In general, wet pipe systems cause more damage than dry pipe systems during earthquakes. When the type of sprinkler system is unknown, the Earthquake Sprinkler Leakage (EQSL) Model uses an assumed inventory distribution of 70% wet pipe and 30% dry pipe to compute the sprinkler-leakage-related damages. Applying this secondary modifier for a location where it is known that the sprinkler system is either wet or dry refines the loss estimate associated with sprinkler leakage. ",
                                "FireSprinklerTypeDescription": "string",
                                "Flashing": "number: Indicates the quality of the flashing and coping installed at the roof. Flashing refers to thin continuous pieces of sheet metal or other water-impervious material that are installed to prevent the passage of water into a structure at locations where there is an abrupt change in the roof geometry. For example, it is placed around the base of discontinuities or objects that protrude from the roof of a building, such as mechanical openings and parapets, to deflect water away from the construction joints at these locations. Coping refers to thin continuous pieces of sheet metal or other water-impervious material that act as a cap on top of parapets and roof ridges to prevent water from entering a structure through the construction joints at these locations. ",
                                "FlashingDescription": "string",
                                "FloodDefenseHeightUOMID": "number: Unit of measurement for flood defenses, either feet or meters.",
                                "FloodDefenseHeightUOMName": "string",
                                "FloodMissileCode": "string: Buildings may receive damage from exposure to flood-carried missiles such as uprooted trees, branches, and sand.",
                                "FloodProtectionCode": "string: Damage due to flood can be reduced if flood protection measures are implemented. ",
                                "FloorArea": "number: Applies only to residential locations. Represents total living area, across all floors. Excludes garage, porches, decks, sunrooms, and basements. Used to assess residential vulnerability curves for U.S. Hurricane and Caribbean Hurricane analyses and for U.S. and Canada Severe Convective Storm and Winterstorm analyses (wind sub-peril only).",
                                "FloorAreaUOMID": "number",
                                "FloorAreaUOMName": "string",
                                "FloorOccupied": "number: A single floor or range of floors occupied. Positive numbers represent floors above grade, and negative numbers represent floors below grade (i.e., basement levels). The maximum negative number is -5. The number of floors occupied should include consideration for the ground floor designation of â0,â which in some countries is designated as floor â1,â Thus, if floors 1 thru 4 are occupied, the number of stories should be at least 5. Floors occupied cannot exceed number of stories. Losses vary depending on the information entered in both the Floors Occupied and Number of Stories fields. RMS recommends specifying this value only if the location has a geocoding match level better than postcode.",
                                "FloorSize": "number",
                                "FloorTypeCode": "number: Type of floor materials. ",
                                "FloorTypeDescription": "string",
                                "FloorsUnderground": "number",
                                "FoundationSystemCode": "string: A building that is inadequately connected to its foundation can fail catastrophically during a windstorm. ",
                                "FrameFoundationConnectionCode": "number",
                                "FrameFoundationConnectionDescription": "string",
                                "GaragingCode": "number: Used to specify where automobiles are parked. This is applicable only to the Australia Severe Convective Storm model. ",
                                "GaragingDescription": "string",
                                "GroundFloorArea": "number",
                                "HUZoneCode": "string",
                                "HazardousExposures": "number",
                                "HeatingTypeCode": "number",
                                "HeightOfFloodDefenseCode": "number: The height of any flood defenses, such as flood walls, protecting the property. The height is measured relative to the North American Vertical Datum of 1988 (NAVD 88) for locations in the U.S. and relative to the World Geodetic System datum of 1984 (WGS 84) for locations in the Caribbean. Supports storm surge modeling.",
                                "IFMEquipmentBracingCode": "number: Specifies the overall quality of outdoor machinery and equipment bracing. For IFM exposures, use this rather than Ground Level Equipment.",
                                "IFMEquipmentBracingDescription": "string",
                                "IFMSiteHazardCode": "number: Specifies missiles and other environmental hazards.",
                                "IFMSiteHazardDescription": "string",
                                "IFMStructuralConditionCode": "number: This is a hybrid modifier used by the Industrial Facilities Model to capture both maintenance and construction/design quality. For IFM exposures, use this rather than construction quality.",
                                "IFMStructuralConditionDescription": "string",
                                "IFMVerticalExpDistCode": "number: Used only by the Industrial Facilities Model. Specifies how much exposure is located at the basement or grade level. This is available for surge contents (mechanical and equipment) only.",
                                "IFMVerticalExpDistDescription": "string",
                                "IceProtectionCode": "number: Ice dam protection membranes that are installed under the roof cover protect roofs from water damage due to ice dam buildup. ",
                                "IceProtectionDescription": "string",
                                "IsMaintained": "number",
                                "LandSquareFootage": "number",
                                "MFDSubCategoryCode": "number: Multi-family dwelling subcategory, either apartment, condominium, townhouse/row house, other, or unknown. This field is for informational purposes and will be used in the RMS building valuation model. This field has no impact on loss calculations.",
                                "MFDSubCategoryName": "string",
                                "MechanicalElectricalFloor": "number",
                                "NumBuildings": "number: The number of buildings at the location. Valid range is 1 to 999999999.",
                                "NumStories": "number: The number of stories for the structure. The number of stories value designates the ground floor as Floor 1. Valid range is 0 to 255. The default is 0 (unknown).",
                                "NumStoriesRange": "string",
                                "NumUnits": "number",
                                "NumberOfBaths": "number",
                                "NumberOfBedrooms": "number",
                                "NumberOfCars": "number",
                                "NumberOfEscalators": "number",
                                "OccupancyClass": "number",
                                "OccupancyRange": "string",
                                "OccupancyScheme": "number",
                                "OccupancySchemeId": "string",
                                "OnSiteFloodDefenceRP": "number",
                                "OnsiteFloodDefenceHeight": "number",
                                "OnsiteFloodHeightUnit": "number",
                                "OpeningProtectCode": "string: Windows and doors with poor wind resistance can expose interior building components and contents to more wind and water hazards than openings with good wind resistance. ",
                                "OpeningProtectSecondaryCode": "string: Doors with poor wind resistance can expose interior building components and contents to more wind and water hazards than openings with good wind resistance. ",
                                "OrnamentationCode": "number",
                                "ParkingGarageCode": "number",
                                "PerformanceEQCode": "number",
                                "PerformanceEQDescription": "string",
                                "PerformanceFLCode": "number",
                                "PerformanceFLDescription": "string",
                                "PerformanceHUCode": "number",
                                "PerformanceHUDescription": "string",
                                "PerformanceTOCode": "number",
                                "PerformanceTODescription": "string",
                                "PerilYearOfUpgrades": "string",
                                "PlanIrregularityCode": "number: Configurations can be regular (square, rectangular, circular) or irregular (L-shape, T-shape, triangular). Irregular buildings tend to twist in addition to shaking laterally. Damage often occurs at the corners between different wings of a building. ",
                                "PlanIrregularityDescription": "string",
                                "PlumbingCode": "number: Insulation decreases temperature differences. Buildings with insulated plumbing are less likely to suffer from burst pipes and water damage. ",
                                "PlumbingDescription": "string",
                                "PoundingCode": "number: Pounding occurs when there is little or no clearance between adjacent buildings, and the buildings impact or âpoundâ against each other as they sway during an earthquake. ",
                                "PoundingDescription": "string",
                                "PrimaryConstructionID": "number",
                                "PrimaryOccupancyID": "number",
                                "PropertyType": "number",
                                "PurlinAnchoringCode": "number: In older tilt-up structures, connections between the tilt-up walls and the roof framing system were designed inadequately for earthquake resistance. The failure of these connections can be prevented by the addition of special anchors. ",
                                "PurlinAnchoringDescription": "string",
                                "RemoteAlarmReliability": "number",
                                "RemoteFireAlarmPresence": "string",
                                "RentableBuildingArea": "number",
                                "RentalPropertyIdentifier": "number: Indicates if the property is owner-insured or tenant-insured. This field is for informational purposes and is in the RMS building valuation model. This field has no impact on loss calculations.",
                                "RentalPropertyIdentifierName": "string",
                                "ResAppurtenantCode": "string",
                                "ResidentialGradeCode": "number",
                                "ResidentialGradeDescription": "string",
                                "RoofAdditionsCode": "string: Roof parapets hang off the edge of roofs and may be at risk in high winds.",
                                "RoofAgeConditionCode": "string: Well-maintained roofs tend to hold up better under high wind conditions. Older roofs may be at more risk to an event. ",
                                "RoofAnchorCode": "string: This is one of the most important indicators of potential wind-induced damage. The failure or absence of anchors may result in the roof being blown off and the walls falling apart. ",
                                "RoofCoveringCode": "string: Damage is directly correlated to the type of roofing system in place.",
                                "RoofEquipmentCode": "string: If there are large areas of roof covered with equipment (e.g., anchored solar panels), the building is more vulnerable to wind because the equipment anchorage can compromise the roofâs structural integrity. ",
                                "RoofFrameCode": "string: The type of framing material for the roof affects the ability of the roof to stay attached to a building under high wind conditions.",
                                "RoofGeometryCode": "string: This directly impacts the type of wind forces a roof is likely to experience, e.g., flat roofs are likely to experience more loading than hipped or high-pitched roofs.",
                                "RoofMaintenanceCode": "string: Well-maintained roofs tend to hold up better under high wind conditions.",
                                "RoofSheathingAttachmentCode": "string: Roof sheathing is one of the main components of a building. It helps keep the integrity of the building and is a major line of defense against losses to building and contents due to both wind and rain. The strength of sheathing depends on the way it is attached to the roof rafters. Loss of roof sheathing often happens due to improper nailing design and schedule. ",
                                "RoofVentCode": "number: Adequate roof ventilation ensures that the attic space is kept close to the ambient temperature, hence this prevents snow on a roof surface melting and formation of ice dams. ",
                                "RoofVentDescription": "string",
                                "SecondaryOccupancies": "string",
                                "SecurityAlarm": "string",
                                "ServiceZoneID": "number",
                                "SetBackFromStreetCode": "number",
                                "ShortColumnConditionCode": "number: Concrete structures in which the full height of some columns has been restricted by spandrel beams or in fill walls. These columns will experience excessive loading and could fail in shear. ",
                                "ShortColumnConditionDescription": "string",
                                "SnowGuardsCode": "number: The presence of snow guards allows the snow to distribute evenly over a sloping roof rather than snow drifting toward the gutter. This minimizes the snow volume available to form and maintain an ice dam. This also reduces the likelihood of snow drift loads causing roof deflection and possible roof collapse. ",
                                "SnowGuardsDescription": "string",
                                "SoftStoryCode": "number: Many buildings have shear walls or infill walls at the upper floors that are interrupted at the first floor to provide more open space for car parking, lobbies and retail space. The first floor in these cases acts as a âsoft storyâ and will sustain excessive deformations and stresses in a major earthquake, unless designed specifically to take the stiffness discontinuity into account. ",
                                "SoftStoryDescription": "string",
                                "SprinklerLeakageSusceptibilityCode": "number",
                                "SprinklerLeakageSusceptibilityDescription": "string",
                                "StructuralRedundancyCode": "number: Redundancy refers to having multiple lateral load resisting elements (frames or shear walls) in a building. Redundancy is a desirable feature because of one structural system fails during an earthquake, another system is present to resist the lateral earthquake forces, thus avoiding catastrophic collapse. For the RMS Canada and U.S. Earthquake Model, this modifier has been removed. It applies to earthquake modeling for a limited number of older models.",
                                "StructuralRedundancyDescription": "string",
                                "StructuralUpgradeNonURMCode": "number: This structural upgrade characteristic applies to buildings that have been retrofitted in some way to provide superior earthquake resistive capabilities. This generally applies to older buildings that have been upgraded to conform to more modern building codes. ",
                                "StructuralUpgradeNonURMDescription": "string",
                                "SurroundingBuildingDensity": "number",
                                "TankCode": "number",
                                "TankDescription": "string",
                                "TaxValue": "number",
                                "TopologicalFeatures": "number",
                                "TorsionCode": "number: The geometry of the lateral load resisting system. Asymmetry can aggravate damage by inducing twisting, torsion, and differential motion in the building. Some of the most common occurrences of asymmetry are in frame buildings with a stiff elevator core that is placed asymmetrically. For the RMS Canada and U.S. Earthquake Model, this modifier has been removed. It applies to earthquake modeling for a limited number of older models.",
                                "TorsionDescription": "string",
                                "TotalRooms": "number",
                                "TreeDensityCode": "number: Buildings adjacent to trees may receive damage from trees falling within striking distance. ",
                                "TreeDensityDescription": "string",
                                "URMChimneyPartitionWallCode": "number: Only unreinforced masonry (brick or hollow clay tile) walls or partitions are considered to have significant impact upon a buildingâs damageability. The collapse of these partitions can contribute significantly to the overall dollar value damage to a structure. In USGS seismic zone 4 in California, they are not used in post-1934 construction. This item also includes unreinforced masonry chimneys.",
                                "URMChimneyPartitionWallName": "string",
                                "URMRetrofitCode": "number: Several jurisdictions in California U.S.G.S. seismic zone 4 have instituted mandatory seismic retrofit programs for unreinforced masonry buildings. ",
                                "URMRetrofitDescription": "string",
                                "UseContentValue": boolean,
                                "UsesPublicAdjustor": "number",
                                "VerticalIrregularityCode": "number: Significant setbacks and overhangs can cause irregular structural performance in an earthquake. Resulting stress concentrations can lead to further damage. ",
                                "VerticalIrregularityDescription": "string",
                                "WindMissileExposureCode": "string: Buildings may receive damage from exposure to airborne missiles, gravel, or from trees within falling distance. ",
                                "WindowTypeCode": "number",
                                "XREFExposureSourceBuildingID": "string",
                                "YearBuilt": "number: The year in which the structure was constructed. Must be a calendar year. The year cannot be greater than the current year.",
                                "YearBuiltRange": "string"
                },
                "CurrencyCode": "string",
                "DQScore": "string",
                "EnhancementStatus": "string",
                "Hazard": {
                                "ModelHazard": {
                                                "EQ": {
                                                                "EQVintageId": "number",
                                                                "Landslide": {
                                                                                "LandslideDesc": "string",
                                                                                "LandslideResolutionCode": "number",
                                                                                "LandslideResolutionName": "string",
                                                                                "LandslideUncertainty": "number",
                                                                                "LandslideValue": "number: Landslide value assigned by the hazard retrieval process.",
                                                                                "UserDefinedLandslide": "number: Landslide values imported by the user.",
                                                                                "UserDefinedLandslideResolutionCode": "number: Resolution of imported values.",
                                                                },
                                                                "Liquefaction": {
                                                                                "LiquefactionConfidenceArea": "string",
                                                                                "LiquefactionDesc": "string",
                                                                                "LiquefactionNeighboringTypes": "string: In addition to providing the liquefaction susceptibility at the geocoded coordinates, configuration settings can be set to display all susceptibility types within a specified buffer. This output provides an excellent measure of liquefaction risk associated with nearby areas.",
                                                                                "LiquefactionResolutionCode": "number",
                                                                                "LiquefactionResolutionName": "string",
                                                                                "LiquefactionUncertainty": "number",
                                                                                "UserDefinedLiquefactionResolutionCode": "number: Resolution of imported values.",
                                                                                "UserDefinedliquefaction": "number: Liquefaction values imported by the user.",
                                                                                "liquefaction": "number: Liquefaction value assigned by the hazard retrieval process.",
                                                                },
                                                                "Soil": {
                                                                                "BasinLocID": "number",
                                                                                "BusinessInterruptionZoneId": "number",
                                                                                "FireExposureType1": "number",
                                                                                "FireExposureType2": "number",
                                                                                "FireExposureType3": "number",
                                                                                "FireExposureType4": "number",
                                                                                "FireHazardParameters1": "number",
                                                                                "FireHazardParameters2": "number",
                                                                                "FireHazardParameters3": "number",
                                                                                "FireHazardParameters4": "number",
                                                                                "FireUncertainty": "number",
                                                                                "ModelLoResBasinLocID": "number",
                                                                                "ModelLoResSoilPeriod": "number",
                                                                                "ModelLoResSoilPeriodUncertainty": "number",
                                                                                "ModelLoResSoilThickness": "number",
                                                                                "ModelLoResSoilType": "number",
                                                                                "ModelLoResSoilTypeResolutionCode": "number",
                                                                                "ModelLoResSoilTypeUncertainty": "number",
                                                                                "ModelLoResSoilVS": "number",
                                                                                "ModelVRGSoilType": "number",
                                                                                "ModelVRGSoilTypeResolutionCode": "number",
                                                                                "SoilConfidenceArea": "string",
                                                                                "SoilNeighboringTypes": "string",
                                                                                "SoilPeriod": "number",
                                                                                "SoilPeriodUncertainty": "number",
                                                                                "SoilThickness": "number",
                                                                                "SoilType": "number",
                                                                                "SoilTypeDesc": "string",
                                                                                "SoilTypeResolutionCode": "number",
                                                                                "SoilTypeResolutionName": "string",
                                                                                "SoilTypeUncertainty": "number",
                                                                                "SoilVS": "number",
                                                                                "UserDefinedSoilType": "number",
                                                                                "UserDefinedSoilTypeResolutionCode": "number",
                                                                }
                                                },
                                                "HU": {
                                                                "DistanceToCoast": {
                                                                                "CustomDistanceToCoast": "number",
                                                                                "CustomDistanceToCoastDataVintageId": "number",
                                                                                "CustomDistanceToCoastResolutionCode": "number",
                                                                                "DistanceToCoastCV": "number",
                                                                                "DistanceToCoastResolutionCode": "number",
                                                                                "DistanceToCoastResolutionName": "string",
                                                                                "DistanceToCoastValue": "number",
                                                                                "DistanceToOuterCoast": "number",
                                                                                "DistanceToOuterCoastResolutionCode": "number",
                                                                                "UserDefinedDistanceToCoast": "number",
                                                                                "UserDefinedDistanceToCoastResolutionCode": "number",
                                                                                "UserDefinedDistanceToCoastResolutionName": "string",
                                                                                "WaveAmplificationFactor": "number",
                                                                },
                                                                "Elevation": {
                                                                                "BuildingElevation": "number",
                                                                                "BuildingElevationResolutionCode": "number",
                                                                                "BusinessInterruptionZoneId": "number",
                                                                                "ElevationResolutionCode": "number",
                                                                                "ElevationResolutionName": "string",
                                                                                "ElevationUncertainty": "number",
                                                                                "NFIPRate": "number",
                                                                                "NFIPRateResolutionCode": "number",
                                                                                "NFIPYear": "number",
                                                                                "NFIPYearResolutionCode": "number",
                                                                                "UserDefinedBuildingElevation": "number",
                                                                                "UserDefinedBuildingElevationResolutionCode": "number",
                                                                                "UserDefinedBuildingElevationResolutionName": "string",
                                                                                "UserDefinedElevation": "number",
                                                                                "UserDefinedElevationResolutionCode": "number",
                                                                                "UserDefinedElevationResolutionName": "string",
                                                                                "UserDefinedNFIPYear": "number",
                                                                                "UserDefinedNFIPYearResolutionCode": "number",
                                                                                "UserDefinedNFIPYearResolutionName": "string",
                                                                                "elevation": "number",
                                                                },
                                                                "HUVintageId": "number",
                                                                "NaturalRoughness": {
                                                                                "NaturalRoughnessCode": "number",
                                                                                "NaturalRoughnessName": "string",
                                                                                "NaturalRoughnessResolutionCode": "number",
                                                                                "NaturalRoughnessUncertainty": "number",
                                                                                "NaturalRoughnessValue": "number",
                                                                }
                                                },
                                                "HashId": "string"
                                },
                                "NonModelHazard": {
                                                "APZone": {
                                                                "APZoneResolutionCode": "number",
                                                                "APZoneVintageId": "number: Vintage of the data used in the hazard lookup.",
                                                                "AlquistPrioloConfidenceArea": "string",
                                                                "AlquistPrioloZone": "number: The Alquist-Priolo Earthquake Fault Zones are regulatory zones around active faults in the state of California. The zones are defined by the State Geologist to identify areas at risk from surface fault rupture. The zones vary in width, but average about one-quarter mile wide. Zone boundaries are approximately 500 feet on either side of major active faults, and approximately 200-300 feet on either side of well-defined minor faults.",
                                                },
                                                "Flood": {
                                                                "BaseFloodElevation": "number",
                                                                "CobraArea": "number: A naturally occurring island, sandbar, or other strip of land, including coastal mainland that protects the coast from severe wave wash. For the purposes of the NFIP, the Coastal Barrier Resources Act of 1982 designated certain portions of the Gulf and East Coasts as undeveloped coastal barriers. These areas are shown on appropriate flood insurance map panels and have certain coverage restrictions.",
                                                                "FemaCommunityNum": "number: "A political entity that has the authority to adopt and enforce floodplain ordinances for the area under its jurisdiction. ",
                                                                "FloodAdditionalInformation": "string",
                                                                "FloodAnnualProbability": "string",
                                                                "FloodDataSourceCode": "string",
                                                                "FloodLookupConfidence": "number",
                                                                "FloodNeighboringZones": "string",
                                                                "FloodPanelNumber": "string",
                                                                "FloodResolutionCode": "number",
                                                                "FloodVintageId": "number",
                                                                "FloodZone": "string",
                                                                "Floodway": "number",
                                                                "MapPanelUnderRevision": "number",
                                                                "SpecialFloodHazardArea": "number",
                                                },
                                                "HashId": "string",
                                                "MMI": {
                                                                "MMI100YrReturnPeriod": "number",
                                                                "MMI200YrReturnPeriod": "number",
                                                                "MMI250YrReturnPeriod": "number",
                                                                "MMI475YrReturnPeriod": "number",
                                                                "MMIResolutionCode": "number",
                                                                "MMIVintageId": "number",
                                                },
                                                "Slope": "string",
                                                "Subsidence": {
                                                                "MineList": "string",
                                                                "SinkholeList": "string",
                                                                "SinkholeNeighboringZones": "string",
                                                                "SinkholeZoneClass": "number",
                                                                "SinkholeZoneClassDescription": "string",
                                                                "SinkholeZoneConfidenceArea": "string",
                                                                "SinkholeZoneResolutionCode": "number",
                                                                "SubsidenceVintageId": "number",
                                                },
                                                "Wildfire": {
                                                                "WildfireAccessibility": "string",
                                                                "WildfireArea": "string",
                                                                "WildfireClimateConditions": "string",
                                                                "WildfireHazard": "string",
                                                                "WildfireLocalFireHistory": "number",
                                                                "WildfireNearbyFireHistory": "number",
                                                                "WildfireResolutionCode": "number",
                                                                "WildfireSurfaceFuel": "string",
                                                                "WildfireSusceptibility": "string",
                                                                "WildfireThreat": "string",
                                                                "WildfireVintageId": "number"
                                                },
                                                "Windpool": {
                                                                "WindpoolType": "string",
                                                                "WindpoolVintageId": "number",
                                                                "WindpoolZone": "string",
                                                                "WindpoolZoneConfidenceArea": "string", A confidence area is a region that represents the possible uncertainty of a plotted location on the map. The size of the confidence area is configurable, and the following will be reported: (1) The entire confidence area falls inside a Windpool Zone, (2) portions of the confidence area fall inside a Windpool Zone, (3) portions of the confidence area fall outside a Windpool Zone, or (4) the entire confidence area falls outside a Windpool Zone.
                                                                "WindpoolZoneResolutionCode": "number"
                                                }
                                }
                },
                "HundredPercentCorrelation": "number",
                "IdTagPairs": "string",
                "LastUpdateUserId": "number",
                "PrimaryRisk": "boolean",
                "RiskItemScheduleId": "number",
                "RiskitemCharacteristicsList": {
                                "HashId": "string",
                                "Items": [{
                                                "__type": "RealPropertyCharacteristicsValuation:#Rms.DataServices.RestObjects",
                                                "ExternalSourceId": "string",
                                                "Id": "number",
                                                "ParentId": "number",
                                                "RITExposureValuationList": [{
                                                                "ValuationBasisID": "number",
                                                                "ValuationID": "number",
                                                                "ValuationProvenance": "string",
                                                                "ValuationTypeID": "number",
                                                                "Value": "number"
                                                }],
                                                "RiskItemName": "RiskItemName",
                                                "RiskItemNumber": "RiskItemNumber",
                                                "RiteTypeId": "number"
                                },
                                {
                                                "__type": "BusinessInterruptionCharacteristicsValuation:#Rms.DataServices.RestObjects",
                                                "ExternalSourceId": "string",
                                                "Id": "number",
                                                "ParentId": "number",
                                                "RITExposureValuationList": [{
                                                                "ValuationBasisID": "number",
                                                                "ValuationID": "number",
                                                                "ValuationProvenance": "string",
                                                                "ValuationTypeID": "number",
                                                                "Value": "number"
                                                }],
                                                "RiskItemName": "RiskItemName",
                                                "RiskItemNumber": "RiskItemNumber",
                                                "RiteTypeId": "number"
                                },
                                {
                                                "__type": "MoveablePropertyCharacteristicsValuation:#Rms.DataServices.RestObjects",
                                                "ExternalSourceId": "string",
                                                "Id": "number",
                                                "ParentId": "number",
                                                "RITExposureValuationList": [{
                                                                "ValuationBasisID": "number",
                                                                "ValuationID": "number",
                                                                "ValuationProvenance": "string",
                                                                "ValuationTypeID": "number",
                                                                "Value": "number"
                                                }],
                                                "RiskItemName": "RiskItemName",
                                                "RiskItemNumber": "RiskItemNumber",
                                                "RiteTypeId": "number",
                                                "ContentsRateGrades": [{
                                                                "PerilCode": "string",
                                                                "contentsRateGrade": "number: This field is a rating of the fragility of the contents and is relevant for earthquake due to the nature of the hazard (e.g., potential for building collapse). It is based on the ISO Contents Rate Grade.",
                                                },
                                                {
                                                                "PerilCode": "string",
                                                                "contentsRateGrade": "number",
                                                },
                                                {
                                                                "PerilCode": "string",
                                                                "contentsRateGrade": "number",
                                                }],
                                                "EqslGrade": "string",
                                                "FragilityID": "string",
                                                "UserDefMovablePropertyTypeID": "number"
                                }]
                },
                "SubjectAtRisk": {
                                "Construction": "string",
                                "CreateUserID": "number",
                                "ExternalSourceId": "string",
                                "NumberOfBuildings": "number",
                                "NumberOfRiskItems": "number",
                                "NumberOfStories": "number",
                                "Occupancy": "string",
                                "SubjectAtRiskID": "number",
                                "SubjectAtRiskName": "SubjectAtRiskName",
                                "SumOfBIValues": "number",
                                "SumOfBuildingValues": "number",
                                "SumOfContentsValues": "number",
                                "TIV": "number",
                                "TotalFloorArea": "number",
                }
}


        }
    ```

+ Response 200
    
    [riskItem][]

### DELETE riskItem [DELETE]
Deletes the selected riskItem instance.

+ Response 204



## riskItems [/services/v1/ExposureService/riskItems/{?address, asOfDate, biTiv, contentTiv,createDate, currencyCode, description, dQScore, enhancementStatus, hazard, hundredPercentCorrelation, id, idTagPairs, importSetId, lastUpdateUserId, limit, name, number, offset, owner, parentRITExposureId, primaryRisk, riskItemCharacteristicsList, riskItemScheduleId, sourceId, subjectAtRisk, TIV, uri, version}]

### GET riskItems [GET]
Returns a list of risk items.

+ Parameters
   + address (string, optional) ... Address information
   + asOfDate (string, optional) ... Date and time of latest version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + biTiv (double, optional) ... BI TIV.
   + contentTiv (double, optional) ... Content TIV.
   + createDate (string) ... Creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + currencyCode (string, optional) ... Currency code.
   + description (string, optional) ... Risk item description.
   + dQScore (string, optional) ... DQScore.
   + enhancementStatus (string, optional) ... Enhancement status.
   + hazard (string, optional) ... Hazard information.
   + hundredPercentCorrelation (number, optional) ... Correlation information.
   + id (string) ... Risk item ID.
   + idTagPairs (string, optional) ... ID tag pairs.
   + importSetId (integer, optional) ... If the risk item is imported, this is the ID of the import set to which the risk item belonged. Otherwise set to null.
   + lastUpdateUserId (number, optional) ... User ID of the person who last updated this instance.
   + limit (number, optional) ... Number of records to return per page.
   + name (string, optional) ... Risk item name. 
   + number (integer) ... Risk item number.
   + offset (number, optional) ... Return results starting with this record number (0-based).
   + owner (string) ... Risk item owner's unique ID.
   + parentRITExposureId (number, optional) ... ID of the parent risk item exposure.  
   + primaryRisk (boolean, optional) ... Indicates whether an instance is a primary risk.
   + riskItemScheduleId (number, optional) ... Risk item schedule ID.
   + riskItemCharacteristicsList (string, optional) ... Risk item characteristics list.
   + sourceId (string) ... External source ID.
   + subjectAtRisk (string, optional) ... Information about the subject at risk. 
   + TIV (double, optional) ... TIV.
   + uri (string, optional) ... Unique resource identifier.
   + version (number, optional) ... Risk item version number.

   
+ Response 200

    ```js
        {
    "Count": "number: number of riksItems in system",
    "RiskItems": [
        {
            "AsOfDate": "string: Date and time of latest version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time",
            "CreateDate": "string: Creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
            "Description": "string: Description of risk item.",
            "Id": "number: Unique ID of risk item",
            "ImportSetId": "integer: If the risk item is imported, this is the ID of the import set to which the risk item belonged. Otherwise set to null.",
            "Name": "string: Risk item name.",
            "Number": "number: Risk item number",
            "Owner": "number: Risk item owner unique ID",
            "SourceId": "string: Risk item source ID. ",
            "URI": "string: Uniqque resource identifier",
            "Version": "number: Risk item version number",
            "Address": {
                "ACORDResolutionCode": "string",
                "AddressSchemeID": "number",
                "AddressText": "string",
                "AddressType": "number",
                "AddressTypeName": "string",
                "Admin1Code": "string",
                "Admin1Fips": "string",
                "Admin1GeoID": "number",
                "Admin1Name": "string: Administrative divisions refer to geographic divisions, such as states and provinces, and vary by country. Admin1Name represents large geographic divisions, such as states and provinces. Admin1Name corresponds to state-level geocoding resolution (resolution code 10). ",
                "Admin2Code": "string",
                "Admin2Fips": "string",
                "Admin2GeoID": "number",
                "Admin2Name": "string: Admin2Name represents small geographic divisions, such as counties. Admin2Name corresponds to county-level geocoding resolution (resolution code 9).",
                "Admin3Code": "string",
                "Admin3GeoID": "number",
                "Admin3Name": "string: Admin3Name represents smaller geographic divisions, such as districts. Admin3Name corresponds to district-level geocoding resolution (resolution code 8).",
                "Admin4Code": "string",
                "Admin4GeoID": "number",
                "Admin4Name": "string",
                "Admin5Code": "string",
                "Admin5GeoID": "number",
                "Admin5Name": "string",
                "Alley": "string",
                "ApnId": "string",
                "Block": "string",
                "BlockGroup": "string",
                "BuildingName": "string",
                "CityCode": "string",
                "CityGeoID": "number",
                "CityName": "string",
                "CountryCode": "string",
                "CountryGeoID": "number",
                "CountryName": "string",
                "CountryScheme": "string: The scheme used for importing country codes: ISO2A: 2-character ISO,  ISO3A: 3-character ISO, ISO3N: 3-digit ISOFIPS.",
                "CountryUnitCode": "string",
                "CreateUserID": "number",
                "ESDBAddressID": "string",
                "ESDBBuildingID": "string",
                "FirmName": "string",
                "GeoDataSourceID": "number",
                "GeoModelResolutionCode": "number",
                "GeoVintageId": "number",
                "GeocodeProductVersion": "string",
                "GeocodingAccuracyBuffer": "number",
                "GeocodingCV": "number",
                "GeocodingLocationCode": "string",
                "GeocodingMatchCode": "string: Geocode match levels represent the resolution at which a location is geocoded. Supported match levels vary by country.",
                "GeocodingResolutionCode": "number",
                "GeocodingResolutionConfidence": "number",
                "HashId": "string",
                "HiRange": "string",
                "HiUnit": "string",
                "HouseNumber": "string",
                "IsExtended": "number",
                "IsIntersection": "string",
                "IsSubmittedAddress": "number",
                "Latitude": "number",
                "LoUnit": "string",
                "LocationCode": "string",
                "LocationCodeGeoID": "number",
                "Longitude": "number: RMS(one) identifies latitude and longitude when a risk location is geocoded. Users can also enter a valid latitude and longitude, and RMS(one) can retrieve the corresponding ZIP Code for the U.S. risk locations.",
                "LowRange": "string",
                "ParcelNumber": "string: Parcel-level matches are based on property parcels. Property parcels contain information on the boundaries, ownership, and other aspects of a commercial or residential property in the U.S. Parcel data is consistent over time and covers more than 50 percent of the privately owned U.S. parcels. Parcel centroids provide highly accurate geocoding matches, although it is not always as accurate as a building footprint geocoding that is achievable with RMS' Sanborn data sets. It is superior to street address geocoding because it is not subject to address interpolation errors.",
                "PostDir": "string",
                "PostDir2": "string",
                "PostalCode": "string",
                "PostalCode1GeoID": "number",
                "PostalCode2GeoID": "number",
                "PostalCode3GeoID": "number",
                "PostalCodeGeoID": "number",
                "PreDir": "string",
                "PreDir2": "string",
                "PreferredCity": "string",
                "QuadKey": "number",
                "RangeParity": "string",
                "SanbornAreaID": "number: Square footage for the building as defined by the Sanborn Mapping Company.",
                "SanbornBuildingID": "string: The building identifier as defined by the Sanborn Mapping Company.",
                "SegmentId": "string",
                "SegmentParity": "string",
                "StreetAddress": "string",
                "StreetName": "string",
                "StreetName2": "string",
                "StreetType": "string",
                "StreetType2": "string",
                "UnitNumber": "string",
                "UnitType": "string",
                "Zip4": "string",
                "Zone1Code": "string",
                "Zone1GeoID": "number",
                "Zone1Name": "string",
                "Zone2Code": "string",
                "Zone2GeoID": "number",
                "Zone2Name": "string",
                "Zone3Code": "string",
                "Zone3GeoID": "number",
                "Zone3Name": "string",
                "Zone4Code": "string",
                "Zone4GeoID": "number",
                "Zone4Name": "string",
                "Zone5Code": "string",
                "Zone5GeoID": "number",
                "Zone5Name": "string"
            },
            "BITIV": "number",
            "BuildingTIV": "number",
            "CommonCharacteristics": {
                "AFMFireBuildingClass": "string",
                "AFMFireOccupancyClass": "string",
                "AirFiltrationCode": "number",
                "AirconditioningTypeCode": "number",
                "ArchitecturalElementsCode": "number",
                "ArchitecturalHeight": "number",
                "AtticInsulationCode": "number: Attic insulation reduces the heat loss from the building and hence reduces the snow melt on the roof that leads to ice dam formation from the gutter. ",
                "AtticInsulationName": "string",
                "BIPreparednessCode": "number",
                "BIPreparednessDescription": "string",
                "BIRedundancyCode": "number: Captures redundancies within the same account, such as the existence of multiple locations that perform the same function to some extent. ",
                "BIRedundancyName": "string",
                "BaseIsolationCode": "number: Buildings with base isolation float on a pad that dampers waves during an event. ",
                "BaseIsolationName": "string",
                "BasementCode": "string: Level of basement flood protection and basement function. ",
                "BuildingHeight": "number: The building height, in feet or meters. Currently this data is for informational purposes and is not used in any loss calculations.",
                "BuildingHeightUOMID": "number: The unit of measurement used for building height. ",
                "BuildingHeightUOMName": ""string"",
                "BuildingOwnershipCode": "number",
                "BuildingOwnershipName": "string",
                "Capacity": "number",
                "CapacityTypeID": "number",
                "CladdingCode": "number",
                "CladdingTypeCode": "number",
                "ClaimProcessRankID": "number",
                "ComAppurtenantCode": "string",
                "ConstructionCertificationCode": "number",
                "ConstructionClass": ""string"",
                "ConstructionCompletePercent": "number": Indicates the percentage of construction that is completed. The percentage in this field is not used to adjust the vulnerability curves for incomplete construction. The exposure is simply reduced in proportion to the percentage entered, and the original vulnerability curve is used. RMS(one) does not update this number over time. If no value is supplied, a default value of 100% is used.",
                "ConstructionCompletedDate": "string",
                "ConstructionQualityValuation": "number",
                "ConstructionRange": "string",
                "ConstructionScheme": ""string"",
                "ConstructionSchemeId": ""number"",
                "ConstructionStartedDate": "string: Date construction was started or completed. Unless you license and model Builders Risk, this field is for data capture only and is not used to calculate losses. See the Builders Risk User Guide for more information about using these fields for modeling builders risk. If you enter a start date, completion date is required. Start date must be less than the completion date.",
                "ContainingPropertyID": "number",
                "ContentLossTrigger": "number: Presence of a content loss trigger indicates that this is a location that contributes to a mini policy or a wrap policy where a trigger deductible is applicable. ",
                "ContentsVulnWaterCode": "string",
                "ContentsVulnWindCode": "string",
                "CrippleWallsBracedCode": "number: A cripple wall is a short wall that extends from the top of the footing to the level of the first floor, found almost exclusively in wood frame residential construction. These walls have no shear resistance and tend to perform poorly in earthquakes; damage to the building may be total. Post-1948 construction in California has not allowed the use of cripple walls. ",
                "CrippleWallsBracedName": "string",
                "DesignCode": "number",
                "EQFrameConnectionCode": "number: Unbolted buildings may slide off their foundations during a strong earthquake, causing significant damage. Anchoring the frame to the foundation has proven to be the best means of protection against earthquake damage in frame structures. ",
                "EQFrameConnectionName": "string",
                "EQSLInsurance": "boolean",
                "EngineeredFoundationCode": "number: Buildings whose foundations were designed to take into account the soil deformations anticipated for landslides or liquefaction. ",
                "EngineeredFoundationName": "string",
                "EnvelopeOpeningCode": "number: For shear wall buildings, the 50% rule refers to the area of a buildingâs exterior wall surface that consists of window and door openings. Buildings with more than 50% of the wall open are evaluated as having less seismic resistance. For the RMS Canada and U.S. Earthquake Model, this modifier has been removed. It applies to earthquake modeling for a limited number of older models.",
                "EnvelopeOpeningName": "string",
                "EquipmentEQBracingCode": "number",
                "EquipmentEQBracingName": "string",
                "EquipmentGroundFloorCode": "string: Ground-level equipment such as electrical, gas and water meters, and exterior access points for cable and telephone systems are prone to damage from flooding if not elevated or otherwise protected. ",
                "EquipmentSideBracingCode": "string: Mechanical and electrical systems that are attached to external walls can receive damage from high winds.",
                "EquipmentSupportMaintenanceCode": "number: Buildings that show signs of distress or duress, such as cracking due to aging, ground settlement, and overloading or cracking due to damage from previous earthquakes, are likely to experience additional damage during an earthquake. ",
                "EquipmentSupportMaintenanceName": "string",
                "ExteriorEQCode": "string",
                "ExteriorEQName": "string",
                "ExteriorFLCode": "string",
                "ExteriorFLDescription": "string",
                "ExteriorHUCode": "string",
                "ExteriorHUDescription": "string",
                "ExteriorRatingCode": "string",
                "ExteriorRatingName": "string",
                "ExteriorTOCode": "string",
                "ExteriorTODescription": "string",
                "ExternalOrnamentationCode": "number: Ornamentation includes all elements that can shake loose from either roof or structural elements of the building. ",
                "FinishedFloorHeight": "string",
                "FireAlarm": "number",
                "FireDeptRatingCode": "string",
                "FireDeptRatingModifierCode": "number",
                "FireDeptRatingModifierName": "string",
                "FirePlace": "string",
                "FireSprinklerPresenceCode": "number",
                "FireSprinklerPresenceDescription": "string",
                "FireSprinklerTypeCode": "number: Sprinkler systems are classified as âwet pipeâ or âdry pipeâ. In general, wet pipe systems cause more damage than dry pipe systems during earthquakes. When the type of sprinkler system is unknown, the Earthquake Sprinkler Leakage (EQSL) Model uses an assumed inventory distribution of 70% wet pipe and 30% dry pipe to compute the sprinkler-leakage-related damages. Applying this secondary modifier for a location where it is known that the sprinkler system is either wet or dry refines the loss estimate associated with sprinkler leakage. ",
                "FireSprinklerTypeDescription": "string",
                "Flashing": "number: Indicates the quality of the flashing and coping installed at the roof. Flashing refers to thin continuous pieces of sheet metal or other water-impervious material that are installed to prevent the passage of water into a structure at locations where there is an abrupt change in the roof geometry. For example, it is placed around the base of discontinuities or objects that protrude from the roof of a building, such as mechanical openings and parapets, to deflect water away from the construction joints at these locations. Coping refers to thin continuous pieces of sheet metal or other water-impervious material that act as a cap on top of parapets and roof ridges to prevent water from entering a structure through the construction joints at these locations. ",
                "FlashingDescription": "string",
                "FloodDefenseHeightUOMID": "number: Unit of measurement for flood defenses, either feet or meters. ",
                "FloodDefenseHeightUOMName": "string",
                "FloodMissileCode": "string: Buildings may receive damage from exposure to flood-carried missiles such as uprooted trees, branches, and sand.",
                "FloodProtectionCode": "string: Damage due to flood can be reduced if flood protection measures are implemented. ",
                "FloorArea": "number: Applies only to residential locations. Represents total living area, across all floors. Excludes garage, porches, decks, sunrooms, and basements. Used to assess residential vulnerability curves for U.S. Hurricane and Caribbean Hurricane analyses and for U.S. and Canada Severe Convective Storm and Winterstorm analyses (wind subperil only).",
                "FloorAreaUOMID": "number",
                "FloorAreaUOMName": "string",
                "FloorOccupied": "number: A single floor or range of floors occupied. Positive numbers represent floors above grade, and negative numbers represent floors below grade (for example, basement levels). The maximum negative number is -5. The number of floors occupied should include consideration for the ground floor designation of â0,â which in some countries is designated as floor â1,â Thus, if floors 1 thru 4 are occupied, the number of stories should be at least 5. Floors occupied cannot exceed number of stories. Losses vary depending on the information entered in both the Floors Occupied and Number of Stories fields. RMS recommends specifying this value only if the location has a geocoding match level better than postcode.",
                "FloorSize": "number",
                "FloorTypeCode": "number: Type of floor materials. ",
                "FloorTypeDescription": "string",
                "FloorsUnderground": "number",
                "FoundationSystemCode": "string: A building that is inadequately connected to its foundation can fail catastrophically during a windstorm. ",
                "FrameFoundationConnectionCode": "number",
                "FrameFoundationConnectionDescription": "string",
                "GaragingCode": "number: Used to specify where automobiles are parked. This is applicable only to the Australia Severe Convective Storm model. ",
                "GaragingDescription": "string",
                "GroundFloorArea": "number",
                "HUZoneCode": "string",
                "HazardousExposures": "number",
                "HeatingTypeCode": "number",
                "HeightOfFloodDefenseCode": "number: The height of any flood defenses, such as flood walls, protecting the property. The height is measured relative to the North American Vertical Datum of 1988 (NAVD 88) for locations in the U.S. and relative to the World Geodetic System datum of 1984 (WGS 84) for locations in the Caribbean. Supports storm surge modeling.",
                "IFMEquipmentBracingCode": "number: Specifies the overall quality of outdoor machinery and equipment bracing. For Industrial Facilities Model (IFM) exposures, use this rather than Ground Level Equipment.",
                "IFMEquipmentBracingDescription": "string",
                "IFMSiteHazardCode": "number: Specifies missiles and other environmental hazards.",
                "IFMSiteHazardDescription": "string",
                "IFMStructuralConditionCode": "number: This is a hybrid modifier used by the IFM to capture both maintenance and construction and design quality. For IFM exposures, use this rather than construction quality.",
                "IFMStructuralConditionDescription": "string",
                "IFMVerticalExpDistCode": "number: Used only by the IFM. Specifies how much exposure is located at the basement or grade level. This is available for surge contents (mechanical and equipment) only.",
                "IFMVerticalExpDistDescription": "string",
                "IceProtectionCode": "number: Ice dam protection membranes that are installed under the roof cover protect roofs from water damage due to ice dam buildup. ",
                "IceProtectionDescription": "string",
                "IsMaintained": "number",
                "LandSquareFootage": "number",
                "MFDSubCategoryCode": "number: Multi-family dwelling subcategory, either apartment, condominium, townhouse or row house, other, or unknown. This field is for informational purposes and will be used in the RMS building valuation model. This field has no impact on loss calculations.",
                "MFDSubCategoryName": "string",
                "MechanicalElectricalFloor": "number",
                "NumBuildings": "number: Number of buildings.",
                "NumStories": "number: The number of stories for the structure. The default is 0, which RiskLink/RiskBrowser interprets as âunknown.â This should be a single number (integer).â The number of stories value designates the ground floor as Floor â1.â Structures are classified according to the number of stories they have; for example, one-story structures, 2â3 story structures, and 4â7 story structures. The classifications vary by peril model, construction class, and occupancy type. For more information about the ranges used by a specific country peril, see the appropriate model methodology document. RMS recommends this model for peril model analyses.",
                "NumStoriesRange": "string",
                "NumUnits": "number",
                "NumberOfBaths": "number",
                "NumberOfBedrooms": "number",
                "NumberOfCars": "number",
                "NumberOfEscalators": "number",
                "OccupancyClass": "string",
                "OccupancyRange": "string",
                "OccupancyScheme": "string",
                "OccupancySchemeId": "number",
                "OnSiteFloodDefenceRP": "number",
                "OnsiteFloodDefenceHeight": "number",
                "OnsiteFloodHeightUnit": "number",
                "OpeningProtectCode": "string: Windows and doors with poor wind resistance can expose interior building components and contents to more wind and water hazards than openings with good wind resistance. ",
                "OpeningProtectSecondaryCode": "string: Doors with poor wind resistance can expose interior building components and contents to more wind and water hazards than openings with good wind resistance. ", 
                "OrnamentationCode": "number: Ornamentation includes all elements that can shake loose from either roof or structural elements of the building. ",
                "ParkingGarageCode": "number",
                "PerformanceEQCode": "number",
                "PerformanceEQDescription": "string",
                "PerformanceFLCode": "number",
                "PerformanceFLDescription": "string",
                "PerformanceHUCode": "number",
                "PerformanceHUDescription": "string",
                "PerformanceTOCode": "number",
                "PerformanceTODescription": "string",
                "PerilYearOfUpgrades": "string",
                "PlanIrregularityCode": "number: Configurations can be regular (square, rectangular, circular) or irregular (L-shape, T-shape, triangular). Irregular buildings tend to twist in addition to shaking laterally. Damage often occurs at the corners between different wings of a building. ",
                "PlanIrregularityDescription": "string",
                "PlumbingCode": "number: Insulation decreases temperature differences. Buildings with insulated plumbing are less likely to suffer from burst pipes and water damage. ",
                "PlumbingDescription": "string",
                "PoundingCode": "number: Pounding occurs when there is little or no clearance between adjacent buildings, and the buildings impact or âpoundâ against each other as they sway during an earthquake. ",
                "PoundingDescription": "string",
                "PrimaryConstructionID": "number",
                "PrimaryOccupancyID": "number: The normalized field for the combination of Occupancy Scheme and Occupancy Class.",
                "PropertyType": "number",
                "PurlinAnchoringCode": "number: In older tilt-up structures, connections between the tilt-up walls and the roof framing system were designed inadequately for earthquake resistance. The failure of these connections can be prevented by the addition of special anchors.",
                "PurlinAnchoringDescription": "string",
                "RemoteAlarmReliability": "number",
                "RemoteFireAlarmPresence": "string",
                "RentableBuildingArea": "number",
                "RentalPropertyIdentifier": "number: Indicates if the property is owner-insured or tenant-insured. This field is for informational purposes and is in the RMS building valuation model. This field has no impact on loss calculations.",
                "RentalPropertyIdentifierName": "string",
                "ResAppurtenantCode": "string",
                "ResidentialGradeCode": "number",
                "ResidentialGradeDescription": "string",
                "RoofAdditionsCode": "string: Roof parapets hang off the edge of roofs and may be at risk in high winds.",
                "RoofAgeConditionCode": "string: Well-maintained roofs tend to hold up better under high wind conditions. Older roofs may be at more risk to an event. ",
                "RoofAnchorCode": "string: This is one of the most important indicators of potential wind-induced damage. The failure or absence of anchors may result in the roof being blown off and the walls falling apart. ",
                "RoofCoveringCode": "string: Damage is directly correlated to the type of roofing system in place. ",
                "RoofEquipmentCode": "string: If there are large areas of roof covered with equipment, for exampleanchored solar panels, the building is more vulnerable to wind because the equipment anchorage can compromise the roofâs structural integrity.",
                "RoofFrameCode": "string: The type of framing material for the roof affects the ability of the roof to stay attached to a building under high wind conditions.",
                "RoofGeometryCode": "string: This directly impacts the type of wind forces a roof is likely to experience. For example flat roofs are likely to experience more loading than hipped or high-pitched roofs.",
                "RoofMaintenanceCode": "string: Well-maintained roofs tend to hold up better under high wind conditions.",
                "RoofSheathingAttachmentCode": "string: Roof sheathing is one of the main components of a building. It helps keep the integrity of the building and is a major line of defense against losses to building and contents due to both wind and rain. The strength of sheathing depends on the way it is attached to the roof rafters. Loss of roof sheathing often happens due to improper nailing design and schedule. ",
                "RoofVentCode": "number: Adequate roof ventilation ensures that the attic space is kept close to the ambient temperature. Hhence this prevents snow on a roof surface melting and formation of ice dams. ",
                "RoofVentDescription": "string",
                "SecondaryOccupancies": "string",
                "SecurityAlram": "string",
                "ServiceZoneID": "number",
                "SetBackFromStreetCode": "number",
                "ShortColumnConditionCode": "number: Concrete structures in which the full height of some columns has been restricted by spandrel beams or in fill walls. These columns will experience excessive loading and could fail in shear. ",
                "ShortColumnConditionDescription": "string",
                "SnowGuardsCode": "number: The presence of snow guards allows the snow to distribute evenly over a sloping roof rather than snow drifting toward the gutter. This minimizes the snow volume available to form and maintain an ice dam. This also reduces the likelihood of snow drift loads causing roof deflection and possible roof collapse. ",
                "SnowGuardsDescription": "string",
                "SoftStoryCode": "number: Many buildings have shear walls or infill walls at the upper floors that are interrupted at the first floor to provide more open space for car parking, lobbies and retail space. The first floor in these cases acts as a âsoft storyâ and will sustain excessive deformations and stresses in a major earthquake, unless designed specifically to take the stiffness discontinuity into account. ",
                "SoftStoryDescription": "string",
                "SprinklerLeakageSusceptibilityCode": "number",
                "SprinklerLeakageSusceptibilityDescription": "string",
                "StructuralRedundancyCode": "number: Redundancy refers to having multiple lateral load resisting elements (frames or shear walls) in a building. Redundancy is a desirable feature because of one structural system fails during an earthquake, another system is present to resist the lateral earthquake forces, thus avoiding catastrophic collapse. For the RMS Canada and U.S. Earthquake Model, this modifier has been removed. It applies to earthquake modeling for a limited number of older models.",
                "StructuralRedundancyDescription": "string",
                "StructuralUpgradeNonURMCode": "number: This structural upgrade characteristic applies to buildings that have been retrofitted to provide superior earthquake resistive capabilities. This generally applies to older buildings that have been upgraded to conform to more modern building codes. ",
                "StructuralUpgradeNonURMDescription": "string",
                "SurroundingBuildingDensity": "number",
                "TankCode": "number: Rooftop tanks on adjoining, higher buildings are a falling hazard during an earthquake. For the RMS Canada and U.S. Earthquake Model, this modifier has been removed. It applies to earthquake modeling for a limited number of older models.",
                "TankDescription": "string",
                "TaxValue": "number",
                "TopologicalFeatures": "number",
                "TorsionCode": "number: The geometry of the lateral load resisting system. Asymmetry can aggravate damage by inducing twisting, torsion, and differential motion in the building. Some of the most common occurrences of asymmetry are in frame buildings with a stiff elevator core that is placed asymmetrically. For the RMS Canada and U.S. Earthquake Model, this modifier has been removed. It applies to earthquake modeling for a limited number of older models.",
                "TorsionDescription": "string",
                "TotalRooms": "number",
                "TreeDensityCode": "number: Buildings adjacent to trees may receive damage from trees falling within striking distance. ",
                "TreeDensityDescription": "string",
                "URMChimneyPartitionWallCode": "number: Only unreinforced masonry (brick or hollow clay tile) walls or partitions can contribute significantly to a building damages. The collapse of these partitions can contribute significantly to the overall financial damage to a structure. In USGS seismic zone 4 in California, they are not used in post-1934 construction. This item also includes unreinforced masonry chimneys.",
                "URMChimneyPartitionWallName": "string",
                "URMRetrofitCode": "number: Several jurisdictions in California U.S.G.S. seismic zone 4 have instituted mandatory seismic retrofit programs for unreinforced masonry buildings. ",
                "URMRetrofitDescription": "string",
                "UseContentValue": "boolean",
                "UsesPublicAdjustor": "number",
                "VerticalIrregularityCode": "number: Significant setbacks and overhangs can cause irregular structural performance in an earthquake. Resulting stress concentrations can lead to further damage. ",
                "VerticalIrregularityDescription": "string",
                "WindMissileExposureCode": "string: Buildings may receive damage from exposure to airborne missiles, gravel, or from trees within falling distance. ",
                "WindowTypeCode": "number",
                "XREFExposureSourceBuildingID": "string",
                "YearBuilt": "number: The year in which the structure was constructed. This field is recommended for peril model analyses.",
                "YearBuiltRange": "string",
            },
            "ContentTIV": "number",
            "CurrencyCode": "string",
            "EnhancementStatus": "string",
            "Hazard": {
                "ModelHazard": {
                    "EQ": {
                        "EQVintageId": "number",
                        "soil type number": {
                            "LandslideDesc": "string",
                            "LandslideResolutionCode": "number",
                            "LandslideResolutionName": ""string"",
                            "LandslideUncertainty": "number",
                            "LandslideValue": "number",
                            "UserDefinedLandslide": "number",
                            "UserDefinedLandslideResolutionCode": "number"
                        },
                        "Liquefaction": {
                            "LiquefactionConfidenceArea": "string",
                            "LiquefactionDesc": "string",
                            "LiquefactionNeighboringTypes": "string: In addition to providing the liquefaction susceptibility at geocoded coordinates, you can configure this setting to display all susceptibility types within a specified buffer. This output provides an excellent measure of liquefaction risk associated with nearby areas.",
                            "LiquefactionResolutionCode": "number",
                            "LiquefactionResolutionName": ""string"",
                            "LiquefactionUncertainty": "number",
                            "UserDefinedLiquefactionResolutionCode": "number",
                            "UserDefinedliquefaction": "number",
                            "liquefaction": "number",
                        },
                        "Soil": {
                            "BasinLocID": "number",
                            "BusinessInterruptionZoneId": "number",
                            "FireExposureType1": "number",
                            "FireExposureType2": "number",
                            "FireExposureType3": "number",
                            "FireExposureType4": "number",
                            "FireHazardParameters1": "number",
                            "FireHazardParameters2": "number",
                            "FireHazardParameters3": "number",
                            "FireHazardParameters4": "number",
                            "FireUncertainty": "number",
                            "ModelLoResBasinLocID": "number",
                            "ModelLoResSoilPeriod": "number",
                            "ModelLoResSoilPeriodUncertainty": "number",
                            "ModelLoResSoilThickness": "number",
                            "ModelLoResSoilType": "number",
                            "ModelLoResSoilTypeResolutionCode": "number",
                            "ModelLoResSoilTypeUncertainty": "number",
                            "ModelLoResSoilVS": "number",
                            "ModelVRGSoilType": "number",
                            "ModelVRGSoilTypeResolutionCode": "number",
                            "SoilConfidenceArea": "string",
                            "SoilNeighboringTypes": "string",
                            "SoilPeriod": "number",
                            "SoilPeriodUncertainty": "number",
                            "SoilThickness": "number",
                            "SoilType": "number",
                            "SoilTypeDesc": "string",
                            "SoilTypeResolutionCode": "number",
                            "SoilTypeResolutionName": "string",
                            "SoilTypeUncertainty": "number",
                            "SoilVS": "number",
                            "UserDefinedSoilType": "number",
                            "UserDefinedSoilTypeResolutionCode": "number",
                        }
                    },
                    "HU": {
                        "DistanceToCoast": {
                            "CustomDistanceToCoast": "number",
                            "CustomDistanceToCoastDataVintageId": "number",
                            "CustomDistanceToCoastResolutionCode": "number",
                            "DistanceToCoastCV": "number",
                            "DistanceToCoastResolutionCode": "number",
                            "DistanceToCoastResolutionName": "None",
                            "DistanceToCoastValue": "number",
                            "DistanceToOuterCoast": "number",
                            "DistanceToOuterCoastResolutionCode": "number",
                            "UserDefinedDistanceToCoast": "number",
                            "UserDefinedDistanceToCoastResolutionCode": "number",
                            "UserDefinedDistanceToCoastResolutionName": "string",
                            "WaveAmplificationFactor": "number"
                        },
                        "Elevation": {
                            "BuildingElevation": "number",
                            "BuildingElevationResolutionCode": "number",
                            "BusinessInterruptionZoneId": "number",
                            "ElevationResolutionCode": "number",
                            "ElevationResolutionName": "string",
                            "ElevationUncertainty": "number",
                            "NFIPRate": "number",
                            "NFIPRateResolutionCode": "number",
                            "NFIPYear": "number",
                            "NFIPYearResolutionCode": "number",
                            "UserDefinedBuildingElevation": "number",
                            "UserDefinedBuildingElevationResolutionCode": "number",
                            "UserDefinedBuildingElevationResolutionName": "string",
                            "UserDefinedElevation": "number",
                            "UserDefinedElevationResolutionCode": "number",
                            "UserDefinedElevationResolutionName": "string",
                            "UserDefinedNFIPYear": "number",
                            "UserDefinedNFIPYearResolutionCode": "number",
                            "UserDefinedNFIPYearResolutionName": "string",
                            "elevation": "number"
                        },
                        "HUVintageId": "number",
                        "NaturalRoughness": {
                            "NaturalRoughnessCode": "number",
                            "NaturalRoughnessName": "string",
                            "NaturalRoughnessResolutionCode": "number",
                            "NaturalRoughnessUncertainty": "number",
                            "NaturalRoughnessValue": "number"
                        }
                    },
                    "HashId": "string"
                },
                "NonModelHazard": {
                    "APZone": {
                        "APZoneResolutionCode": "number",
                        "APZoneVintageId": "number",
                        "AlquistPrioloConfidenceArea": "string",
                        "AlquistPrioloZone": "string"
                    },
                    "Flood": {
                        "BaseFloodElevation": "number",
                        "CobraArea": "string"
                        "FemaCommunityNum": "string",
                        "FloodAdditionalInformation": "string",
                        "FloodAnnualProbability": "string",
                        "FloodDataSourceCode": "string",
                        "FloodLookupConfidence": "number",
                        "FloodNeighboringZones": "string",
                        "FloodPanelNumber": "string",
                        "FloodResolutionCode": "number",
                        "FloodVintageId": "number",
                        "FloodZone": "string",
                        "Floodway": "string",
                        "MapPanelUnderRevision": "string",
                        "SpecialFloodHazardArea": "string"
                    },
                    "HashId": "string",
                    "MMI": {
                        "MMI100YrReturnPeriod": "number",  MMI is the common abbreviation for the Modified Mercalli Intensity scale. 
                        The MMI is a subjective measure of the strength of an earthquake. The return period is sometimes called the recurrence time or recurrence interval. 
                        Properly called the "average return period", it is an estimate of the number of years between occurrences of an earthquake of a given size in a 
                        particular area. The licensed MMI hazard product provides the relative ground shaking by a geographic location for a range of return periods: 100, 200, 250, and 475 year.  
                        The 475 Year Return Period represents the seismic design provisions in the U.S. building codes that require a building to withstand ground motion 
                        at a 10% chance of exceedance in 50 years. It is also used as one of the RMS(one) mapping layers. You may see visual differences in MMI values when you compare MMI mapping 
                        and the actual MMI hazard report. Maps show high resolution data. If a risk location is geocoded at high-resolution, street-address level, the MMI will match on the 
                        report and the map. If a risk location geocodes at the low-resolution, ZIP-code level, the report and the map will not match.
                        "MMI200YrReturnPeriod": "number",
                        "MMI250YrReturnPeriod": "number",
                        "MMI475YrReturnPeriod": "number",
                        "MMIResolutionCode": "number", The resolution of the hazard data that is available for the location.
                        "MMIVintageId": "number", Vintage of the data used in the hazard lookup.
                    },
                    "Slope": "string",
                    "Subsidence": {
                        "MineList": "string",
                        "SinkholeList": "string",
                        "SinkholeNeighboringZones": "string", In addition to providing the sinkhole zone the at the geocoded coordinates, you can configure this setting to display all zones within a specified buffer. 
                        This output provides an excellent measure of sinkhole risk associated with nearby areas.
                        "SinkholeZoneClass": "number", Sinkhole hazard zones are areas defined by risk based on the underlying geology of the area. Also taken into account are requency, size, and type of existing sinkholes within a specified hazard zone. Sinkhole hazard zones are not defined by just relying on historical information. The zones are classified into five categories, Area 0-IV.
                        "SinkholeZoneClassDescription": "string", Description of each sinkhole zone class.
                        "SinkholeZoneConfidenceArea": "string", A confidence area is a region that represents the possible uncertainty of a plotted location on the map. The size of the confidence area is configurable, 
                        and the following will be reported: (1) The entire confidence area falls in Zone XXX classification, or (2) portions of the confidence area fall outside of Zone XXX classification.
                        "SinkholeZoneResolutionCode": "number", The resolution of the hazard data that is available for the location.
                        "SubsidenceVintageId": "number"
                    },
                    "Wildfire": {
                        "WildfireAccessibility": "string", Estimated response time for land-based fire-suppression efforts.
                        "WildfireArea": "string", A descriptive label for the Wildland Urban Interface definition for the location.
                        "WildfireClimateConditions": "string", Specific climactic conditions that apply to the location, such as Santa Ana winds, Diablo winds, or Sundowner.
                        "WildfireHazard": "string", The annual likelihood of severe damage to an average residential structure. 
                        "WildfireLocalFireHistory": "number", Approximate annual number of fires expected (occurrence rate).
                        "WildfireNearbyFireHistory": "number", Approximate annual number of fires expected (occurrence rate) within a half-mile to four-mile radius.
                        "WildfireResolutionCode": "number", The resolution of the hazard data that is available for the location.
                        "WildfireSurfaceFuel": "string", Predominant surface fuel type.
                        "WildfireSusceptibility": "string", The likelihood of severe damage to an average residential structure given that a wildfire is in the vicinity.
                        "WildfireThreat": "string", Annual likelihood that a wildfire occurs within or spreads into the vicinity.
                        "WildfireVintageId": "number", Vintage of the data used in the hazard lookup.
                    },
                    "Windpool": {
                        "WindpoolType": "string", Specific zone classification assigned by each state DOI.
                        "WindpoolVintageId": "number: Vintage of the data used in the hazard lookup.",
                        "WindpoolZone": "string", The term âwindpool zoneâ is commonly used to refer to the coastal areas eligible for participation in state-sponsored insurance pools in nine Hurricane-exposed states. 
                        These pools were established to ensure availability of insurance to property owners in high-risk coastal areas.
                        "WindpoolZoneConfidenceArea": "string",
                        "WindpoolZoneResolutionCode": "number"
                    }
                }
            },
            "ParentRITExposureId": "number",
            "PrimaryRisk": "boolean",
            "RiskItemScheduleId": "number",
            "RiskitemCharacteristicsList": {
                "HashId": "string",
                "Items": [
                    {
                        "__type": "string",
                        "ExternalSourceId": "string",
                        "Id": "number",
                        "ParentId": "number",
                        "RITExposureValuationList": [
                            {
                                "ValuationBasisID": "number",
                                "ValuationID": "number",
                                "ValuationProvenance": "string",
                                "ValuationTypeID": "number: Valuation type is most commonly used to distinguish between replacement cost value (RCV) and actual cash value (ACV). RCV is the default for property risks of all types. In property insurance, ACV describes the current depreciated value of the asset and can be the basis for insurance valuation when a lower premium is desired. ACV is computed by subtracting depreciation from the replacement cost. The depreciation is usually calculated by establishing a useful life of the item and determining what percentage of that life remains. This percentage times the replacement cost gives the ACV.",
                                "Value": "number"
                            }
                        ],
                        "RiskItemName": "number",
                        "RiskItemNumber": "number",
                        "RiteTypeId": "number"
                    },
                    {
                        "__type": "string",
                        "ExternalSourceId": "string",
                        "Id": "number",
                        "ParentId": "number",
                        "RITExposureValuationList": [
                            {
                                "ValuationBasisID": "number",
                                "ValuationID": "number",
                                "ValuationProvenance": "string",
                                "ValuationTypeID": "number: Valuation type is most commonly used to distinguish between replacement cost value (RCV) and actual cash value (ACV). RCV is the default for property risks of all types. In property insurance, ACV describes the current depreciated value of the asset and can be the basis for insurance valuation when a lower premium is desired. ACV is computed by subtracting depreciation from the replacement cost. The depreciation is usually calculated by establishing a useful life of the item and determining what percentage of that life remains. This percentage times the replacement cost gives the ACV.",
                                "Value": "number"
                            }
                        ],
                        "RiskItemName": "number",
                        "RiskItemNumber": "number",
                        "RiteTypeId": "number",
                        "ContentsRateGrades": [
                            {
                                "PerilCode": "string",
                                "contentsRateGrade": "number: This field is a rating of the fragility of the contents and is relevant for earthquake due to the nature of the hazard, for example potential for building collapse. It is based on the ISO Contents Rate Grade.",
                            },
                            {
                                "PerilCode": "string",
                                "contentsRateGrade": "number",
                            },
                            {
                                "PerilCode": "string",
                                "contentsRateGrade": "number",
                            }
                        ],
                        "EqslGrade": "string",
                        "FragilityID": "string",
                        "UserDefMovablePropertyTypeID": "number"
                    }
                ]
            },
            "SubjectAtRisk": {
                "Construction": "string",
                "CreateUserID": "number",
                "ExternalSourceId": "string",
                "NumberOfBuildings": "number",
                "NumberOfRiskItems": "number",
                "NumberOfStories": "number",
                "Occupancy": "string",
                "SubjectAtRiskID": "number",
                "SubjectAtRiskName": "string",
                "SumOfBIValues": "number",
                "SumOfBuildingValues": "number",
                "SumOfContentsValues": "number",
                "TIV": "number",
                "TotalFloorArea": "number"
            },
            "TIV": "number"
        }
    ]
}
    ```

## riskItems [/services/v1/exposureService/riskItemSchedules/{id}/riskItems/{?accordResolutionCode, accountId, addressTypeName, admin1GeoId, admin1Name, admin2Name, admin3Name, alquistPrioloZoneName, baseFloodElevation, BiTiv, buildingElevation, buildingHeight, buildingHeightUomName, buildingName, buildingTiv, calculatedBuildingTiv, calculatedContentsTiv, calculatedBiTiv, calculatedTiv, cityName, constructionCompletePercent, contentTiv, contractId, constructionName, constructionScheme, countryCode, createDate, createUserId, currencyCode, distanceToCoastResolutionName, distanceToCoastValue, elevation, elevationResolutionName, exposureId, floodZone, floorArea, floorAreaUomName, floorOccupied, geocodeProductVersionDescription, geocodingResolutionCode, id, importSetId, landSlideValue, landSlideResolutionName, latitude, latLongGeoHash, limit, liquefaction, liquefactionResolutionName, longitude, MMI475YrReturnPeriod, name, naturalRoughnessValue, nfiRate, nfiYear, number, numBuildings, numStories, occupancyName, occupancyScheme, offset, postalCode, primaryRisk, quadKey, quadKey11, quadKey12, quadKey13, quadKey14, quadKey15, quadKey16, quadKey17, quadKey18, revisionLabel, riteScheduleId, soilType, soilTypeResolutionName, sourceId, streetAddress, subjectAtRiskId, subjectAtRiskName, TIV, windPoolZone, yearBuilt, zone1GeoId, zone1Name}]

### GET riskItems from riskItemSchedules [GET]
Returns a list of riskItems.

+ Parameters
   + accordResolutionCode (string, optional) ... ACCORDResolutionCode.
   + accountId (integer, optional) ... Risk item account number.
   + addressTypeName (string, optional) ... Address type.
   + admin1GeoId (integer, optional) ... Geo ID of administrator 1.
   + admin1Name (string, optional) ... Administrator name.
   + admin2Name (string, optional) ... Administrator name.
   + admin3Name (string, optional) ... Administrator name.
   + alquistPrioloZoneName (string, optional) ... Alquist Priolo zone name.
   + baseFloodElevation (string, optional) ... Base flood elevation.
   + BiTiv (double, optional) ... BI TIV.
   + buildingElevation (double, optional) ... Building elevation.
   + buildingHeight (float, optional) ... Building height.   
   + buildingHeightUomName (string, optional) ... Name of the building height UOM.
   + buildingName (string, optional) ... Building name.
   + buildingTiv (double, optional) ... Building TIV.
   + calculatedTiv (double, optional) ... Calculated TIV.
   + calculatedBuildingTiv (double, optional) ... Calculated building TIV.
   + calculatedContentsTiv (double, optional) ... Calculated contents TIV.
   + calculatedBiTiv (double, optional) ... Calculated BI TIV.
   + cityName (string, optional) ... City name.
   + constructionCompletePercent (float, optional) ... Percentage of construction completeness.
   + contentTiv (double, optional) ... Content TIV.
   + contractId (long, optional) ... Contract ID.
   + constructionName (string, optional) ... Construction name.
   + constructionScheme (string, optional) ... Construction scheme. 
   + countryCode (string, optional) ... Country code.
   + createDate (less than or equal) ... Date when risk item was created in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + createUserId (integer, optional) ... User ID.
   + currencyCode (string, optional) ... Currency code.
   + distanceToCoastResolutionName (string, optional) ... Distance-to-coast resolution.
   + distanceToCoastValue (double, optional) ... Distance-to-coast value.
   + elevation (double, optional) ... Elevation.
   + elevationResolutionName (string, optional) ... Name of the elevation resolution.
   + exposureId (integer, optional) ... Exposure ID.
   + floodZone (string, optional) ... Flood zone.
   + floorArea (double, optional) ... Floor area.
   + floorAreaUomName (string, optional) ... Floor area UOM name.
   + floorOccupied (string, optional) ... Floor occupancy.
   + geocodeProductVersionDescription (string, optional) ... Geocode product version description.
   + geocodingResolutionCode (integer, optional) ... Geocoding resolution code.
   + id (string) ... Risk item ID.
   + importSetId (integer) ... Import set ID.
   + landSlideValue (double, optional) ... Land slide value.
   + landSlideResolutionName (string, optional) ... Name of the land slide resolution.
   + latitude (double, optional) ... Latitude.
   + latLongGeoHash (string, optional) ... latLongGeoHash.
   + limit (number, optional) ... Number of records to return per page.
   + liquefaction (double, optional) ... Liquefaction.
   + liquefactionResolutionName (string, optional) ... Name of the liquefaction resolution.
   + longitude (double, optional) ... Longitude.
   + MMI475YrReturnPeriod (double, optional) ... MMI475YrReturnPeriod.
   + name (string, optional) ... Risk item name.  
   + naturalRoughnessValue (double, optional) ... Natural roughness value.
   + nfiRate (double, optional) ... NFI rate.
   + nfiYear (double, optional) ... NFI year.
   + number( integer) ... Risk item number.
   + numBuildings (integer, optional) ... Number of buildings.
   + numStories (integer, optional) ... Number of stories.
   + occupancyName( string, optional) ... Occupancy name.
   + occupancyScheme (string, optional) ... Occupancy scheme.
   + offset (number, optional) ... Return results starting with this record number (0-based).  
   + postalCode (string, optional) ... Postal code.
   + primaryRisk (boolean, optional) ... Indicates whether an instance is a primary risk.
   + quadKey (integer, optional) ... Quad key.
   + quadKey11 (integer, optional) ... Quad key 11.
   + quadKey12 (integer, optional) ... Quad key 12.
   + quadKey13 (integer, optional) ... Quad key 13.
   + quadKey14 (integer, optional) ... Quad key 14.
   + quadKey15 (integer, optional) ... Quad key 15.
   + quadKey16 (integer, optional) ... Quad key 16. 
   + quadKey17 (integer, optional) ... Quad key 17. 
   + quadKey18 (integer, optional) ... Quad key 18. 
   + revisionLabel (string, optional) ... Revision label.
   + riteScheduleId (integer, optional) ... risk item schedule ID.
   + soilType (double, optional) ... Soil type.
   + soilTypeResolutionName (string, optional) ... Name of the soil type resolution.
   + sourceId (string, optional) ... Risk item source ID.
   + streetAddress (string, optional) ... Streed address.
   + subjectAtRiskId (integer, optional) ... ID of the subject at risk. 
   + subjectAtRiskName (integer, optional) ... Identifier for at risk subjects.
   + TIV (double, optional) ... TIV.
   + windPoolZone (string, optional) ... Wind pool zone.
   + yearBuilt (integer, optional) ... Year built.
   + zone1GeoId (integer, optional) ... Geo ID of zone 1.
   + zone1Name (string, optional) ... Zone name.
   
+ Response 200

    ```js
        {
    "Count": "number: number of riksItems in system",
    "RiskItems": [
        {
            "CreateDate": "string: create date and time in format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
            "Id": "number",
            "ImportSetId": "number",
            "Name": ""number"",
            "Number": ""number"",
            "SourceId": "string",
            "URI": "string",
            "Address": {
                "ACORDResolutionCode": "string",
                "AddressSchemeID": "number",
                "AddressText": "string",
                "AddressType": "number",
                "AddressTypeName": "string",
                "Admin1Code": "string",
                "Admin1Fips": "string",
                "Admin1GeoID": "number",
                "Admin1Name": "string: Administrative divisions refer to geographic divisions, such as states and provinces, and vary by country. Administrative Division1 (Admin1) represents large geographic divisions, such as states and provinces, and corresponds to state-level geocoding resolution (resolution code 10). ",
                "Admin2Code": "string",
                "Admin2Fips": "string",
                "Admin2GeoID": "number",
                "Admin2Name": "string: Administrative Division2 (Admin2) represents smaller geographic divisions, such as counties, and corresponds to county-level geocoding resolution (resolution code 9).",
                "Admin3Code": "string",
                "Admin3GeoID": "number",
                "Admin3Name": "string: Administrative Division3 (Admin3) represents even smaller geographic divisions, such as districts, and corresponds to district-level geocoding resolution (resolution code 8).",
                "Admin4Code": "string",
                "Admin4GeoID": "number",
                "Admin4Name": "string",
                "Admin5Code": "string",
                "Admin5GeoID": "number",
                "Admin5Name": "string",
                "Alley": "string",
                "ApnId": "string",
                "Block": "string",
                "BlockGroup": "string",
                "BuildingName": "string",
                "CityCode": "string",
                "CityGeoID": "number",
                "CityName": "string",
                "CountryCode": "string",
                "CountryGeoID": "number",
                "CountryName": "string",
                "CountryScheme": "string: The scheme used for importing country codes: ISO2A: 2-character ISO,  ISO3A: 3-character ISO, ISO3N: 3-digit ISOFIPS.",
                "CountryUnitCode": "string",
                "CreateUserID": "number",
                "ESDBAddressID": "string",
                "ESDBBuildingID": "string",
                "FirmName": "string",
                "GeoDataSourceID": "number",
                "GeoModelResolutionCode": "number",
                "GeoVintageId": "number",
                "GeocodeProductVersion": "string",
                "GeocodingAccuracyBuffer": "number",
                "GeocodingCV": "number",
                "GeocodingLocationCode": "string",
                "GeocodingMatchCode": "string: Geocode match levels represent the resolution at which a location is geocoded. Supported match levels vary by country.",
                "GeocodingResolutionCode": "number",
                "GeocodingResolutionConfidence": "number",
                "HashId": "string",
                "HiRange": "string",
                "HiUnit": "string",
                "HouseNumber": "string",
                "IsExtended": "number",
                "IsIntersection": "string",
                "IsSubmittedAddress": "number",
                "Latitude": "number",
                "LoUnit": "string",
                "LocationCode": "string",
                "LocationCodeGeoID": "number",
                "Longitude": "number: RMS(one) identifies latitude and longitude when a risk location is geocoded. Users can also enter a valid latitude and longitude, and RMS(one) can retrieve the corresponding ZIP Code for U.S. risk locations.",
                "LowRange": "string",
                "ParcelNumber": "string: Parcel-level matches are based on property parcels. Property parcels contain information on the boundaries, ownership, and other aspects of a commercial or residential property in the U.S. Parcel data is consistent over time and covers more than 50 percent of the privately owned U.S. parcels. Parcel centroids provide highly accurate geocoding matches, although it is not always as accurate as a building footprint geocoding that is achievable with RMS' Sanborn data sets. It is superior to street address geocoding because it is not subject to address interpolation errors.",
                "PostDir": "string",
                "PostDir2": "string",
                "PostalCode": "string",
                "PostalCode1GeoID": "number",
                "PostalCode2GeoID": "number",
                "PostalCode3GeoID": "number",
                "PostalCodeGeoID": "number",
                "PreDir": "string",
                "PreDir2": "string",
                "PreferredCity": "string",
                "QuadKey": "number",
                "RangeParity": "string",
                "SanbornAreaID": "number: Square Footage for the building as defined by the Sanborn Mapping Company.",
                "SanbornBuildingID": "string: The building identifier as defined by the Sanborn Mapping Company.",
                "SegmentId": "string",
                "SegmentParity": "string",
                "StreetAddress": "string",
                "StreetName": "string",
                "StreetName2": "string",
                "StreetType": "string",
                "StreetType2": "string",
                "UnitNumber": "string",
                "UnitType": "string",
                "Zip4": "string",
                "Zone1Code": "string",
                "Zone1GeoID": "number",
                "Zone1Name": "string",
                "Zone2Code": "string",
                "Zone2GeoID": "number",
                "Zone2Name": "string",
                "Zone3Code": "string",
                "Zone3GeoID": "number",
                "Zone3Name": "string",
                "Zone4Code": "string",
                "Zone4GeoID": "number",
                "Zone4Name": "string",
                "Zone5Code": "string",
                "Zone5GeoID": "number",
                "Zone5Name": "string"
            },
            "BITIV": "number",
            "BuildingTIV": "number",
            "CommonCharacteristics": {
                "AFMFireBuildingClass": "string",
                "AFMFireOccupancyClass": "string",
                "AirFiltrationCode": "number",
                "AirconditioningTypeCode": "number",
                "ArchitecturalElementsCode": "number",
                "ArchitecturalHeight": "number",
                "AtticInsulationCode": "number: Attic insulation reduces the heat loss from the building and hence reduces the snow melt on the roof that leads to ice dam formation from the gutter. ",
                "AtticInsulationName": "string",
                "BIPreparednessCode": "number",
                "BIPreparednessDescription": "string",
                "BIRedundancyCode": "number: Captures redundancies within the same account, such as the existence of multiple locations that perform the same function to some extent. ",
                "BIRedundancyName": "string",
                "BaseIsolationCode": "number: Buildings with base isolation float on a pad that dampers waves during an event. ",
                "BaseIsolationName": "string",
                "BasementCode": "string: Level of basement flood protection and basement function. ",
                "BuildingHeight": "number: The building height, in feet or meters. Currently this data is for informational purposes and is not used in any loss calculations.",
                "BuildingHeightUOMID": "number: The unit of measurement used for building height. ",
                "BuildingHeightUOMName": ""string"",
                "BuildingOwnershipCode": "number",
                "BuildingOwnershipName": "string",
                "Capacity": "number",
                "CapacityTypeID": "number",
                "CladdingCode": "number",
                "CladdingTypeCode": "number",
                "ClaimProcessRankID": "number",
                "ComAppurtenantCode": "string",
                "ConstructionCertificationCode": "number",
                "ConstructionClass": ""string"",
                "ConstructionCompletePercent": "number": Indicates the percentage of construction that is completed. The percentage in this field is not used to adjust the vulnerability curves for incomplete construction. The exposure is simply reduced in proportion to the percentage entered, and the original vulnerability curve is used. Note that RMS(one) does not update this number over time. If no value is supplied, a default value of 100% is used.",
                "ConstructionCompletedDate": "string",
                "ConstructionQualityValuation": "number",
                "ConstructionRange": "string",
                "ConstructionScheme": ""string"",
                "ConstructionSchemeId": ""number"",
                "ConstructionStartedDate": "string: Date construction was started or completed. Unless you license and model Builders Risk, this field is for data capture only and is not used to calculate losses. If you enter a start date, completion date is required. Start date must be less than the completion date.",
                "ContainingPropertyID": "number",
                "ContentLossTrigger": "number: Presence of a content loss trigger indicates that this location contributes to a mini policy or a wrap policy where a trigger deductible is applicable. ",
                "ContentsVulnWaterCode": "string",
                "ContentsVulnWindCode": "string",
                "CrippleWallsBracedCode": "number: A cripple wall is a short wall that extends from the top of the footing to the level of the first floor, found almost exclusively in wood frame residential construction. These walls have no shear resistance and tend to perform poorly in earthquakes. Damage to the building may be total. Post-1948 construction in California has not allowed the use of cripple walls. ",
                "CrippleWallsBracedName": "string",
                "DesignCode": "number",
                "EQFrameConnectionCode": "number: Unbolted buildings may slide off their foundations during a strong earthquake, causing significant damage. Anchoring the frame to the foundation has proven to be the best means of protection against earthquake damage in frame structures. ",
                "EQFrameConnectionName": "string",
                "EQSLInsurance": "boolean",
                "EngineeredFoundationCode": "number: Buildings whose foundations were designed to take into account the soil deformations anticipated for landslides or liquefaction. ",
                "EngineeredFoundationName": "string",
                "EnvelopeOpeningCode": "number: For shear wall buildings, the 50% rule refers to the area of a buildingâs exterior wall surface that consists of window and door openings. Buildings with more than 50% of the wall open are evaluated as having less seismic resistance. For the RMS Canada and U.S. Earthquake Model, this modifier has been removed. It applies to earthquake modeling for a limited number of older models.",
                "EnvelopeOpeningName": "string",
                "EquipmentEQBracingCode": "number",
                "EquipmentEQBracingName": "string",
                "EquipmentGroundFloorCode": "string: Ground-level equipment such as electrical, gas and water meters, and exterior access points for cable and telephone systems are prone to damage from flooding if not elevated or otherwise protected. ",
                "EquipmentSideBracingCode": "string: Mechanical and electrical systems that are attached to external walls can receive damage from high winds.",
                "EquipmentSupportMaintenanceCode": "number: Buildings that show signs of distress or duress, such as cracking due to aging, ground settlement, and overloading or cracking due to damage from previous earthquakes, are likely to experience additional damage during an earthquake. ",
                "EquipmentSupportMaintenanceName": "string",
                "ExteriorEQCode": "string",
                "ExteriorEQName": "string",
                "ExteriorFLCode": "string",
                "ExteriorFLDescription": "string",
                "ExteriorHUCode": "string",
                "ExteriorHUDescription": "string",
                "ExteriorRatingCode": "string",
                "ExteriorRatingName": "string",
                "ExteriorTOCode": "string",
                "ExteriorTODescription": "string",
                "ExternalOrnamentationCode": "number: Ornamentation includes all elements that can shake loose from either roof or structural elements of the building. ",
                "FinishedFloorHeight": "string",
                "FireAlarm": "number",
                "FireDeptRatingCode": "string",
                "FireDeptRatingModifierCode": "number",
                "FireDeptRatingModifierName": "string",
                "FirePlace": "string",
                "FireSprinklerPresenceCode": "number",
                "FireSprinklerPresenceDescription": "string",
                "FireSprinklerTypeCode": "number: Sprinkler systems are classified as âwet pipeâ or âdry pipeâ. In general, wet pipe systems cause more damage than dry pipe systems during earthquakes. When the type of sprinkler system is unknown, the Earthquake Sprinkler Leakage (EQSL) Model uses an assumed inventory distribution of 70% wet pipe and 30% dry pipe to compute the sprinkler-leakage-related damages. Applying this secondary modifier for a location where it is known that the sprinkler system is either wet or dry refines the loss estimate associated with sprinkler leakage. ",
                "FireSprinklerTypeDescription": "string",
                "Flashing": "number: Indicates the quality of the flashing and coping installed at the roof. Flashing refers to thin continuous pieces of sheet metal or other water-impervious material that are installed to prevent the passage of water into a structure at locations where there is an abrupt change in the roof geometry. For example, it is placed around the base of discontinuities or objects that protrude from the roof of a building, such as mechanical openings and parapets, to deflect water away from the construction joints at these locations. Coping refers to thin continuous pieces of sheet metal or other water-impervious material that act as a cap on top of parapets and roof ridges to prevent water from entering a structure through the construction joints at these locations. ",
                "FlashingDescription": "string",
                "FloodDefenseHeightUOMID": "number: Unit of measurement for flood defenses, either feet or meters. ",
                "FloodDefenseHeightUOMName": "string",
                "FloodMissileCode": "string: Buildings may receive damage from exposure to flood-carried missiles such as uprooted trees, branches, and sand.",
                "FloodProtectionCode": "string: Damage due to flood can be reduced if flood protection measures are implemented. ",
                "FloorArea": "number: Applies only to residential locations. Represents total living area, across all floors. Excludes garage, porches, decks, sunrooms, and basements. Used to assess residential vulnerability curves for U.S. Hurricane and Caribbean Hurricane analyses and for U.S. and Canada Severe Convective Storm and Winterstorm analyses (wind sub-peril only).",
                "FloorAreaUOMID": "number",
                "FloorAreaUOMName": "string",
                "FloorOccupied": "number: A single floor or range of floors occupied. Positive numbers represent floors above grade, and negative numbers represent floors below grade (i.e., basement levels). The maximum negative number is -5. The number of floors occupied should include consideration for the ground floor designation of â0,â which in some countries is designated as floor â1,â Thus, if floors 1 thru 4 are occupied, the number of stories should be at least 5. Floors occupied cannot exceed number of stories. Losses vary depending on the information entered in both the Floors Occupied and Number of Stories fields. RMS recommends specifying this value only if the location has a geocoding match level better than postcode.",
                "FloorSize": "number",
                "FloorTypeCode": "number: Type of floor materials. ",
                "FloorTypeDescription": "string",
                "FloorsUnderground": "number",
                "FoundationSystemCode": "string: A building that is inadequately connected to its foundation can fail catastrophically during a windstorm. ",
                "FrameFoundationConnectionCode": "number",
                "FrameFoundationConnectionDescription": "string",
                "GaragingCode": "number: Used to specify where automobiles are parked. This is applicable only to the Australia Severe Convective Storm model. ",
                "GaragingDescription": "string",
                "GroundFloorArea": "number",
                "HUZoneCode": "string",
                "HazardousExposures": "number",
                "HeatingTypeCode": "number",
                "HeightOfFloodDefenseCode": "number: The height of any flood defenses, such as flood walls, protecting the property. The height is measured relative to the North American Vertical Datum of 1988 (NAVD 88) for locations in the U.S. and relative to the World Geodetic System datum of 1984 (WGS 84) for locations in the Caribbean. Supports storm surge modeling.",
                "IFMEquipmentBracingCode": "number: Specifies the overall quality of outdoor machinery and equipment bracing. For IFM exposures, use this rather than Ground Level Equipment.",
                "IFMEquipmentBracingDescription": "string",
                "IFMSiteHazardCode": "number: Specifies missiles and other environmental hazards.",
                "IFMSiteHazardDescription": "string",
                "IFMStructuralConditionCode": "number: This is a hybrid modifier used by the Industrial Facilities Model to capture both maintenance and construction/design quality. For IFM exposures, use this rather than construction quality.",
                "IFMStructuralConditionDescription": "string",
                "IFMVerticalExpDistCode": "number: Used only by the Industrial Facilities Model. Specifies how much exposure is located at the basement or grade level. This is available for surge contents (mechanical and equipment) only.",
                "IFMVerticalExpDistDescription": "string",
                "IceProtectionCode": "number: Ice dam protection membranes that are installed under the roof cover protect roofs from water damage due to ice dam buildup. ",
                "IceProtectionDescription": "string",
                "IsMaintained": "number",
                "LandSquareFootage": "number",
                "MFDSubCategoryCode": "number: Multi-family dwelling subcategory, either apartment, condominium, townhouse/row house, other, or unknown. This field is for informational purposes and will be used in the RMS building valuation model. This field has no impact on loss calculations.",
                "MFDSubCategoryName": "string",
                "MechanicalElectricalFloor": "number",
                "NumBuildings": "number: Number of buildings.",
                "NumStories": "number: The number of stories for the structure. The default is 0, which is interpreted by RiskLink/RiskBrowser as âunknown.â This should be a single number, such as â6â or â22,â not â12-14â or â5 to 10.â The number of stories value designates the ground floor as Floor â1.â Structures are classified according to the number of stories they have; for example, one-story structures, 2â3 story structures, 4â7 story structures, and so on. The classifications vary by peril model, construction class, and occupancy type. For more information about the ranges used by a specific country peril, see the appropriate model methodology document. This field is highly recommended for peril model analyses.",
                "NumStoriesRange": "string",
                "NumUnits": "number",
                "NumberOfBaths": "number",
                "NumberOfBedrooms": "number",
                "NumberOfCars": "number",
                "NumberOfEscalators": "number",
                "OccupancyClass": "string",
                "OccupancyRange": "string",
                "OccupancyScheme": "string",
                "OccupancySchemeId": "number",
                "OnSiteFloodDefenceRP": "number",
                "OnsiteFloodDefenceHeight": "number",
                "OnsiteFloodHeightUnit": "number",
                "OpeningProtectCode": "string: Windows and doors with poor wind resistance can expose interior building components and contents to more wind and water hazards than openings with good wind resistance. ",
                "OpeningProtectSecondaryCode": "string: Doors with poor wind resistance can expose interior building components and contents to more wind and water hazards than openings with good wind resistance. ", 
                "OrnamentationCode": "number: Ornamentation includes all elements that can shake loose from either roof or structural elements of the building. ",
                "ParkingGarageCode": "number",
                "PerformanceEQCode": "number",
                "PerformanceEQDescription": "string",
                "PerformanceFLCode": "number",
                "PerformanceFLDescription": "string",
                "PerformanceHUCode": "number",
                "PerformanceHUDescription": "string",
                "PerformanceTOCode": "number",
                "PerformanceTODescription": "string",
                "PerilYearOfUpgrades": "string",
                "PlanIrregularityCode": "number: Configurations can be regular (square, rectangular, circular) or irregular (L-shape, T-shape, triangular). Irregular buildings tend to twist in addition to shaking laterally. Damage often occurs at the corners between different wings of a building. ",
                "PlanIrregularityDescription": "string",
                "PlumbingCode": "number: Insulation decreases temperature differences. Buildings with insulated plumbing are less likely to suffer from burst pipes and water damage. ",
                "PlumbingDescription": "string",
                "PoundingCode": "number: Pounding occurs when there is little or no clearance between adjacent buildings, and the buildings impact or âpoundâ against each other as they sway during an earthquake. ",
                "PoundingDescription": "string",
                "PrimaryConstructionID": "number",
                "PrimaryOccupancyID": "number: The normalized field for the combination of Occupancy Scheme and Occupancy Class.",
                "PropertyType": "number",
                "PurlinAnchoringCode": "number: In older tilt-up structures, connections between the tilt-up walls and the roof framing system were designed inadequately for earthquake resistance. The failure of these connections can be prevented by the addition of special anchors.",
                "PurlinAnchoringDescription": "string",
                "RemoteAlarmReliability": "number",
                "RemoteFireAlarmPresence": "string",
                "RentableBuildingArea": "number",
                "RentalPropertyIdentifier": "number: Indicates if the property is owner-insured or tenant-insured. This field is for informational purposes and is in the RMS building valuation model. This field has no impact on loss calculations.",
                "RentalPropertyIdentifierName": "string",
                "ResAppurtenantCode": "string",
                "ResidentialGradeCode": "number",
                "ResidentialGradeDescription": "string",
                "RoofAdditionsCode": "string: Roof parapets hang off the edge of roofs and may be at risk in high winds.",
                "RoofAgeConditionCode": "string: Well-maintained roofs tend to hold up better under high wind conditions. Older roofs may be at more risk to an event. ",
                "RoofAnchorCode": "string: This is one of the most important indicators of potential wind-induced damage. The failure or absence of anchors may result in the roof being blown off and the walls falling apart. ",
                "RoofCoveringCode": "string: Damage is directly correlated to the type of roofing system in place. ",
                "RoofEquipmentCode": "string: If there are large areas of roof covered with equipment, for example anchored solar panels, the building is more vulnerable to wind because the equipment anchorage can compromise the roofâs structural integrity.",
                "RoofFrameCode": "string: The type of framing material for the roof affects the ability of the roof to stay attached to a building under high wind conditions.",
                "RoofGeometryCode": "string: This directly impacts the type of wind forces a roof is likely to experience. For example, flat roofs are likely to experience more loading than hipped or high-pitched roofs.",
                "RoofMaintenanceCode": "string: Well-maintained roofs tend to hold up better under high wind conditions.",
                "RoofSheathingAttachmentCode": "string: Roof sheathing is one of the main components of a building. It helps keep the integrity of the building and is a major line of defense against losses to building and contents due to both wind and rain. The strength of sheathing depends on the way it is attached to the roof rafters. Loss of roof sheathing often happens due to improper nailing design and schedule. ",
                "RoofVentCode": "number: Adequate roof ventilation ensures that the attic space is kept close to the ambient temperature, hence this prevents snow on a roof surface melting and formation of ice dams. ",
                "RoofVentDescription": "string",
                "SecondaryOccupancies": "string",
                "SecurityAlram": "string",
                "ServiceZoneID": "number",
                "SetBackFromStreetCode": "number",
                "ShortColumnConditionCode": "number: Concrete structures in which the full height of some columns has been restricted by spandrel beams or in fill walls. These columns will experience excessive loading and could fail in shear. ",
                "ShortColumnConditionDescription": "string",
                "SnowGuardsCode": "number: The presence of snow guards allows the snow to distribute evenly over a sloping roof rather than snow drifting toward the gutter. This minimizes the snow volume available to form and maintain an ice dam. This also reduces the likelihood of snow drift loads causing roof deflection and possible roof collapse. ",
                "SnowGuardsDescription": "string",
                "SoftStoryCode": "number: Many buildings have shear walls or infill walls at the upper floors that are interrupted at the first floor to provide more open space for car parking, lobbies and retail space. The first floor in these cases acts as a âsoft storyâ and will sustain excessive deformations and stresses in a major earthquake, unless designed specifically to take the stiffness discontinuity into account. ",
                "SoftStoryDescription": "string",
                "SprinklerLeakageSusceptibilityCode": "number",
                "SprinklerLeakageSusceptibilityDescription": "string",
                "StructuralRedundancyCode": "number: Redundancy refers to having multiple lateral load resisting elements (frames or shear walls) in a building. Redundancy is a desirable feature because of one structural system fails during an earthquake, another system is present to resist the lateral earthquake forces, thus avoiding catastrophic collapse. For the RMS Canada and U.S. Earthquake Model, this modifier has been removed. It applies to earthquake modeling for a limited number of older models.",
                "StructuralRedundancyDescription": "string",
                "StructuralUpgradeNonURMCode": "number: This structural upgrade characteristic applies to buildings that have been retrofitted in some way to provide superior earthquake resistive capabilities. This generally applies to older buildings that have been upgraded to conform to more modern building codes. ",
                "StructuralUpgradeNonURMDescription": "string",
                "SurroundingBuildingDensity": "number",
                "TankCode": "number: Rooftop tanks on adjoining, higher buildings are a falling hazard during an earthquake. For the RMS Canada and U.S. Earthquake Model, this modifier has been removed. It applies to earthquake modeling for a limited number of older models.",
                "TankDescription": "string",
                "TaxValue": "number",
                "TopologicalFeatures": "number",
                "TorsionCode": "number: The geometry of the lateral load resisting system. Asymmetry can aggravate damage by inducing twisting, torsion, and differential motion in the building. Some of the most common occurrences of asymmetry are in frame buildings with a stiff elevator core that is placed asymmetrically. For the RMS Canada and U.S. Earthquake Model, this modifier has been removed. It applies to earthquake modeling for a limited number of older models.",
                "TorsionDescription": "string",
                "TotalRooms": "number",
                "TreeDensityCode": "number: Buildings adjacent to trees may receive damage from trees falling within striking distance. ",
                "TreeDensityDescription": "string",
                "URMChimneyPartitionWallCode": "number: Only unreinforced masonry (brick or hollow clay tile) walls or partitions can contribute significantly to a buildingâs damage. The collapse of these partitions can contribute significantly to the overall financialdamage to a structure. In USGS seismic zone 4 in California, they are not used in post-1934 construction. This item also includes unreinforced masonry chimneys.",
                "URMChimneyPartitionWallName": "string",
                "URMRetrofitCode": "number: Several jurisdictions in California U.S.G.S. seismic zone 4 have instituted mandatory seismic retrofit programs for unreinforced masonry buildings. ",
                "URMRetrofitDescription": "string",
                "UseContentValue": "boolean",
                "UsesPublicAdjustor": "number",
                "VerticalIrregularityCode": "number: Significant setbacks and overhangs can cause irregular structural performance in an earthquake. Resulting stress concentrations can lead to further damage. ",
                "VerticalIrregularityDescription": "string",
                "WindMissileExposureCode": "string: Buildings may receive damage from exposure to airborne missiles, gravel, or from trees within falling distance. ",
                "WindowTypeCode": "number",
                "XREFExposureSourceBuildingID": "string",
                "YearBuilt": "number: The year in which the structure was constructed. This field is recommended for peril model analyses.",
                "YearBuiltRange": "string",
            },
            "ContentTIV": "number",
            "CurrencyCode": "string: 3-digit currency code (for example, USD)",
            "EnhancementStatus": "string",
            "Hazard": {
                "ModelHazard": {
                    "EQ": {
                        "EQVintageId": "number",
                        "soil type number": {
                            "LandslideDesc": "string",
                            "LandslideResolutionCode": "number",
                            "LandslideResolutionName": ""string"",
                            "LandslideUncertainty": "number",
                            "LandslideValue": "number",
                            "UserDefinedLandslide": "number",
                            "UserDefinedLandslideResolutionCode": "number"
                        },
                        "Liquefaction": {
                            "LiquefactionConfidenceArea": "string",
                            "LiquefactionDesc": "string",
                            "LiquefactionNeighboringTypes": "string: In addition to providing the liquefaction susceptibility  at the geocoded coordinates, you can configure this setting to display all susceptibility types within a specified buffer. This output provides an excellent measure of liquefaction risk associated with nearby areas.",
                            "LiquefactionResolutionCode": "number",
                            "LiquefactionResolutionName": ""string"",
                            "LiquefactionUncertainty": "number",
                            "UserDefinedLiquefactionResolutionCode": "number",
                            "UserDefinedliquefaction": "number",
                            "liquefaction": "number",
                        },
                        "Soil": {
                            "BasinLocID": "number",
                            "BusinessInterruptionZoneId": "number",
                            "FireExposureType1": "number",
                            "FireExposureType2": "number",
                            "FireExposureType3": "number",
                            "FireExposureType4": "number",
                            "FireHazardParameters1": "number",
                            "FireHazardParameters2": "number",
                            "FireHazardParameters3": "number",
                            "FireHazardParameters4": "number",
                            "FireUncertainty": "number",
                            "ModelLoResBasinLocID": "number",
                            "ModelLoResSoilPeriod": "number",
                            "ModelLoResSoilPeriodUncertainty": "number",
                            "ModelLoResSoilThickness": "number",
                            "ModelLoResSoilType": "number",
                            "ModelLoResSoilTypeResolutionCode": "number",
                            "ModelLoResSoilTypeUncertainty": "number",
                            "ModelLoResSoilVS": "number",
                            "ModelVRGSoilType": "number",
                            "ModelVRGSoilTypeResolutionCode": "number",
                            "SoilConfidenceArea": "string",
                            "SoilNeighboringTypes": "string",
                            "SoilPeriod": "number",
                            "SoilPeriodUncertainty": "number",
                            "SoilThickness": "number",
                            "SoilType": "number",
                            "SoilTypeDesc": "string",
                            "SoilTypeResolutionCode": "number",
                            "SoilTypeResolutionName": "string",
                            "SoilTypeUncertainty": "number",
                            "SoilVS": "number",
                            "UserDefinedSoilType": "number",
                            "UserDefinedSoilTypeResolutionCode": "number",
                        }
                    },
                    "HU": {
                        "DistanceToCoast": {
                            "CustomDistanceToCoast": "number",
                            "CustomDistanceToCoastDataVintageId": "number",
                            "CustomDistanceToCoastResolutionCode": "number",
                            "DistanceToCoastCV": "number",
                            "DistanceToCoastResolutionCode": "number",
                            "DistanceToCoastResolutionName": "None",
                            "DistanceToCoastValue": "number",
                            "DistanceToOuterCoast": "number",
                            "DistanceToOuterCoastResolutionCode": "number",
                            "UserDefinedDistanceToCoast": "number",
                            "UserDefinedDistanceToCoastResolutionCode": "number",
                            "UserDefinedDistanceToCoastResolutionName": "string",
                            "WaveAmplificationFactor": "number"
                        },
                        "Elevation": {
                            "BuildingElevation": "number",
                            "BuildingElevationResolutionCode": "number",
                            "BusinessInterruptionZoneId": "number",
                            "ElevationResolutionCode": "number",
                            "ElevationResolutionName": "string",
                            "ElevationUncertainty": "number",
                            "NFIPRate": "number",
                            "NFIPRateResolutionCode": "number",
                            "NFIPYear": "number",
                            "NFIPYearResolutionCode": "number",
                            "UserDefinedBuildingElevation": "number",
                            "UserDefinedBuildingElevationResolutionCode": "number",
                            "UserDefinedBuildingElevationResolutionName": "string",
                            "UserDefinedElevation": "number",
                            "UserDefinedElevationResolutionCode": "number",
                            "UserDefinedElevationResolutionName": "string",
                            "UserDefinedNFIPYear": "number",
                            "UserDefinedNFIPYearResolutionCode": "number",
                            "UserDefinedNFIPYearResolutionName": "string",
                            "elevation": "number"
                        },
                        "HUVintageId": "number",
                        "NaturalRoughness": {
                            "NaturalRoughnessCode": "number",
                            "NaturalRoughnessName": "string",
                            "NaturalRoughnessResolutionCode": "number",
                            "NaturalRoughnessUncertainty": "number",
                            "NaturalRoughnessValue": "number"
                        }
                    },
                    "HashId": "string"
                },
                "NonModelHazard": {
                    "APZone": {
                        "APZoneResolutionCode": "number",
                        "APZoneVintageId": "number",
                        "AlquistPrioloConfidenceArea": "string",
                        "AlquistPrioloZone": "string"
                    },
                    "Flood": {
                        "BaseFloodElevation": "number",
                        "CobraArea": "string"
                        "FemaCommunityNum": "string",
                        "FloodAdditionalInformation": "string",
                        "FloodAnnualProbability": "string",
                        "FloodDataSourceCode": "string",
                        "FloodLookupConfidence": "number",
                        "FloodNeighboringZones": "string",
                        "FloodPanelNumber": "string",
                        "FloodResolutionCode": "number",
                        "FloodVintageId": "number",
                        "FloodZone": "string",
                        "Floodway": "string",
                        "MapPanelUnderRevision": "string",
                        "SpecialFloodHazardArea": "string"
                    },
                    "HashId": "string",
                    "MMI": {
                        "MMI100YrReturnPeriod": "number",  MMI is the common abbreviation for the Modified Mercalli Intensity scale. 
                        The MMI is a subjective measure of the strength of an earthquake. The return period is sometimes called the recurrence time or recurrence interval. 
                        Properly called the "average return period", it is an estimate of the number of years between occurrences of an earthquake of a given size in a 
                        particular area. The licensed MMI hazard product provides the relative ground shaking by a geographic location for a range of return periods: 100, 200, 250, and 475 year.  
                        The 475 Year Return Period represents the seismic design provisions in the U.S. building codes that require a building to withstand ground motion 
                        at a 10% chance of exceedance in 50 years. It is also used as one of the RMS(one) mapping layers. You may see visual differences in MMI values when you compare MMI mapping 
                        and the actual MMI hazard report. Maps show high resolution data. If a risk location is geocoded at high-resolution, street-address level, the MMI will match on the 
                        report and the map. If a risk location geocodes at the low-resolution, ZIP-code level, the report and the map will not match.
                        "MMI200YrReturnPeriod": "number",
                        "MMI250YrReturnPeriod": "number",
                        "MMI475YrReturnPeriod": "number",
                        "MMIResolutionCode": "number", The resolution of the hazard data that is available for the location.
                        "MMIVintageId": "number", Vintage of the data used in the hazard lookup.
                    },
                    "Slope": "string",
                    "Subsidence": {
                        "MineList": "string",
                        "SinkholeList": "string",
                        "SinkholeNeighboringZones": "string", In addition to providing the sinkhole zone the at the geocoded coordinates, configration settings can be set to display all zones within a specified buffer. 
                        This output provides an excellent measure of sinkhole risk associated with nearby areas.
                        "SinkholeZoneClass": "number", Sinkhole hazard zones are areas defined by risk based upon the underlying geology of the area as well as accounting for the frequency, size, and type of existing sinkholes 
                        within a specified hazard zone and not just relying on historical information. The zones are classified into five categories, Area 0-IV.
                        "SinkholeZoneClassDescription": "string", Description of each sinkhole zone class.
                        "SinkholeZoneConfidenceArea": "string", A confidence area is a region that represents the possible uncertainty of a plotted location on the map. The size of the confidence area is configurable, 
                        and the following will be reported: (1) The entire confidence area falls in Zone XXX classification, or (2) portions of the confidence area fall outside of Zone XXX classification.
                        "SinkholeZoneResolutionCode": "number", The resolution of the hazard data that is available for the location.
                        "SubsidenceVintageId": "number"
                    },
                    "Wildfire": {
                        "WildfireAccessibility": "string", Estimated response time for land-based fire-suppression efforts.
                        "WildfireArea": "string", A descriptive label for the Wildland Urban Interface definition for the location.
                        "WildfireClimateConditions": "string", Specific climactic conditions that apply to the location, such as âSanta Ana Winds,â âDiablo Winds,â or âSundowner.â
                        "WildfireHazard": "string", The annual likelihood of severe damage to an average residential structure. 
                        "WildfireLocalFireHistory": "number", Approximate annual number of fires expected (occurrence rate).
                        "WildfireNearbyFireHistory": "number", Approximate annual number of fires expected (occurrence rate) within a half-mile to four-mile radius.
                        "WildfireResolutionCode": "number", The resolution of the hazard data that is available for the location.
                        "WildfireSurfaceFuel": "string", Predominant surface fuel type.
                        "WildfireSusceptibility": "string", The likelihood of severe damage to an average residential structure given that a wildfire is within the vicinity.
                        "WildfireThreat": "string", Annual likelihood that a wildfire occurs within or spreads into the vicinity.
                        "WildfireVintageId": "number", Vintage of the data used in the hazard lookup.
                    },
                    "Windpool": {
                        "WindpoolType": "string", Specific zone classification assigned by each state DOI.
                        "WindpoolVintageId": "number: Vintage of the data used in the hazard lookup.",
                        "WindpoolZone": "string", The term âwindpool zoneâ is commonly used to refer to the coastal areas eligible for participation in state-sponsored insurance pools in nine Hurricane-exposed states. 
                        These pools were established to ensure availability of insurance to property owners in high-risk coastal areas.
                        "WindpoolZoneConfidenceArea": "string",
                        "WindpoolZoneResolutionCode": "number"
                    }
                }
            },
            "ParentRITExposureId": "number",
            "PrimaryRisk": "boolean",
            "RiskItemScheduleId": "number",
            "RiskitemCharacteristicsList": {
                "HashId": "string",
                "Items": [
                    {
                        "__type": "string",
                        "ExternalSourceId": "string",
                        "Id": "number",
                        "ParentId": "number",
                        "RITExposureValuationList": [
                            {
                                "ValuationBasisID": "number",
                                "ValuationID": "number",
                                "ValuationProvenance": "string",
                                "ValuationTypeID": "number: Valuation type is most commonly used to distinguish between replacement cost value (RCV) and actual cash value (ACV). RCV is the default for property risks of all types. In property insurance, ACV describes the current depreciated value of the asset and can be the basis for insurance valuation when a lower premium is desired. ACV is computed by subtracting depreciation from the replacement cost. The depreciation is usually calculated by establishing a useful life of the item and determining what percentage of that life remains. This percentage times the replacement cost gives the ACV.",
                                "Value": "number"
                            }
                        ],
                        "RiskItemName": "number",
                        "RiskItemNumber": "number",
                        "RiteTypeId": "number"
                    },
                    {
                        "__type": "string",
                        "ExternalSourceId": "string",
                        "Id": "number",
                        "ParentId": "number",
                        "RITExposureValuationList": [
                            {
                                "ValuationBasisID": "number",
                                "ValuationID": "number",
                                "ValuationProvenance": "string",
                                "ValuationTypeID": "number: Valuation type is most commonly used to distinguish between replacement cost value (RCV) and actual cash value (ACV). RCV is the default for property risks of all types. In property insurance, ACV describes the current depreciated value of the asset and can be the basis for insurance valuation when a lower premium is desired. ACV is computed by subtracting depreciation from the replacement cost. The depreciation is usually calculated by establishing a useful life of the item and determining what percentage of that life remains. This percentage times the replacement cost gives the ACV.",
                                "Value": "number"
                            }
                        ],
                        "RiskItemName": "number",
                        "RiskItemNumber": "number",
                        "RiteTypeId": "number",
                        "ContentsRateGrades": [
                            {
                                "PerilCode": "string",
                                "contentsRateGrade": "number: This field is a rating of the fragility of the contents and is relevant for earthquake due to the nature of the hazard (e.g., potential for building collapse). It is based on the ISO Contents Rate Grade.",
                            },
                            {
                                "PerilCode": "string",
                                "contentsRateGrade": "number",
                            },
                            {
                                "PerilCode": "string",
                                "contentsRateGrade": "number",
                            }
                        ],
                        "EqslGrade": "string",
                        "FragilityID": "string",
                        "UserDefMovablePropertyTypeID": "number"
                    }
                ]
            },
            "SubjectAtRisk": {
                "Construction": "string",
                "CreateUserID": "number",
                "ExternalSourceId": "string",
                "NumberOfBuildings": "number",
                "NumberOfRiskItems": "number",
                "NumberOfStories": "number",
                "Occupancy": "string",
                "SubjectAtRiskID": "number",
                "SubjectAtRiskName": "string",
                "SumOfBIValues": "number",
                "SumOfBuildingValues": "number",
                "SumOfContentsValues": "number",
                "TIV": "number",
                "TotalFloorArea": "number"
            },
            "TIV": "number"
        }
    ]
}
    ```

## riskItems [/services/v1/exposureService/riskItems]

### POST riskItems [POST]
Creates a riskItem.

+ Request

    ```js
        { 
            "riskItemInput": {
                "AccountId": "string: risk item account ID."'
                "Description": "string: risk item description",
                "Name": "string: risk item name",
                "Number": "number: risk item number",
                "SourceId": "string: risk item external source",
                "Address": {
                                "ACORDResolutionCode": "string",
                                "AddressSchemeID": "number",
                                "AddressText": "string",
                                "AddressType": "number",
                                "AddressTypeName": "string",
                                "Admin1Code": "string",
                                "Admin1Fips": "string",
                                "Admin1GeoID": "number",
                                "Admin1Name": "string: Administrative divisions refer to geographic divisions, such as states and provinces, and vary by country. Administrative Division1 (Admin1) represents large geographic divisions, such as states and provinces, and corresponds to state-level geocoding resolution (resolution code 10). ",
                                "Admin2Code": "string",
                                "Admin2Fips": "string",
                                "Admin2GeoID": "number",
                                "Admin2Name": "string: Administrative Division2 (Admin2) represents smaller geographic divisions, such as counties, and corresponds to county-level geocoding resolution (resolution code 9).",
                                "Admin3Code": "string",
                                "Admin3GeoID": "number",
                                "Admin3Name": "string: Administrative Division3 (Admin3) represents even smaller geographic divisions, such as districts, and corresponds to district-level geocoding resolution (resolution code 8).",
                                "Admin4Code": "string",
                                "Admin4GeoID": "number",
                                "Admin4Name": "string",
                                "Admin5Code": "string",
                                "Admin5GeoID": "number",
                                "Admin5Name": "string",
                                "Alley": "string",
                                "ApnId": "string",
                                "Block": "string",
                                "BlockGroup": "string",
                                "BuildingName": "string",
                                "CityCode": "string",
                                "CityGeoID": "number",
                                "CityName": "string",
                                "CountryCode": "string",
                                "CountryGeoID": "number",
                                "CountryName": "string",
                                "CountryScheme": "string: The scheme used for importing country codes: ISO2A: 2-character ISO,  ISO3A: 3-character ISO, ISO3N: 3-digit ISOFIPS.",
                                "CountryUnitCode": "string",
                                "CreateUserID": "number",
                                "ESDBAddressID": "string",
                                "ESDBBuildingID": "string",
                                "FirmName": "string",
                                "GeoDataSourceID": "number",
                                "GeoModelResolutionCode": "number",
                                "GeoVintageId": "number",
                                "GeocodeProductVersion": "string",
                                "GeocodingAccuracyBuffer": "number",
                                "GeocodingCV": "number",
                                "GeocodingLocationCode": "string",
                                "GeocodingMatchCode": "string: Geocode match levels represent the resolution at which a location is geocoded. Supported match levels vary by country.",
                                "GeocodingResolutionCode": "number",
                                "GeocodingResolutionConfidence": "number",
                                "HashId": "string",
                                "HiRange": "string",
                                "HiUnit": "string",
                                "HouseNumber": "string",
                                "IsExtended": "number",
                                "IsIntersection": "string",
                                "IsSubmittedAddress": "number",
                                "Latitude": "number",
                                "LoUnit": "string",
                                "LocationCode": "string",
                                "LocationCodeGeoID": "number",
                                "Longitude": "number: RMS(one) identifies latitude and longitude when a risk location is geocoded. User can also enter a valid latitude and longitude, and RMS(one) can retrieve the corresponding ZIP Code for U.S. risk locations.",
                                "LowRange": "string",
                                "ParcelNumber": "string: Parcel-level matches are based on property parcels. Property parcels contain information on the boundaries, ownership, value, zoning, and other aspects of a commercial or residential property in the U.S. Parcel data is consistent over time and covers more than 50 percent of the privately owned U.S. parcels. Parcel centroids provide highly accurate geocoding matches, although it is not always as accurate as a building footprint geocoding that is achievable with RMS' Sanborn data sets. It is superior to street address geocoding because it is not subject to address interpolation errors.",
                                "PostDir": "string",
                                "PostDir2": "string",
                                "PostalCode": "number",
                                "PostalCode1GeoID": "number",
                                "PostalCode2GeoID": "number",
                                "PostalCode3GeoID": "number",
                                "PostalCodeGeoID": "number",
                                "PreDir": "string",
                                "PreDir2": "string",
                                "PreferredCity": "string",
                                "QuadKey": "number",
                                "RangeParity": "string",
                                "SanbornAreaID": "number: Square Footage for the building as defined by the Sanborn Mapping Company. ",
                                "SanbornBuildingID": "string: The building identifier as defined by the Sanborn Mapping Company.",
                                "SegmentId": "string",
                                "SegmentParity": "string",
                                "StreetAddress": "string",
                                "StreetName": "string",
                                "StreetName2": "string",
                                "StreetType": "string",
                                "StreetType2": "string",
                                "UnitNumber": "string",
                                "UnitType": "string",
                                "Zip4": "string",
                                "Zone1Code": "string",
                                "Zone1GeoID": "number",
                                "Zone1Name": "string",
                                "Zone2Code": "string",
                                "Zone2GeoID": "number",
                                "Zone2Name": "string",
                                "Zone3Code": "string",
                                "Zone3GeoID": "number",
                                "Zone3Name": "string",
                                "Zone4Code": "string",
                                "Zone4GeoID": "number",
                                "Zone4Name": "string",
                                "Zone5Code": "string",
                                "Zone5GeoID": "number",
                                "Zone5Name": "string"
                },
                "CommonCharacteristics": {
                                "AFMFireBuildingClass": "string",
                                "AFMFireOccupancyClass": "string",
                                "AirFiltrationCode": "number",
                                "AirconditioningTypeCode": "number",
                                "ArchitecturalElementsCode": "number",
                                "ArchitecturalHeight": "number",
                                "AtticInsulationCode": "number: Attic insulation reduces the heat loss from the building and hence reduces the snow melt on the roof that leads to ice dam formation from the gutter. ",
                                "AtticInsulationName": "string",
                                "BIPreparednessCode": "number",
                                "BIPreparednessDescription": "string",
                                "BIRedundancyCode": "number: Captures redundancies within the same account, such as the existence of multiple locations that perform the same function to some extent. ",
                                "BIRedundancyName": "string",
                                "BaseIsolationCode": "number: Buildings with base isolation float on a pad that dampers waves during an event. ",
                                "BaseIsolationName": "string",
                                "BasementCode": "string: Level of basement flood protection and basement function. ",
                                "BuildingHeight": "number: The building height, in feet or meters. Currently this data is for informational purposes and is not used in any loss calculations.",
                                "BuildingHeightUOMID": "number: The unit of measurement used for building height. ",
                                "BuildingHeightUOMName": "string",
                                "BuildingOwnershipCode": "number",
                                "BuildingOwnershipName": "string",
                                "Capacity": "number",
                                "CapacityTypeID": "number",
                                "CladdingCode": "number",
                                "CladdingTypeCode": "number",
                                "ClaimProcessRankID": "number",
                                "ComAppurtenantCode": "string",
                                "ConstructionCertificationCode": "number",
                                "ConstructionClass": "string",
                                "ConstructionCompletePercent": "number: Indicates the percentage of construction that is completed. The percentage in this field is not used to adjust the vulnerability curves for incomplete construction. The exposure is simply reduced in proportion to the percentage entered, and the original vulnerability curve is used. Note that RMS(one) does not update this number over time. If no value is supplied, a default value of 100% is used.",
                                "ConstructionCompletedDate": "string",
                                "ConstructionQualityValuation": "number",
                                "ConstructionRange": "string",
                                "ConstructionScheme": "number",
                                "ConstructionSchemeId": "number",
                                "ConstructionStartedDate": "string: Date construction was started or completed. Unless you license and model Builders Risk, this field is for data capture only and is not used to calculate losses. See the Builders Risk User Guide for more information about using these fields for modeling builders risk. If you enter a start date, completion date is required. Start date must be less than the completion date.",
                                "ContainingPropertyID": "number",
                                "ContentLossTrigger": "number: Presence of a content loss trigger indicates that this is a location that contributes to a Mini policy or a Wrap policy where a trigger deductible is applicable. ",
                                "ContentsVulnWaterCode": "string",
                                "ContentsVulnWindCode": "string",
                                "CrippleWallsBracedCode": "number: A cripple wall is a short wall that extends from the top of the footing to the level of the first floor, found almost exclusively in wood frame residential construction. These walls have no shear resistance and tend to perform poorly in earthquakes; damage to the building may be total. Post-1948 construction in California has not allowed the use of cripple walls.",
                                "CrippleWallsBracedName": "string",
                                "DesignCode": "number",
                                "EQFrameConnectionCode": "number: Unbolted buildings may slide off their foundations during a strong earthquake, causing significant damage. Anchoring the frame to the foundation has proven to be the best means of protection against earthquake damage in frame structures. ",
                                "EQFrameConnectionName": "string",
                                "EQSLInsurance": "boolean",
                                "EngineeredFoundationCode": "number: Buildings whose foundations were designed to take into account the soil deformations anticipated for landslides or liquefaction. ",
                                "EngineeredFoundationName": "string",
                                "EnvelopeOpeningCode": "number: For shear wall buildings, the 50% rule refers to the area of a buildingâs exterior wall surface that consists of window and door openings. Buildings with more than 50% of the wall open are evaluated as having less seismic resistance. For the RMS Canada and U.S. Earthquake Model, this modifier has been removed. It applies to earthquake modeling for a limited number of older models.",
                                "EnvelopeOpeningName": "string",
                                "EquipmentEQBracingCode": "number",
                                "EquipmentEQBracingName": "string",
                                "EquipmentGroundFloorCode": "string: Ground-level equipment such as electrical, gas and water meters, and exterior access points for cable and telephone systems are prone to damage from flooding if not elevated or otherwise protected. ",
                                "EquipmentSideBracingCode": "string: Mechanical and electrical systems that are attached to external walls can receive damage from high winds.",
                                "EquipmentSupportMaintenanceCode": "number: Buildings that show signs of distress or duress, such as cracking due to aging, ground settlement, and overloading or cracking due to damage from previous earthquakes, are likely to experience additional damage during an earthquake. ",
                                "EquipmentSupportMaintenanceName": "string",
                                "ExteriorEQCode": "number",
                                "ExteriorEQName": "string",
                                "ExteriorFLCode": "number",
                                "ExteriorFLDescription": "string",
                                "ExteriorHUCode": "number",
                                "ExteriorHUDescription": "string",
                                "ExteriorRatingCode": "number",
                                "ExteriorRatingName": "string",
                                "ExteriorTOCode": "number",
                                "ExteriorTODescription": "string",
                                "ExternalOrnamentationCode": "number: Ornamentation includes all elements that can shake loose from either roof or structural elements of the building. ",
                                "FinishedFloorHeight": "number",
                                "FireAlarm": "number",
                                "FireDeptRatingCode": "number",
                                "FireDeptRatingModifierCode": "number",
                                "FireDeptRatingModifierName": "string",
                                "FirePlace": "string",
                                "FireSprinklerPresenceCode": "number",
                                "FireSprinklerPresenceDescription": "string",
                                "FireSprinklerTypeCode": "number: Sprinkler systems are classified as âwet pipeâ or âdry pipeâ. In general, wet pipe systems cause more damage than dry pipe systems during earthquakes. When the type of sprinkler system is unknown, the Earthquake Sprinkler Leakage (EQSL) Model uses an assumed inventory distribution of 70% wet pipe and 30% dry pipe to compute the sprinkler-leakage-related damages. Applying this secondary modifier for a location where it is known that the sprinkler system is either wet or dry refines the loss estimate associated with sprinkler leakage. ",
                                "FireSprinklerTypeDescription": "string",
                                "Flashing": "number: Indicates the quality of the flashing and coping installed at the roof. Flashing refers to thin continuous pieces of sheet metal or other water-impervious material that are installed to prevent the passage of water into a structure at locations where there is an abrupt change in the roof geometry. For example, it is placed around the base of discontinuities or objects that protrude from the roof of a building, such as mechanical openings and parapets, to deflect water away from the construction joints at these locations. Coping refers to thin continuous pieces of sheet metal or other water-impervious material that act as a cap on top of parapets and roof ridges to prevent water from entering a structure through the construction joints at these locations. ",
                                "FlashingDescription": "string",
                                "FloodDefenseHeightUOMID": "number: Unit of measurement for flood defenses, either feet or meters.",
                                "FloodDefenseHeightUOMName": "string",
                                "FloodMissileCode": "string: Buildings may receive damage from exposure to flood-carried missiles such as uprooted trees, branches, and sand.",
                                "FloodProtectionCode": "string: Damage due to flood can be reduced if flood protection measures are implemented. ",
                                "FloorArea": "number: Applies only to residential locations. Represents total living area, across all floors. Excludes garage, porches, decks, sunrooms, and basements. Used to assess residential vulnerability curves for U.S. Hurricane and Caribbean Hurricane analyses and for U.S. and Canada Severe Convective Storm and Winterstorm analyses (wind sub-peril only).",
                                "FloorAreaUOMID": "number",
                                "FloorAreaUOMName": "string",
                                "FloorOccupied": "number: A single floor or range of floors occupied. Positive numbers represent floors above grade, and negative numbers represent floors below grade (i.e., basement levels). The maximum negative number is -5. The number of floors occupied should include consideration for the ground floor designation of â0,â which in some countries is designated as floor â1,â Thus, if floors 1 thru 4 are occupied, the number of stories should be at least 5. Floors occupied cannot exceed number of stories. Losses vary depending on the information entered in both the Floors Occupied and Number of Stories fields. RMS recommends specifying this value only if the location has a geocoding match level better than postcode.",
                                "FloorSize": "number",
                                "FloorTypeCode": "number: Type of floor materials. ",
                                "FloorTypeDescription": "string",
                                "FloorsUnderground": "number",
                                "FoundationSystemCode": "string: A building that is inadequately connected to its foundation can fail catastrophically during a windstorm. ",
                                "FrameFoundationConnectionCode": "number",
                                "FrameFoundationConnectionDescription": "string",
                                "GaragingCode": "number: Used to specify where automobiles are parked. This is applicable only to the Australia Severe Convective Storm model. ",
                                "GaragingDescription": "string",
                                "GroundFloorArea": "number",
                                "HUZoneCode": "string",
                                "HazardousExposures": "number",
                                "HeatingTypeCode": "number",
                                "HeightOfFloodDefenseCode": "number: The height of any flood defenses, such as flood walls, protecting the property. The height is measured relative to the North American Vertical Datum of 1988 (NAVD 88) for locations in the U.S. and relative to the World Geodetic System datum of 1984 (WGS 84) for locations in the Caribbean. Supports storm surge modeling.",
                                "IFMEquipmentBracingCode": "number: Specifies the overall quality of outdoor machinery and equipment bracing. For IFM exposures, use this rather than ground level equipment.",
                                "IFMEquipmentBracingDescription": "string",
                                "IFMSiteHazardCode": "number: Specifies missiles and other environmental hazards.",
                                "IFMSiteHazardDescription": "string",
                                "IFMStructuralConditionCode": "number: This is a hybrid modifier used by the Industrial Facilities Model to capture both maintenance and construction/design quality. For IFM exposures, use this rather than construction quality.",
                                "IFMStructuralConditionDescription": "string",
                                "IFMVerticalExpDistCode": "number: Used only by the Industrial Facilities Model. Specifies how much exposure is located at the basement or grade level. This is available for surge contents (mechanical and equipment) only.",
                                "IFMVerticalExpDistDescription": "string",
                                "IceProtectionCode": "number: Ice dam protection membranes that are installed under the roof cover protect roofs from water damage due to ice dam buildup. ",
                                "IceProtectionDescription": "string",
                                "IsMaintained": "number",
                                "LandSquareFootage": "number",
                                "MFDSubCategoryCode": "number: Multi-family dwelling subcategory, either apartment, condominium, townhouse/row house, other, or unknown. This field is for informational purposes and will be used in the RMS building valuation model. This field has no impact on loss calculations.",
                                "MFDSubCategoryName": "string",
                                "MechanicalElectricalFloor": "number",
                                "NumBuildings": "number", Number of buildings at the location. 
                                "NumStories": "number", The number of stories for the structure. The default is 0, which is interpreted by RiskLink/RiskBrowser as âunknown.â This should be a single number, such as â6â or â22,â not â12-14â or â5 to 10.â The number of stories value designates the ground floor as Floor â1.â Structures are classified according to the number of stories they have; for example, one-story structures, 2â3 story structures, 4â7 story structures, and so on. The classifications vary by peril model, construction class, and occupancy type. For more information about the ranges used by a specific country peril, see the appropriate model methodology document. This field is highly recommended for peril model analyses.
                                "NumStoriesRange": "string",
                                "NumUnits": "number",
                                "NumberOfBaths": "number",
                                "NumberOfBedrooms": "number",
                                "NumberOfCars": "number",
                                "NumberOfEscalators": "number",
                                "OccupancyClass": "number",
                                "OccupancyRange": "string",
                                "OccupancyScheme": "number",
                                "OccupancySchemeId": "string",
                                "OnSiteFloodDefenceRP": "number",
                                "OnsiteFloodDefenceHeight": "number",
                                "OnsiteFloodHeightUnit": "number",
                                "OpeningProtectCode": "string: Windows and doors with poor wind resistance can expose interior building components and contents to more wind and water hazards than openings with good wind resistance. ",
                                "OpeningProtectSecondaryCode": "string: Doors with poor wind resistance can expose interior building components and contents to more wind and water hazards than openings with good wind resistance. ",
                                "OrnamentationCode": "number",
                                "ParkingGarageCode": "number",
                                "PerformanceEQCode": "number", Poor construction is characterized by sloppy workmanship or inadequate use of construction materials. Even if a building was designed to be sufficiently earthquake resistant, poor construction can lead to excessive damage if critical structural elements were not assembled correctly
                                "PerformanceEQDescription": "string",
                                "PerformanceFLCode": "number",
                                "PerformanceFLDescription": "string",
                                "PerformanceHUCode": "number",
                                "PerformanceHUDescription": "string",
                                "PerformanceTOCode": "number",
                                "PerformanceTODescription": "string",
                                "PerilYearOfUpgrades": "string",
                                "PlanIrregularityCode": "number: Configurations can be regular (square, rectangular, circular) or irregular (L-shape, T-shape, triangular). Irregular buildings tend to twist in addition to shaking laterally. Damage often occurs at the corners between different wings of a building. ",
                                "PlanIrregularityDescription": "string",
                                "PlumbingCode": "number: Insulation decreases temperature differences. Buildings with insulated plumbing are less likely to suffer from burst pipes and water damage. ",
                                "PlumbingDescription": "string",
                                "PoundingCode": "number: Pounding occurs when there is little or no clearance between adjacent buildings, and the buildings impact or âpoundâ against each other as they sway during an earthquake. ",
                                "PoundingDescription": "string",
                                "PrimaryConstructionID": "number",
                                "PrimaryOccupancyID": "number",
                                "PropertyType": "number",
                                "PurlinAnchoringCode": "number: In older tilt-up structures, connections between the tilt-up walls and the roof framing system were designed inadequately for earthquake resistance. The failure of these connections can be prevented by the addition of special anchors. ",
                                "PurlinAnchoringDescription": "string",
                                "RemoteAlarmReliability": "number",
                                "RemoteFireAlarmPresence": "string",
                                "RentableBuildingArea": "number",
                                "RentalPropertyIdentifier": "number: Indicates if the property is owner-insured or tenant-insured. This field is for informational purposes and is in the RMS building valuation model. This field has no impact on loss calculations.",
                                "RentalPropertyIdentifierName": "string",
                                "ResAppurtenantCode": "string",
                                "ResidentialGradeCode": "number",
                                "ResidentialGradeDescription": "string",
                                "RoofAdditionsCode": "string: Roof parapets hang off the edge of roofs and may be at risk in high winds.",
                                "RoofAgeConditionCode": "string: Well-maintained roofs tend to hold up better under high wind conditions. Older roofs may be at more risk to an event. ",
                                "RoofAnchorCode": "string: This is one of the most important indicators of potential wind-induced damage. The failure or absence of anchors may result in the roof being blown off and the walls falling apart. ",
                                "RoofCoveringCode": "string: Damage is directly correlated to the type of roofing system in place. ",
                                "RoofEquipmentCode": "string: If there are large areas of roof covered with equipment (e.g., anchored solar panels), the building is more vulnerable to wind because the equipment anchorage can compromise the roofâs structural integrity.",
                                "RoofFrameCode": "string: The type of framing material for the roof affects the ability of the roof to stay attached to a building under high wind conditions.",
                                "RoofGeometryCode": "string: This directly impacts the type of wind forces a roof is likely to experience, e.g., flat roofs are likely to experience more loading than hipped or high-pitched roofs.",
                                "RoofMaintenanceCode": "string: Well-maintained roofs tend to hold up better under high wind conditions.",
                                "RoofSheathingAttachmentCode": "string: Roof sheathing is one of the main components of a building. It helps keep the integrity of the building and is a major line of defense against losses to building and contents due to both wind and rain. The strength of sheathing depends on the way it is attached to the roof rafters. Loss of roof sheathing often happens due to improper nailing design and schedule. ",
                                "RoofVentCode": "number: Adequate roof ventilation ensures that the attic space is kept close to the ambient temperature, hence this prevents snow on a roof surface melting and formation of ice dams. ",
                                "RoofVentDescription": "string",
                                "SecondaryOccupancies": "string",
                                "SecurityAlram": "string",
                                "ServiceZoneID": "number",
                                "SetBackFromStreetCode": "number",
                                "ShortColumnConditionCode": "number: Concrete structures in which the full height of some columns has been restricted by spandrel beams or in fill walls. These columns will experience excessive loading and could fail in shear. ",
                                "ShortColumnConditionDescription": "string",
                                "SnowGuardsCode": "number: The presence of snow guards allows the snow to distribute evenly over a sloping roof rather than snow drifting toward the gutter. This minimizes the snow volume available to form and maintain an ice dam. This also reduces the likelihood of snow drift loads causing roof deflection and possible roof collapse. ",
                                "SnowGuardsDescription": "string",
                                "SoftStoryCode": "number: Many buildings have shear walls or infill walls at the upper floors that are interrupted at the first floor to provide more open space for car parking, lobbies and retail space. The first floor in these cases acts as a âsoft storyâ and will sustain excessive deformations and stresses in a major earthquake, unless designed specifically to take the stiffness discontinuity into account. ",
                                "SoftStoryDescription": "string",
                                "SprinklerLeakageSusceptibilityCode": "number",
                                "SprinklerLeakageSusceptibilityDescription": "string",
                                "StructuralRedundancyCode": "number: Redundancy refers to having multiple lateral load resisting elements (frames or shear walls) in a building. Redundancy is a desirable feature because of one structural system fails during an earthquake, another system is present to resist the lateral earthquake forces, thus avoiding catastrophic collapse. For the RMS Canada and U.S. Earthquake Model, this modifier has been removed. It applies to earthquake modeling for a limited number of older models.",
                                "StructuralRedundancyDescription": "string",
                                "StructuralUpgradeNonURMCode": "number: This structural upgrade characteristic applies to buildings that have been retrofitted in some way to provide superior earthquake resistive capabilities. This generally applies to older buildings that have been upgraded to conform to more modern building codes. ",
                                "StructuralUpgradeNonURMDescription": "string",
                                "SurroundingBuildingDensity": "number",
                                "TankCode": "number",
                                "TankDescription": "string",
                                "TaxValue": "number",
                                "TopologicalFeatures": "number",
                                "TorsionCode": "number: The geometry of the lateral load resisting system. Asymmetry can aggravate damage by inducing twisting, torsion, and differential motion in the building. Some of the most common occurrences of asymmetry are in frame buildings with a stiff elevator core that is placed asymmetrically. For the RMS Canada and U.S. Earthquake Model, this modifier has been removed. It applies to earthquake modeling for a limited number of older models.",
                                "TorsionDescription": "string",
                                "TotalRooms": "number",
                                "TreeDensityCode": "number: Buildings adjacent to trees may receive damage from trees falling within striking distance. ",
                                "TreeDensityDescription": "string",
                                "URMChimneyPartitionWallCode": "number: Only unreinforced masonry (brick or hollow clay tile) walls or partitions are considered to have significant impact upon a buildingâs damageability. The collapse of these partitions can contribute significantly to the overall dollar value damage to a structure. In USGS seismic zone 4 in California, they are not used in post-1934 construction. This item also includes unreinforced masonry chimneys.",
                                "URMChimneyPartitionWallName": "string",
                                "URMRetrofitCode": "number: Several jurisdictions in California U.S.G.S. seismic zone 4 have instituted mandatory seismic retrofit programs for unreinforced masonry buildings. ",
                                "URMRetrofitDescription": "string",
                                "UseContentValue": boolean,
                                "UsesPublicAdjustor": "number",
                                "VerticalIrregularityCode": "number: Significant setbacks and overhangs can cause irregular structural performance in an earthquake. Resulting stress concentrations can lead to further damage. ",
                                "VerticalIrregularityDescription": "string",
                                "WindMissileExposureCode": "string: Buildings may receive damage from exposure to airborne missiles, gravel, or from trees within falling distance. ",
                                "WindowTypeCode": "number",
                                "XREFExposureSourceBuildingID": "string",
                                "YearBuilt": "number: The year in which the structure was constructed. This field is highly recommended for peril model analyses.",
                                "YearBuiltRange": "string"
                },
                "CurrencyCode": "string: 3-digit currency code (for example, USD)",
                "DQScore": "string",
                "EnhancementStatus": "string",
                "Hazard": {
                                "ModelHazard": {
                                                "EQ": {
                                                                "EQVintageId": "number",
                                                                "Landslide": {
                                                                                "LandslideDesc": "string",
                                                                                "LandslideResolutionCode": "number",
                                                                                "LandslideResolutionName": "string",
                                                                                "LandslideUncertainty": "number",
                                                                                "LandslideValue": "number",
                                                                                "UserDefinedLandslide": "number",
                                                                                "UserDefinedLandslideResolutionCode": "number"
                                                                },
                                                                "Liquefaction": {
                                                                                "LiquefactionConfidenceArea": "string",
                                                                                "LiquefactionDesc": "string",
                                                                                "LiquefactionNeighboringTypes": "string: In addition to providing the liquefaction susceptibility the at the geocoded coordinates, configration settings can be set to display all susceptibility types within a specified buffer. This output provides an excellent measure of liquefaction risk associated with nearby areas.",
                                                                                "LiquefactionResolutionCode": "number",
                                                                                "LiquefactionResolutionName": "string",
                                                                                "LiquefactionUncertainty": "number",
                                                                                "UserDefinedLiquefactionResolutionCode": "number",
                                                                                "UserDefinedliquefaction": "number",
                                                                                "liquefaction": "number"
                                                                },
                                                                "Soil": {
                                                                                "BasinLocID": "number",
                                                                                "BusinessInterruptionZoneId": "number",
                                                                                "FireExposureType1": "number",
                                                                                "FireExposureType2": "number",
                                                                                "FireExposureType3": "number",
                                                                                "FireExposureType4": "number",
                                                                                "FireHazardParameters1": "number",
                                                                                "FireHazardParameters2": "number",
                                                                                "FireHazardParameters3": "number",
                                                                                "FireHazardParameters4": "number",
                                                                                "FireUncertainty": "number",
                                                                                "ModelLoResBasinLocID": "number",
                                                                                "ModelLoResSoilPeriod": "number",
                                                                                "ModelLoResSoilPeriodUncertainty": "number",
                                                                                "ModelLoResSoilThickness": "number",
                                                                                "ModelLoResSoilType": "number",
                                                                                "ModelLoResSoilTypeResolutionCode": "number",
                                                                                "ModelLoResSoilTypeUncertainty": "number",
                                                                                "ModelLoResSoilVS": "number",
                                                                                "ModelVRGSoilType": "number",
                                                                                "ModelVRGSoilTypeResolutionCode": "number",
                                                                                "SoilConfidenceArea": "string",
                                                                                "SoilNeighboringTypes": "string",
                                                                                "SoilPeriod": "number",
                                                                                "SoilPeriodUncertainty": "number",
                                                                                "SoilThickness": "number",
                                                                                "SoilType": "number",
                                                                                "SoilTypeDesc": "string",
                                                                                "SoilTypeResolutionCode": "number",
                                                                                "SoilTypeResolutionName": "string",
                                                                                "SoilTypeUncertainty": "number",
                                                                                "SoilVS": "number",
                                                                                "UserDefinedSoilType": "number",
                                                                                "UserDefinedSoilTypeResolutionCode": "number"
                                                                }
                                                },
                                                "HU": {
                                                                "DistanceToCoast": {
                                                                                "CustomDistanceToCoast": "number",
                                                                                "CustomDistanceToCoastDataVintageId": "number",
                                                                                "CustomDistanceToCoastResolutionCode": "number",
                                                                                "DistanceToCoastCV": "number",
                                                                                "DistanceToCoastResolutionCode": "number",
                                                                                "DistanceToCoastResolutionName": "string",
                                                                                "DistanceToCoastValue": "number",
                                                                                "DistanceToOuterCoast": "number",
                                                                                "DistanceToOuterCoastResolutionCode": "number",
                                                                                "UserDefinedDistanceToCoast": "number",
                                                                                "UserDefinedDistanceToCoastResolutionCode": "number",
                                                                                "UserDefinedDistanceToCoastResolutionName": "string",
                                                                                "WaveAmplificationFactor": "number"
                                                                },
                                                                "Elevation": {
                                                                                "BuildingElevation": "number",
                                                                                "BuildingElevationResolutionCode": "number",
                                                                                "BusinessInterruptionZoneId": "number",
                                                                                "ElevationResolutionCode": "number",
                                                                                "ElevationResolutionName": "string",
                                                                                "ElevationUncertainty": "number",
                                                                                "NFIPRate": "number",
                                                                                "NFIPRateResolutionCode": "number",
                                                                                "NFIPYear": "number",
                                                                                "NFIPYearResolutionCode": "number",
                                                                                "UserDefinedBuildingElevation": "number",
                                                                                "UserDefinedBuildingElevationResolutionCode": "number",
                                                                                "UserDefinedBuildingElevationResolutionName": "string",
                                                                                "UserDefinedElevation": "number",
                                                                                "UserDefinedElevationResolutionCode": "number",
                                                                                "UserDefinedElevationResolutionName": "string",
                                                                                "UserDefinedNFIPYear": "number",
                                                                                "UserDefinedNFIPYearResolutionCode": "number",
                                                                                "UserDefinedNFIPYearResolutionName": "string",
                                                                                "elevation": "number"
                                                                },
                                                                "HUVintageId": "number",
                                                                "NaturalRoughness": {
                                                                                "NaturalRoughnessCode": "number",
                                                                                "NaturalRoughnessName": "string",
                                                                                "NaturalRoughnessResolutionCode": "number",
                                                                                "NaturalRoughnessUncertainty": "number",
                                                                                "NaturalRoughnessValue": "number"
                                                                }
                                                },
                                                "HashId": "string"
                                },
                                "NonModelHazard": {
                                                "APZone": {
                                                                "APZoneResolutionCode": "number",
                                                                "APZoneVintageId": "number",
                                                                "AlquistPrioloConfidenceArea": "string",
                                                                "AlquistPrioloZone": "string"
                                                },
                                                "Flood": {
                                                                "BaseFloodElevation": "string",
                                                                "CobraArea": "number",
                                                                "FemaCommunityNum": "string",
                                                                "FloodAdditionalInformation": "string",
                                                                "FloodAnnualProbability": "string",
                                                                "FloodDataSourceCode": "string",
                                                                "FloodLookupConfidence": "number",
                                                                "FloodNeighboringZones": "string",
                                                                "FloodPanelNumber": "string",
                                                                "FloodResolutionCode": "number",
                                                                "FloodVintageId": "number",
                                                                "FloodZone": "string",
                                                                "Floodway": "number",
                                                                "MapPanelUnderRevision": "number",
                                                                "SpecialFloodHazardArea": "number"
                                                },
                                                "HashId": "string",
                                                "MMI": {
                                                                "MMI100YrReturnPeriod": "number",
                                                                "MMI200YrReturnPeriod": "number",
                                                                "MMI250YrReturnPeriod": "number",
                                                                "MMI475YrReturnPeriod": "number",
                                                                "MMIResolutionCode": "number",
                                                                "MMIVintageId": "number"
                                                },
                                                "Slope": "string",
                                                "Subsidence": {
                                                                "MineList": "string",
                                                                "SinkholeList": "string",
                                                                "SinkholeNeighboringZones": "string",
                                                                "SinkholeZoneClass": "number",
                                                                "SinkholeZoneClassDescription": "string",
                                                                "SinkholeZoneConfidenceArea": "string",
                                                                "SinkholeZoneResolutionCode": "number",
                                                                "SubsidenceVintageId": "number"
                                                },
                                                "Wildfire": {
                                                                "WildfireAccessibility": "string",
                                                                "WildfireArea": "string",
                                                                "WildfireClimateConditions": "string",
                                                                "WildfireHazard": "string",
                                                                "WildfireLocalFireHistory": "number",
                                                                "WildfireNearbyFireHistory": "number",
                                                                "WildfireResolutionCode": "number",
                                                                "WildfireSurfaceFuel": "string",
                                                                "WildfireSusceptibility": "string",
                                                                "WildfireThreat": "string",
                                                                "WildfireVintageId": "number"
                                                },
                                                "Windpool": {
                                                                "WindpoolType": "string",
                                                                "WindpoolVintageId": "number",
                                                                "WindpoolZone": "string",
                                                                "WindpoolZoneConfidenceArea": "string",
                                                                "WindpoolZoneResolutionCode": "number"
                                                }
                                }
                },
                "PrimaryRisk": boolean: specifies whether this instance is a primary risk,
                "RiskItemScheduleId": "number",
                "RiskitemCharacteristicsList": {
                                "HashId": "string",
                                "Items": [{
                                                "__type": "RealPropertyCharacteristicsValuation:#Rms.DataServices.RestObjects",
                                                "ExternalSourceId": "string",
                                                "Id": "number",
                                                "ParentId": "number",
                                                "RITExposureValuationList": [{
                                                                "ValuationBasisID": "number",
                                                                "ValuationID": "number",
                                                                "ValuationProvenance": "string",
                                                                "ValuationTypeID": "number: Valuation type is most commonly used to distinguish between replacement cost value (RCV) and actual cash value (ACV). RCV is the default for property risks of all types. In property insurance, ACV describes the current depreciated value of the asset and can be the basis for insurance valuation when a lower premium is desired. ACV is computed by subtracting depreciation from the replacement cost. The depreciation is usually calculated by establishing a useful life of the item and determining what percentage of that life remains. This percentage times the replacement cost gives the ACV.",
                                                                "Value": "number"
                                                }],
                                                "RiskItemName": "RiskItemName",
                                                "RiskItemNumber": "RiskItemNumber",
                                                "RiteTypeId": "number"
                                },
                                {
                                                "__type": "BusinessInterruptionCharacteristicsValuation:#Rms.DataServices.RestObjects",
                                                "ExternalSourceId": "string",
                                                "Id": "number",
                                                "ParentId": "number",
                                                "RITExposureValuationList": [{
                                                                "ValuationBasisID": "number",
                                                                "ValuationID": "number",
                                                                "ValuationProvenance": "string",
                                                                "ValuationTypeID": "number: Valuation type is most commonly used to distinguish between replacement cost value (RCV) and actual cash value (ACV). RCV is the default for property risks of all types. In property insurance, ACV describes the current depreciated value of the asset and can be the basis for insurance valuation when a lower premium is desired. ACV is computed by subtracting depreciation from the replacement cost. The depreciation is usually calculated by establishing a useful life of the item and determining what percentage of that life remains. This percentage times the replacement cost gives the ACV.",
                                                                "Value": "number"
                                                }],
                                                "RiskItemName": "RiskItemName",
                                                "RiskItemNumber": "RiskItemNumber",
                                                "RiteTypeId": "number"
                                },
                                {
                                                "__type": "MoveablePropertyCharacteristicsValuation:#Rms.DataServices.RestObjects",
                                                "ExternalSourceId": "string",
                                                "Id": "number",
                                                "ParentId": "number",
                                                "RITExposureValuationList": [{
                                                                "ValuationBasisID": "number",
                                                                "ValuationID": "number",
                                                                "ValuationProvenance": "string",
                                                                "ValuationTypeID": "number: Valuation type is most commonly used to distinguish between replacement cost value (RCV) and actual cash value (ACV). RCV is the default for property risks of all types. In property insurance, ACV describes the current depreciated value of the asset and can be the basis for insurance valuation when a lower premium is desired. ACV is computed by subtracting depreciation from the replacement cost. The depreciation is usually calculated by establishing a useful life of the item and determining what percentage of that life remains. This percentage times the replacement cost gives the ACV.",
                                                                "Value": "number"
                                                }],
                                                "RiskItemName": "RiskItemName",
                                                "RiskItemNumber": "RiskItemNumber",
                                                "RiteTypeId": "number",
                                                "ContentsRateGrades": [{
                                                                "PerilCode": "string",
                                                                "contentsRateGrade": "number: This field is a rating of the fragility of the contents and is relevant for earthquake due to the nature of the hazard (e.g., potential for building collapse). It is based on the ISO Contents Rate Grade.",
                                                },
                                                {
                                                                "PerilCode": "string",
                                                                "contentsRateGrade": "number",
                                                },
                                                {
                                                                "PerilCode": "string",
                                                                "contentsRateGrade": "number",
                                                }],
                                                "EqslGrade": "string",
                                                "FragilityID": "string",
                                                "UserDefMovablePropertyTypeID": "number"
                                }]
                },
                "SubjectAtRisk": {
                                "Construction": "string",
                                "CreateUserID": "number",
                                "ExternalSourceId": "string",
                                "NumberOfBuildings": "number",
                                "NumberOfRiskItems": "number",
                                "NumberOfStories": "number",
                                "Occupancy": "string",
                                "SubjectAtRiskID": "number",
                                "SubjectAtRiskName": "string",
                                "SumOfBIValues": "number",
                                "SumOfBuildingValues": "number",
                                "SumOfContentsValues": "number",
                                "TIV": "number",
                                "TotalFloorArea": "number: Represents total living area, across all floors. Excludes garage, porches, decks, sunrooms, and basements. Used to assess residential vulnerability curves for U.S. Hurricane and Caribbean Hurricane analyses and for U.S. and Canada Severe Convective Storm and Winterstorm analyses (wind sub-peril only).",
                }
}

        }
    ```

+ Response 201
    
    [riskItem][]

    
# Group Accounts
This section groups account resources.

## Account [/services/v1/ExposureService/accounts/{id}]

+ Accounts Model (application/json)
    
    ```js
    { 
        "Created": "string: Date and time when contract was created in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
        "Description": "string: account description",
        "ExposedPartyId": "integer: exposed party ID",
        "ExposedPartyName": "string: exposed party name",
        "Id": "long: account ID",
        "ImportSetId": "integer: If the account is imported, this is the ID of the import set to which the account belonged. Otherwise set to null." 
        "Name": "string: account name",
        "Number": "string: account number",
        "SourceId": "number: external source ID",
        "Owner": "integer: user ID of the person who submitted the job.",
    }
    ```

### GET Account [GET]
Returns the specified account.

+ Response 200
    
    [Accounts][]


### PUT Account [PUT]
Modifies the specified account.

+ Request
    
    ```js
    { 
        "Created": "string: creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
        "Description": "string: account description",
        "ExposedPartyId": "integer: exposed party ID",
        "ExposedPartyName": "string: exposed party name",
        "Id": "long: account ID",
        "ImportSetId": "integer: If the account is imported, this is the ID of the import set to which the account belonged. Otherwise set to null." 
        "Name": "string: account name",
        "Number": "string: account number",
        "SourceId": "number: external source ID",
        "Owner": "integer: user ID of the person who submitted the job.",
    }
    ```

+ Response 200
    
    [Accounts][]    


## Accounts [/services/v1/ExposureService/accounts/{?created, description, exposedPartyId, exposedPartyName, id, importSetId, limit, name, number, offset, riskItemCount, sourceId}]

### GET accounts [GET]
Returns a list of accounts. Supports standard filters, for example number of records to return per page and sorting.

+ Parameters
   + created (string, optional) ... Date and time when account was created in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + description (string, optional) ... Account description.
   + exposedPartyId (integer) ... Exposed party ID.
   + exposedPartyName (string, optional) ... Exposed party name.
   + id (long, optional) ... Account ID.
   + importSetId (integer, optional) ... If the account is imported, this is the ID of the import set to which the account belonged. Otherwise set to null. 
   + limit (number, optional) ... Number of records to return per page.
   + name (string) ... Account name.
   + number (string, optional) ... Account number.
   + offset (number, optional) ... Return results starting with this record number (0-based). 
   + sourceId (string, optional) ... External source ID.

+ Response 200

    ```js
        {
            [
                "Created": "string: Date and time when contract was created in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
                "Description": "string: account description",
                "ExposedPartyId": "integer: exposed party ID",
                "ExposedPartyName": "string: exposed party name",
                "Id": "long: account ID",
                "ImportSetId": "integer: If the account is imported, this is the ID of the import set to which the account belonged. Otherwise set to null." 
                "Name": "string: account name",
                "Number": "string: account number",
                "SourceId": "number: external source ID",
                "Owner": "integer: user ID of the person who submitted the job.",
            ],
            [
                "Id": "number: account ID",
                "Name": "string: account name",
                "Number": "string: account number",
                "Description": "string: account description",
                "ExposedPartyId": "number: exposed party ID",
                "SourceId": "number: external source ID",
                "ExposedPartyName": "string: exposed party name",
                "RiskItemScheduleId": "number: Id of existing risk item schedule that is associated with this account",
                "Created": "string: creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
            ],
            [
                "Id": "number: account ID",
                "Name": "string: account name",
                "Number": "string: account number",
                "Description": "string: account description",
                "ExposedPartyId": "number: exposed party ID",
                "SourceId": "number: external source ID",
                "ExposedPartyName": "string: exposed party name",
                "RiskItemScheduleId": "number: Id of existing risk item schedule that is associated with this account",
                "Created": "string: creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
            ]
        "Count": "number: total number of Accounts that exist"    
        }
    ```

## Accounts [/services/v1/ExposureService/accounts]

### POST Accounts [POST]
Creates an account
+ Request
    
    ```js
    { 
        "Name": "string: account name",
        "Number": "string: account number",
        "Description": "string: account description",
        "ExposedPartyId": "number: exposed party ID",
        "ImportSetId": "number: import set ID",
        "Owner": "number: user ID of the person who submitted the job.",
        "SourceId": "number: external source ID",
        "ExposedPartyName": "string: exposed party name"
    }
    ```

+ Response 201
    
    [Accounts][]

# Group Subschedule
This section groups subschedule resources.

## Subschedule [/services/{ids}]

+ Subschedule Model (application/json)
    
    ```js
    { 
        "CDLTag": "string: contract definition language tag",
        "SubscheduleType": "number: subschedule type (RITCHARACTERISTICS=1, RITEXPOSURES=2, CONTRACTS=3",
        "Name": "string: subschedule name",
        "Ids": "number: a list of subschedule IDs",
        "Filter": "string",
        "ContractSubjectId": "number: contract subject ID"
    }
    ```


### GET Subschedule [GET]
Returns the specified subschedule.

+ Response 200
    
    [Subschedule][]


### PUT Subschedule [PUT]
Modifies the specified subschedule.

+ Response 200

    ```js
    {
        "CDLTag": "string: contract definition language tag",
        "SubscheduleType": "number: subschedule type (RITCHARACTERISTICS=1, RITEXPOSURES=2, CONTRACTS=3",
        "Name": "string: subschedule name",
        "Ids": "number: a list of subschedule IDs",
        "Filter": "string: Filtering information",
        "ContractSubjectId": "number: contract subject ID"
    }
    ```
    
## Subschedules [/services/v1/ExposureService/subschedules/{id}/{?cdlTag, contractSubjectId, filter, ids, limit, name, offset, subscheduleType}]

### GET subschedules [GET]
Returns a list of subschedules. Supports standard filters, for example number of records to return per page and sorting.

+ Parameters
   + cdlTag (string, optional) ... Contract definition language tag.
   + contractSubjectId (integer, optional) ... Contract subject ID.
   + filter (string, optional) ... Subschedule filter.
   + ids (long, optional) ... List of subschedule IDs.
   + limit (number, optional) ... Number of records to return per page.
   + name (string) ... Subschedule name.
   + offset (number, optional) ... Return results starting with this record number (0-based).   
   + subscheduleType (integer, optional) ... Subschedule type.
   
+ Response 200
    ```js
        {
            [
                "CDLTag": "string: contract definition language tag",
                "SubscheduleType": "number: subschedule type (RITCHARACTERISTICS=1, RITEXPOSURES=2, CONTRACTS=3",
                "Name": "string: subschedule name",
                "Ids": "number: a list of subschedule IDs",
                "Filter": "string",
                "ContractSubjectId": "number: contract subject ID"
            ],
            [
                "CDLTag": "string: contract definition language tag",
                "SubscheduleType": "number: subschedule type (RITCHARACTERISTICS=1, RITEXPOSURES=2, CONTRACTS=3",
                "Name": "string: subschedule name",
                "Ids": "number: a list of subschedule IDs",
                "Filter": "string",
                "ContractSubjectId": "number: contract subject ID"
            ],
            [
                "CDLTag": "string: contract definition language tag",
                "SubscheduleType": "number: subschedule type (RITCHARACTERISTICS=1, RITEXPOSURES=2, CONTRACTS=3",
                "Name": "string: subschedule name",
                "Ids": "number: a list of subschedule IDs",
                "Filter": "string",
                "ContractSubjectId": "number: contract subject ID"
            ]
        }
    ```

## Subschedule [/services/v1/ExposureService/subschedule]

### POST Subschedule [POST]
Creates a subschedule.

+ Request

    ```js
    { 
        "CDLTag": "string: contract definition language tag",
        "SubscheduleType": "number: subschedule type (RITCHARACTERISTICS=1, RITEXPOSURES=2, CONTRACTS=3",
        "Name": "string: subschedule name",
        "Ids": "number: a list of subschedule IDs",
        "Filter": "string",
        "ContractSubjectId": "number: contract subject ID"
    }
    ```

+ Response 201
    
    [Subschedule][]


# Group RiskItemSchedule
This section groups RiskItemSchedules.

## RiskItemSchedule [/services/v1/ExposureService/riskitemschedules/{Id}]


+ RiskItemSchedule Model (application/json)
    
    ```js
    { 
        "AccountID": "integer: import set ID",
        "AsOf": "string: date and time of the latest risk item schedule version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "Created": "string: account creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        "Description": "string: risk item schedule description",
        "Id": "long: risk item schedule ID",
        "ImportSetId": "integer: If the portfolio is imported, this is the ID of the import set to which the portfolio belonged. Otherwise set to null.",
        "Name": "string: risk item schedule name",
        "Number": "string: risk item schedule number",
        "Owner": "integer: the user ID of the person who submitted the job",
        "SourceId": "string: ID of the external source.
    }
    ```


### GET RiskItemSchedule [GET]
Returns the specified RiskItemSchedule.

+ Response 200
    
    [RiskItemSchedule][]


### DELETE RiskItemSchedule [DELETE]
Deletes the selected riskItemSchedule instance.

+ Response 204


    
## RiskItemSchedules [/services/v1/ExposureService/riskitemschedules/{?accountId, asOf, created, description, id, importSetId, limit, name, number, offset, owner, sourceId}]

### GET riskitemschedules [GET]
Returns a list of subschedules. Supports standard filters, for example number of records to return per page and sorting. The riskItemSchedules resource supports the following nested request:


* GET riskitemschedules from Accounts

+ Parameters
   + accountId (integer, optional) ... Exposed party's ID.
   + asOf (string: datetime, optional) ... The date and time of the latest risk item schedule version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + created (string: datetime, optional) ... Account creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + description (string, optional) ... Risk item schedule description.   
   + id (long, optional) ... Risk item schedule ID.
   + importSetId (integer, optional) ... ID of the import set to which an imported portfolio belongs.
   + limit (number, optional) ... Number of records to return per page.
   + name (string) ... Risk item schedule name.
   + number (string, optional) ... Risk item schedule number.
   + offset (number, optional) ... Return results starting with this record number (0-based).
   + owner (integer, optional) ... The user ID of the person who submitted the job.
   + sourceId (string, optional) ... ID of the external source.

+ Response 200

    ```js
        {
            "Count": "number: total number of existing RiskItemSchedules",
            RiskItemSchedules:[
            
            {
                "AccountID": "integer: import set ID",
                "AsOf": "string: date and time of the latest risk item schedule version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "Created": "string: account creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "Description": "string: risk item schedule description",
                "Id": "long: risk item schedule ID",
                "ImportSetId": "integer: If the portfolio is imported, this is the ID of the import set to which the portfolio belonged. Otherwise set to null.",
                "Name": "string: risk item schedule name",
                "Number": "string: risk item schedule number",
                "Owner": "integer: the user ID of the person who submitted the job",
                "SourceId": "string: ID of the external source.
            },
            {
                "Id": "number: risk item schedule ID",
                "Name": "string: risk item schedule name",
                "Number": "string: risk item schedule number",
                "Description": "string: risk item schedule description",
                "AccountID": "number: import set ID",
                "ImportSetId": "number: If the portfolio is imported, this is the ID of the import set to which the portfolio belonged. Otherwise set to null.",
                "Owner": "number: the user ID of the person who submitted the job",
                "SourceId": "string: ID of the external source.
                "Created": "string: account creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "AsOfDate": "string: date and time of the latest risk item schedule version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
            },
            {
                "Id": "number: risk item schedule ID",
                "Name": "string: risk item schedule name",
                "Number": "string: risk item schedule number",
                "Description": "string: risk item schedule description",
                "AccountID": "number: import set ID",
                "ImportSetId": "number: If the portfolio is imported, this is the ID of the import set to which the portfolio belonged. Otherwise set to null.",
                "Owner": "number: the user ID of the person who submitted the job",
                "SourceId": "string: ID of the external source.
                "CreateDate": "string: account creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "AsOfDate": "string: date and time of the latest risk item schedule version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time."
    ```

## RiskItemSchedules [/services/v1/ExposureService/Accounts/{id}/riskitemschedules/{?accountId, asOf,  created, description, id, importSetId, limit, name, number, offset, owner, sourceId}]

### GET riskitemschedules from Accounts [GET]
Returns a list of subschedules. Supports standard filters, for example number of records to return per page and sorting.

+ Parameters
   + accountId (integer) ... Exposed party's ID.
   + asOf (string: datetime, optional) ... The date and time of the latest risk item schedule version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + created (string: datetime, optional) ... Account creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.
   + description (string, optional) ... Risk item schedule description.   
   + id (long) ... Risk item schedule ID.
   + importSetId (integer, optional) ... ID of the import set to which an imported portfolio belongs.
   + limit (number, optional) ... Number of records to return per page.   
   + name (string) ... Risk item schedule name.
   + number (string, optional) ... Risk item schedule number.
   + offset (number, optional) ... Return results starting with this record number (0-based).   
   + owner (integer, optional) ... The user ID of the person who submitted the job.
   + sourceId (string, optional) ... ID of the external source.

+ Response 200

    ```js
        {
            "Count": "number: total number of RiskItemSchedules that exist"
            [
                "Id": "number: risk item schedule ID",
                "Name": "string: risk item schedule name",
                "Number": "string: risk item schedule number",
                "Description": "string: risk item schedule description",
                "AccountID": "number: import set ID",
                "ImportSetId": "number: If the portfolio is imported, this is the ID of the import set to which the portfolio belonged. Otherwise set to null.",
                "Owner": "number: the user ID of the person who submitted the job",
                "SourceId": "string: ID of the external source.
                "Created": "string: account creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "AsOfDate": "string: date and time of the latest risk item schedule version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
            ],
            [
                "Id": "number: risk item schedule ID",
                "Name": "string: risk item schedule name",
                "Number": "string: risk item schedule number",
                "Description": "string: risk item schedule description",
                "AccountID": "number: import set ID",
                "ImportSetId": "number: If the portfolio is imported, this is the ID of the import set to which the portfolio belonged. Otherwise set to null.",
                "Owner": "number: the user ID of the person who submitted the job",
                "SourceId": "string: ID of the external source.
                "Created": "string: account creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "AsOfDate": "string: date and time of the latest risk item schedule version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
            ],
            [
                "Id": "number: risk item schedule ID",
                "Name": "string: risk item schedule name",
                "Number": "string: risk item schedule number",
                "Description": "string: risk item schedule description",
                "AccountID": "number: import set ID",
                "ImportSetId": "number: If the portfolio is imported, this is the ID of the import set to which the portfolio belonged. Otherwise set to null.",
                "Owner": "number: the user ID of the person who submitted the job",
                "SourceId": "string: ID of the external source.
                "Created": "string: account creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                "AsOfDate": "string: date and time of the latest risk item schedule version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
        }
    ```

## RiskItemSchedules [/services/v1/ExposureService/riskitemschedules]

### POST RiskItemSchedules [POST]
Creates a risk item schedule.

+ Request

    ```js
        {
            "AccountID": "integer: import set ID",
            "AsOf": "string: date and time of the latest risk item schedule version in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
            "Created": "string: account creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
            "Description": "string: risk item schedule description",
            "Id": "long: risk item schedule ID",
            "ImportSetId": "integer: If the portfolio is imported, this is the ID of the import set to which the portfolio belonged. Otherwise set to null.",
            "Name": "string: risk item schedule name",
            "Number": "string: risk item schedule number",
            "Owner": "integer: the user ID of the person who submitted the job",
            "SourceId": "string: ID of the external source."
            },
    ```

+ Response 201
    
    [RiskItemSchedule][]



# Group ContractSubject
This section groups contract subject resources.

## ContractSubject [/services/v1/ExposureService/contractsubjects/{subjectExposureId}]


+ ContractSubject Model (application/json)
    
    ```js
        {
            "AccountId": "number: account id",
            "AccountName": "string: account name",
            "CededContractIds": "string: list of ceded contract IDs",
            "InuringContractFilter": "string: valid filter",
            "InuringContractFilterId": "number: filter ID",
            "InuringContractFilterName": "string:  filter name",
            "IsInuringContractFac": "boolean: Indicates whether this instance is an inuring contract fac",
            "IsInuringContractPerRisk": "boolean: Indicates whether this instance is an inuring contract per risk",
            "LossScaling": "string: loss scaling",
            "Name": "Pstring: contract aubject name.",
            "SubjectExposureId": "number: subject exposure ID",
            "SubjectExposureName": "string: subject exposure name,
            "SubjectExposureType": "number: subject exposure type - Portfolios - RiskItemSchedules, CedantExposures",
            "SubjectFilter": "string: subject filtr",
            "SubjectFilterId": "string: subject filter ID.",
            "SubjectFilterName": "string: subject filter name.",
            "UILabel": "string: UI label."
        }
    ```

## ContractSubject [/services/v1/ExposureService/contractsubjects]

### POST ContractSubject [POST]
Creates a ContractSubject.

+ Request

    ```js
    { 
    }
    ```

+ Response 201
    
    [ContractSubject][]


## ContractSubject [/services/v1/ExposureService/contractsubjects/{?subjectExposureId, isInuringContractFilter, subjectExposureTypeId}]

### PUT ContractSubject [PUT]
Updates the specified contract subject.

+ Request

    ```js
    { 
        "Description": "string: modification description.",
        "ExposureTypeId": "integer: exposure type ID,
        "Name": "string: contract subject name.",
        "SourceId": "string: ID of the external source."
        "CreationFilter": "string: filter information",
        "SubjectExposureId": "number: subject exposure ID.",
        "SubjectExposureTypeId": "number: subject exposure type ID."
    }
    ```


+ Response 200
    
    [ContractSubject][]    

    
## ContractSubjects [/services/v1/ExposureService/contractsubjects/{?accountId, accountName, cedantContractIds, exposureId, inuringContractFilter, inuringContractFilterId, inuringContractFilterName, isInuringContractFac, isInuringContractPerRisk, limit, lossScaling, name, offset, subjectExposureId, subjectExposureType, subjectFilterId, subjectFilterName, subjectFilter, uiLabel}]


### GET ContractSubjects [GET]
Returns a list of contract subjects. Supports standard filters, for example number of records to return per page and sorting.

+ Parameters
   + accountId (long, optional) ... Account ID.
   + accountName (string, optional) ... Account name.
   + cedantContractIds (string, optional) ... List of cedant contract IDs.
   + exposureId (number) ... Portfolio ID, cedant exposure or risk item schedule.
   + inuringContractFilter (string, optional) ... Inuring contract filter.
   + inuringContractFilterId (long, optional) ... Inuring contract filter ID.
   + inuringContractFilterName (string, optional) ... Inuring contract filter name. 
   + isInuringContractFac (boolean, optional) ... Indicates whether this instance is an inuring contract fac.
   + isInuringContractPerRisk (boolean, optional) ... Indicates whether this instance is an inuring contract per risk.
   + limit (number, optional) ... Number of records to return per page.
   + lossScaling (double, optional) ... Loss scaling.
   + name (string) ... Subject name.
   + offset (number, optional) ... Return results starting with this record number (0-based).   
   + subjectExposureId (long) ... Subject exposure ID.
   + subjectExposureType (integer) ... Subject exposure type.
   + subjectFilter (string) ... Subject filter.
   + subjectFilterId (long) ... Subject filter ID.
   + subjectFilterName (string) ... Subject filter name.
   + uiLabel (string, optional) ... UI label. 

+ Response 200

    ```js
        {
            [
                {
                    "AccountId": "number: account id",
                    "AccountName": "string: account name",
                    "CededContractIds": "string: list of ceded contract IDs",
                    "InuringContractFilterEql": "string: valid filter",
                    "InuringContractFilterId": "number: filter ID",
                    "InuringContractFilterName": "string:  filter name",
                    "IsInuringContractFac": "boolean: Indicates whether this instance is an inuring contract fac",
                    "IsInuringContractPerRisk": "boolean: Indicates whether this instance is an inuring contract per risk",
                    "LossScaling": "string: loss scaling",
                    "Name": "Pstring: contract aubject name.",
                    "SubjectExposureId": "number: subject exposure ID",
                    "SubjectExposureName": "string: subject exposure name,
                    "SubjectExposureType": "number: subject exposure type - Portfolios - RiskItemSchedules, CedantExposures",
                    "SubjectFilter": "string: subject filtr",
                    "SubjectFilterId": "string: subject filter ID.",
                    "SubjectFilterName": "string: subject filter name.",
                    "UILabel": "string: UI label."
                }
            ],
            [
                    "AccountId": "number: account id",
                    "AccountName": "string: account name",
                    "CededContractIds": "string: list of ceded contract IDs",
                    "InuringContractFilterEql": "string: valid eql",
                    "InuringContractFilterId": "number: filter ID",
                    "InuringContractFilterName": "string:  filter name",
                    "IsInuringContractFac": "boolean: Indicates whether this instance is an inuring contract fac",
                    "IsInuringContractPerRisk": "boolean: Indicates whether this instance is an inuring contract per risk",
                    "LossScaling": "string: loss scaling",
                    "Name": "Pstring: contract aubject name.",
                    "SubjectExposureId": "number: subject exposure ID",
                    "SubjectExposureName": "string: subject exposure name,
                    "SubjectExposureType": "number: subject exposure type - Portfolios - RiskItemSchedules, CedantExposures",
                    "SubjectFilter": "string: subject filter",
                    "SubjectFilterId": "string: subject filter ID.",
                    "SubjectFilterName": "string: subject filter name.",
                    "UILabel": "string: UI label."
                }
            ]
        }
    ```

# Group Output Templates
This section contains the output template resource.
Note: For this resource only you must add the end slash to the URL, for example, /services/v1/BIWidgetService/WidgetService/outputtemplates/.

## OutputTemplates [/services/v1/BIWidgetService/WidgetService/outputtemplates/{?code, componentCode, detail, message, list, totalTemplatesAvailable}]

### GET OutputTemplates [GET]
Returns a list of output templates.

+ Parameters
   + code (intger, optional) ... Code ID.
   + componentCode (string, optional) ... Component code.
   + detail (string, optional) ... Detailed description.
   + message (string, optional) ... Message field.
   + list (string, optional) ... List of template fields.
   + totalTemplatesAvailable (integer, optional) ... Number of templates available.

+ Response 200

    ```js
        { 
            "Code": "integer: Code ID",
            "ComponentCode": "string: Component code",
            "Detail": "string: Detailed description",
            "Message": "string: Message field",
            -"List": "list: List of template fields [
                  -{
                        "CreatedByUserID": "integer: User ID",
                        "CreatedDate": "string: creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                        "Id": "string: ID",
                        "AggregationProfileSetId": "integer: ID",
                        "AnalysisTypes": "string",
                        "DashboardTemplateType": "integer",
                        "DashboardType": "integer",
                        "Description": "string: Description",
                        "DetailTemplateType": "integer",
                        "HierarchyType": "integer",
                        "IsDefault": "boolean",
                        "IsDeleted": "boolean",
                        "Name": "string: Name",
                        "RQLSetId": "integer: ID",
                        "ReportZoneCollectionId": "integer",
                        "SelectedPerspectives": "string",
                        "Tabs": "string",
                        "TemplateExposureDataSourceInfoList": "string",
                        "Type": "integer",
                        "WidgetLayout": "string"",
                        "Widgets": "string",
                    },
                   -{
                        "CreatedByUserID": "integer: User ID",
                        "CreatedDate": "string: creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                        "Id": "string: ID",
                        "AggregationProfileSetId": "integer: ID",
                        "AnalysisTypes": "string",
                        "DashboardTemplateType": "integer",
                        "DashboardType": "integer",
                        "Description": "string: Description",
                        "DetailTemplateType": "integer",
                        "HierarchyType": "integer",
                        "IsDefault": "boolean",
                        "IsDeleted": "boolean",
                        "Name": "string: Name",
                        "RQLSetId": "integer: ID",
                        "ReportZoneCollectionId": "integer",
                        "SelectedPerspectives": "string",
                        "Tabs": "string",
                        "TemplateExposureDataSourceInfoList": "string",
                        "Type": "integer",
                        "WidgetLayout": "string"",
                        "Widgets": "string",
                    },    
                   -{
                        "CreatedByUserID": "integer: User ID",
                        "CreatedDate": "string: creation date and time in the format YYYYMMDDThh:mm:ss:sssZ for UTC time.",
                        "Id": "string: ID",
                        "AggregationProfileSetId": "integer: ID",
                        "AnalysisTypes": "string",
                        "DashboardTemplateType": "integer",
                        "DashboardType": "integer",
                        "Description": "string: Description",
                        "DetailTemplateType": "integer",
                        "HierarchyType": "integer",
                        "IsDefault": "boolean",
                        "IsDeleted": "boolean",
                        "Name": "string: Name",
                        "RQLSetId": "integer: ID",
                        "ReportZoneCollectionId": "integer",
                        "SelectedPerspectives": "string",
                        "Tabs": "string",
                        "TemplateExposureDataSourceInfoList": "string",
                        "Type": "integer",
                        "WidgetLayout": "string"",
                        "Widgets": "string",
                    }    
                ],
                "TotalTemplatesAvailable": "integer"        
        }
        
        ``` 
